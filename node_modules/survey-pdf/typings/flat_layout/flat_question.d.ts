import { IQuestion, Question } from 'survey-core';
import { SurveyPDF } from '../survey';
import { IPoint, DocController } from '../doc_controller';
import { IPdfBrick } from '../pdf_render/pdf_brick';
export interface IFlatQuestion {
    generateFlatsContent(point: IPoint): Promise<IPdfBrick[]>;
    generateFlats(point: IPoint): Promise<IPdfBrick[]>;
}
export declare class FlatQuestion implements IFlatQuestion {
    protected survey: SurveyPDF;
    protected controller: DocController;
    static CONTENT_GAP_VERT_SCALE: number;
    static CONTENT_GAP_HOR_SCALE: number;
    static CONTENT_INDENT_SCALE: number;
    static DESC_GAP_SCALE: number;
    protected question: Question;
    constructor(survey: SurveyPDF, question: IQuestion, controller: DocController);
    private generateFlatTitle;
    private generateFlatDescription;
    private generateFlatHeader;
    private generateFlatsComment;
    generateFlatsComposite(point: IPoint): Promise<IPdfBrick[]>;
    generateFlatsContent(point: IPoint): Promise<IPdfBrick[]>;
    generateFlatsContentWithOptionalElements(point: IPoint): Promise<IPdfBrick[]>;
    generateFlats(point: IPoint): Promise<IPdfBrick[]>;
    protected get shouldRenderAsComment(): boolean;
}
