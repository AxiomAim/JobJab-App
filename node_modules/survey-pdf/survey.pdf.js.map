{"version":3,"file":"survey.pdf.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;ACVa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,0DAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjgCAAggCAAgC,yBAAyB;AACzD;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,mCAAmC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,kCAAkC,kCAAkC;AACpE;AACA;AACA,kCAAkC,kCAAkC;AACpE;AACA;AACA,8DAA8D,gBAAgB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD,kBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;AACf;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA,wDAAwD;AACxD;AACA,iC;;;;;;;;;;ACnsBA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,oBAAoB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC7C4C;AAEG;AAE/C,+BAA+B;AACiC;AAC3B;AACC;AA+NtC;IAqBI,oBAAmB,OAAoB;QAAvC,iBA8DC;QA1ES,kBAAa,GAAW,SAAS,CAAC;QAClC,gBAAW,GAAW,SAAS,CAAC;QAYtC,IAAI,OAAO,OAAO,CAAC,WAAW,KAAK,WAAW,EAAE,CAAC;YAC7C,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,WAAW;gBACrC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;gBACxC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YAC5B,CAAC;;gBACI,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACjC,CAAC;;YACI,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC;QACtC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,GAAG,UAAU,CAAC,QAAQ,EAAvB,CAAuB,CAAC,CAAC;QAClE,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,IAAI,UAAU,CAAC,SAAS,CAAC;QAC1D,IAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACnB,IAAG,CAAC,UAAU,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;gBACpD,IAAI,CAAC,SAAS,GAAG,wDAAY,CAAC,aAAa,CAAC;YAChD,CAAC;iBAAM,CAAC;gBACJ,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;YAC7B,CAAC;QACL,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;QACtC,CAAC;QACD,IAAI,CAAC,OAAO,OAAO,CAAC,QAAQ,KAAK,WAAW;YACxC,CAAC,OAAO,OAAO,CAAC,YAAY,KAAK,WAAW;gBACxC,OAAO,OAAO,CAAC,UAAU,KAAK,WAAW,CAAC,CAAC,EAAE,CAAC;YAClD,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,UAAU,CAAC;YAChE,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,YAAY,CAAC;QAClE,CAAC;aACI,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE,CAAC;YACjC,2CAA2C;YAC3C,uCAAuC;YACvC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,YAAY,CAAC;YAC7C,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC;QAC7C,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,wDAAY,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACpD,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACvB,CAAC;QACD,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,WAAW,EAAE,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC;QAC7B,CAAC;QACD,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,WAAW,EAAE,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC;QAC7B,CAAC;QACD,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,CAAC;QACD,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,WAAW,EAAE,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;QAC/B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,IAAY;YACtC,KAAI,CAAC,QAAS,CAAC,IAAI,CAAC,GAAS,KAAI,CAAC,QAAS,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC;QAClF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,YAAY,IAAI,MAAM,CAAC;QACpD,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,cAAc,IAAI,MAAM,CAAC;QACxD,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,gBAAgB,IAAI,MAAM,CAAC;QAC5D,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAC;QAC3C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,aAAa,IAAI,KAAK,CAAC;QACrD,IAAI,CAAC,0BAA0B,GAAG,OAAO,CAAC,yBAAyB,IAAI,KAAK,CAAC;QAC7E,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC;QACrC,IAAI,CAAC,0BAA0B,GAAG,OAAO,CAAC,yBAAyB,IAAI,KAAK,CAAC;IACjF,CAAC;IACD,sBAAW,oCAAY;aAAvB;YACI,OAAO;gBACH,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;gBACxB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;aACzB,CAAC;QACN,CAAC;;;OAAA;IACD,sBAAW,gCAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IACD,sBAAW,gCAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IACD,sBAAW,oCAAY;aAAvB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IACD,sBAAW,kCAAU;aAArB;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IACD,sBAAW,2CAAmB;aAA9B;YACI,OAAO,IAAI,CAAC,oBAAoB,CAAC;QACrC,CAAC;;;OAAA;IACD,sBAAW,+BAAO;aAAlB;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;;;OAAA;IACD,sBAAW,8BAAM;aAAjB;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IACD,sBAAW,mCAAW;aAAtB;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;;;OAAA;IACD,sBAAW,oCAAY;aAAvB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IACD,sBAAW,sCAAc;aAAzB;YACI,OAAO,IAAI,CAAC,eAAe,CAAC;QAChC,CAAC;;;OAAA;IACD,sBAAW,wCAAgB;aAA3B;YACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAClC,CAAC;;;OAAA;IACD,sBAAW,gCAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IACD,sBAAW,qCAAa;aAAxB;YACI,OAAO,IAAI,CAAC,cAAc,CAAC;QAC/B,CAAC;;;OAAA;IACD,sBAAW,iDAAyB;aAApC;YACI,OAAO,IAAI,CAAC,0BAA0B,CAAC;QAC3C,CAAC;;;OAAA;IACD,sBAAW,6BAAK;aAAhB;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IACD,sBAAW,iDAAyB;aAApC;YACI,OAAO,IAAI,CAAC,0BAA0B,CAAC;QAC3C,CAAC;;;OAAA;IAxIsB,mBAAQ,GAAG,EAAE,GAAG,IAAI,CAAC;IACrB,oBAAS,GAAG,EAAE,CAAC;IAwI1C,iBAAC;CAAA;AA1IsB;AA4IvB;;;;GAIG;AACH;IAAmC,wEAAU;IAKzC,uBAAmB,OAAyB;QAAzB,sCAAyB;QACxC,kBAAK,YAAC,OAAO,CAAC,SAAC;QACf,IAAM,YAAY,GAAiB;YAC/B,WAAW,EAAE,KAAI,CAAC,WAAW;YAC7B,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,KAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,KAAI,CAAC,QAAQ;SAC1B,CAAC;QACF,KAAI,CAAC,IAAI,GAAG,IAAI,wCAAK,CAAC,YAAY,CAAC,CAAC;QACpC,IAAI,OAAO,KAAI,CAAC,YAAY,KAAK,WAAW,IAAI,CAAC,wDAAY,CAAC,WAAW,CAAC,KAAI,EAAE,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC7F,aAAa,CAAC,OAAO,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;YAClE,aAAa,CAAC,OAAO,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAC9D,KAAI,CAAC,IAAI,GAAG,IAAI,wCAAK,CAAC,YAAY,CAAC,CAAC;QACxC,CAAC;QACD,yEAAkB,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,KAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,mBAAmB,IAAI,wDAAY,CAAC,WAAW,CAAC,KAAI,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QACzG,KAAI,CAAC,UAAU,GAAG,IAAI,wCAAK,CAAC,YAAY,CAAC,CAAC;QAC1C,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC3C,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC3B,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;;IAC3B,CAAC;IAED;;;;;;;OAOG;IACW,qBAAO,GAArB,UAAsB,QAAgB,EAAE,MAAc,EAAE,SAAsD;QAC1G,IAAI,IAAI,GAAG,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,EAAE,CAAC;YACR,IAAI,GAAQ,EAAE,CAAC;YACf,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;QAC/C,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC;QACzB,IAAM,eAAe,GAAe;YAChC,IAAM,UAAU,GAAG,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YACvD,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC1C,IAAM,QAAQ,GAAW,UAAG,QAAQ,cAAI,SAAS,SAAM,CAAC;gBACxD,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YAChD,CAAC;QACL,CAAC,CAAC;QACI,wCAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,sBAAW,8BAAG;aAAd;YACI,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IACD,sBAAW,oCAAS;aAApB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IACD,sBAAW,mCAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aACD,UAAoB,QAAgB;YAChC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC;;;OALA;IAMD,sBAAW,mCAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aACD,UAAoB,QAAgB;YAChC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC;;;OALA;IAMD,sBAAW,oCAAS;aAApB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;aACD,UAAqB,SAAiB;YAClC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YAC7C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACvD,CAAC;;;OALA;IAMM,mCAAW,GAAlB,UAAmB,IAA6C,EAAE,SAAmC,EACjG,QAAiC;QADrC,iBAqBC;QArBkB,+BAA6C;QAAE,wCAAoB,IAAI,CAAC,UAAU;QACjG,sCAAmB,IAAI,CAAC,SAAS;QACjC,IAAM,WAAW,GAAW,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACnD,IAAM,MAAM,GAAW,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC9F,IAAI,KAAK,GAAW,GAAG,CAAC;QACxB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC3B,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC;QAC1B,CAAC;aACI,CAAC;YACF,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,wDAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACzE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,UAAC,EAAU,EAAE,EAAU;gBACjD,SAAE,GAAG,KAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC;YAArC,CAAqC,EAAE,GAAG,CAAC,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAClD,OAAO;YACH,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;SACjB,CAAC;IACN,CAAC;IAID,sBAAW,oCAAS;QAHpB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC;QACpC,CAAC;;;OAAA;IAID,sBAAW,qCAAU;QAHrB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC;QACrC,CAAC;;;OAAA;IACM,mCAAW,GAAlB,UAAmB,IAAa,EAAE,KAAc;QAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/E,IAAI,OAAO,IAAI,KAAK,WAAW;YAAE,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QAC1D,IAAI,OAAO,KAAK,KAAK,WAAW;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACjE,CAAC;IACM,kCAAU,GAAjB;QACI,IAAM,OAAO,GAAc,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;QACnD,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IACvC,CAAC;IAID,sBAAW,qCAAU;QAHrB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC5C,CAAC;;;OAAA;IAID,sBAAW,sCAAW;QAHtB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC7C,CAAC;;;OAAA;IACM,wCAAgB,GAAvB;QACI,OAAO,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;IACvC,CAAC;IACM,+BAAO,GAAd;QACI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IACM,2CAAmB,GAA1B;QACI,OAAO,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC;IACxD,CAAC;IACM,+BAAO,GAAd,UAAe,KAAa;QACxB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IAChC,CAAC;IA3Ha,yBAAW,GAA6F,EAAE,CAAC;IA4H7H,oBAAC;CAAA,CAzJkC,UAAU,GAyJ5C;AAzJyB;;;;;;;;;;;;;;;;;;;;;;ACrX1B,IAAI,aAAa,GAAG,UAAS,CAAM,EAAE,CAAM;IACvC,aAAa,GAAG,MAAM,CAAC,cAAc;QACrC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClG,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEK,SAAS,SAAS,CAAC,CAAM,EAAE,CAAM;IACpC,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,IAAI;QACrC,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;IAC9F,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;IACvC,6DAA6D;IAC7D,aAAa;IACb,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AACzF,CAAC;AAEM,IAAI,QAAQ,GAAG;IAClB,QAAQ,GAAS,MAAO,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAM;QACvD,KAAK,IAAI,CAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACvD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,CAAC;QACD,OAAO,CAAC,CAAC;IACb,CAAC,CAAC;IACF,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC3C,CAAC,CAAC;AAEK,SAAS,MAAM,CAAC,CAAM,EAAE,CAAM;IACjC,IAAI,CAAC,GAAQ,EAAE,CAAC;IAChB,KAAK,IAAI,CAAC,IAAI,CAAC;QAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;YAC/E,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;QAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACrE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC;IACL,OAAO,CAAC,CAAC;AACb,CAAC;AAEM,SAAS,UAAU,CAAC,UAAe,EAAE,MAAW,EAAE,GAAQ,EAAE,IAAS;IACxE,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;QAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/H,0CAA0C;;QACrC,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;gBAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAClE,CAAC;AAEM,SAAS,SAAS,CAAC,OAAY,EAAE,UAAe,EAAE,CAAM,EAAE,SAAc;IAC3E,SAAS,KAAK,CAAC,KAAU,IAAI,OAAO,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,OAAY,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtH,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,UAAU,OAAY,EAAE,MAAW;QAC/D,SAAS,SAAS,CAAC,KAAU,IAAI,IAAI,CAAC;YAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAAC,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAAC,CAAC,CAAC,CAAC;QAChG,SAAS,QAAQ,CAAC,KAAU,IAAI,IAAI,CAAC;YAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAAC,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAAC,CAAC,CAAC,CAAC;QACnG,SAAS,IAAI,CAAC,MAAW,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnH,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;AACP,CAAC;AAEM,SAAS,WAAW,CAAC,OAAY,EAAE,IAAS;IAC/C,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAO,EAAE,EAAE,GAAG,EAAO,EAAE,EAAE,EAAE,CAAM,EAAE,CAAM,EAAE,CAAM,EAAE,CAAM,CAAC;IAC/I,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACzJ,SAAS,IAAI,CAAC,CAAM,IAAI,OAAO,UAAU,CAAM,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,SAAS,IAAI,CAAC,EAAO;QACjB,IAAI,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;QAC9D,OAAO,CAAC;YAAE,IAAI,CAAC;gBACX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;oBAAE,OAAO,CAAC,CAAC;gBAC7J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;oBAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;gBACxC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;oBACZ,KAAK,CAAC,CAAC;oBAAC,KAAK,CAAC;wBAAE,CAAC,GAAG,EAAE,CAAC;wBAAC,MAAM;oBAC9B,KAAK,CAAC;wBAAE,CAAC,CAAC,KAAK,EAAE,CAAC;wBAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;oBACxD,KAAK,CAAC;wBAAE,CAAC,CAAC,KAAK,EAAE,CAAC;wBAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;wBAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;wBAAC,SAAS;oBACjD,KAAK,CAAC;wBAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;wBAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;wBAAC,SAAS;oBACjD;wBACI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;4BAAO,CAAE,GAAG,CAAC,CAAC;4BAAC,SAAS;wBAAC,CAAC;wBACnH,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;4BAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;4BAAC,MAAM;wBAAC,CAAC;wBACtF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;4BAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BAAC,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;wBAAC,CAAC;wBACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;4BAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BAAC,MAAM;wBAAC,CAAC;wBACnE,IAAI,CAAC,CAAC,CAAC,CAAC;4BAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;wBACtB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;wBAAC,SAAS;gBAC/B,CAAC;gBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAC/B,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC;oBAAS,CAAC;gBAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC;QAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;YAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;QAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACrF,CAAC;AACL,CAAC;AAEM,SAAS,aAAa,CAAE,EAAO,EAAE,IAAS,EAAE,IAAS;IACxD,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;QAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAO,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACvF,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC;gBACrB,IAAI,CAAC,EAAE;oBAAE,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrD,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC;QACL,CAAC;IACD,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7D,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGqC;AACU;AACqE;AACrD;AACW;AACT;AACe;AACrB;AACO;AACT;AACE;AACI;AACZ;AACA;AACE;AACY;AACE;AACJ;AACN;AACF;AACA;AACQ;AACI;AACV;AACF;AACA;AACgB;AACF;AACF;AACZ;AACM;AACmF;AACnF;AACG;AACE;AACN;AACA;AACN;AACI;AACN;AACF;AACE;AACF;AACU;AACI;AACR;AACI;AACF;AACR;AACY;AAEb;AAClD,iEAAmB,CAAC,UAAG,OAAmB,CAAE,EAAE,YAAY,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;AC/C5D;IAOI,6BAAmB,KAAa,EAAE,MAAmB,EACjD,UAAyB,EAAE,UAA0B,EAAE,MAAW;QAClE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IACL,0BAAC;AAAD,CAAC;;AACD;IAAqC,0EAAmB;IAEpD,yBAAmB,KAAa,EAAE,MAAmB,EACjD,QAAkB,EAAE,UAAyB,EAC7C,UAA0B,EAAE,MAAW;QACvC,kBAAK,YAAC,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,CAAC,SAAC;QACrD,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;IAC7B,CAAC;IACL,sBAAC;AAAD,CAAC,CARoC,mBAAmB,GAQvD;;AACD;IAA0C,+EAAmB;IAEzD,8BAAmB,KAAa,EAAE,MAAmB,EACjD,KAAiB,EAAE,UAAyB,EAC5C,UAA0B,EAAE,MAAW;QACvC,kBAAK,YAAC,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,CAAC,SAAC;QACrD,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;IACvB,CAAC;IACL,2BAAC;AAAD,CAAC,CARyC,mBAAmB,GAQ5D;;AAED;IAAyC,8EAAmB;IAExD,6BAAmB,KAAa,EAAE,MAAmB,EACjD,IAAe,EAAE,UAAyB,EAC1C,UAA0B,EAAE,MAAW;QACvC,kBAAK,YAAC,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,CAAC,SAAC;QACrD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACrB,CAAC;IACL,0BAAC;AAAD,CAAC,CARwC,mBAAmB,GAQ3D;;;;;;;;;;;;;;;;;;;;;;;;;AChDoF;AAElC;AACQ;AACX;AAEhD;;GAEG;AACH,IAAY,eAKX;AALD,WAAY,eAAe;IACvB,oCAAiB;IACjB,gCAAa;IACb,oCAAiB;IACjB,kCAAe;AACnB,CAAC,EALW,eAAe,KAAf,eAAe,QAK1B;AACD;;GAEG;AACH,IAAY,aAKX;AALD,WAAY,aAAa;IACrB,kCAAiB;IACjB,4BAAW;IACX,kCAAiB;IACjB,kCAAiB;AACrB,CAAC,EALW,aAAa,KAAb,aAAa,QAKxB;AA+ED;;;;GAIG;AACH;IACI,oBAA0B,KAAkB,EACjC,UAAyB,EACtB,KAAY,EACZ,WAAmB,EACnB,WAAmB;QAJP,UAAK,GAAL,KAAK,CAAa;QACjC,eAAU,GAAV,UAAU,CAAe;QACtB,UAAK,GAAL,KAAK,CAAO;QACZ,gBAAW,GAAX,WAAW,CAAQ;QACnB,gBAAW,GAAX,WAAW,CAAQ;IAAI,CAAC;IAItC,sBAAW,iCAAS;QAHpB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IACD,sBAAW,kCAAU;aAArB;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IAID,sBAAW,kCAAU;QAHrB;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IAID,sBAAW,4BAAI;QAHf;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IACO,8BAAS,GAAjB,UAAkB,WAA6B,EAAE,QAAe;QAC5D,IAAI,OAAO,WAAW,CAAC,OAAO,KAAK,WAAW,EAAE,CAAC;YAC7C,WAAW,CAAC,OAAO,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACxE,CAAC;aACI,CAAC;YACF,IAAI,OAAO,WAAW,CAAC,OAAO,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;gBAClD,WAAW,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC;YACnC,CAAC;YACD,IAAI,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,KAAK,WAAW,EAAE,CAAC;gBACnD,WAAW,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC;YACpC,CAAC;YACD,IAAI,OAAO,WAAW,CAAC,OAAO,CAAC,GAAG,KAAK,WAAW,EAAE,CAAC;gBACjD,WAAW,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;YAClC,CAAC;YACD,IAAI,OAAO,WAAW,CAAC,OAAO,CAAC,GAAG,KAAK,WAAW,EAAE,CAAC;gBACjD,WAAW,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;YAClC,CAAC;QACL,CAAC;QACD,IAAI,OAAO,WAAW,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;YAC1C,IAAI,OAAO,WAAW,CAAC,eAAe,KAAK,WAAW;gBAClD,WAAW,CAAC,eAAe,KAAK,eAAe,CAAC,MAAM,EAAE,CAAC;gBACzD,WAAW,CAAC,eAAe,GAAG,eAAe,CAAC,MAAM,CAAC;YACzD,CAAC;YACD,IAAI,OAAO,WAAW,CAAC,aAAa,KAAK,WAAW;gBAChD,WAAW,CAAC,aAAa,KAAK,aAAa,CAAC,MAAM,EAAE,CAAC;gBACrD,WAAW,CAAC,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC;YACrD,CAAC;QACL,CAAC;QACD,IAAM,IAAI,GAAU,wDAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,OAAO,WAAW,CAAC,eAAe,KAAK,WAAW,EAAE,CAAC;YACrD,QAAQ,WAAW,CAAC,eAAe,EAAE,CAAC;gBAClC,KAAK,eAAe,CAAC,IAAI;oBACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC;oBACxD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,EAC/D,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACjE,MAAM;gBACV,KAAK,eAAe,CAAC,MAAM;oBACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,EAC5D,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;oBACjE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,EAC/D,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;oBACjE,MAAM;gBACV,KAAK,eAAe,CAAC,KAAK;oBACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,EAC5D,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACnE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC;oBAC3D,MAAM;YACd,CAAC;QACL,CAAC;aACI,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACvD,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC9D,CAAC;QACD,IAAI,OAAO,WAAW,CAAC,aAAa,KAAK,WAAW,EAAE,CAAC;YACnD,QAAQ,WAAW,CAAC,aAAa,EAAE,CAAC;gBAChC,KAAK,aAAa,CAAC,GAAG;oBAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC;oBACrD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,EACzD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAChE,MAAM;gBACV,KAAK,aAAa,CAAC,MAAM;oBACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,EACzD,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;oBAC/D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,EACzD,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;oBAC/D,MAAM;gBACV,KAAK,aAAa,CAAC,MAAM;oBACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,EACzD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAChE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC;oBACrD,MAAM;YACd,CAAC;QACL,CAAC;aACI,CAAC;YACF,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACpD,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxD,CAAC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACD;;;;;OAKG;IACI,6BAAQ,GAAf,UAAgB,WAA6B;QACzC,WAAW,GAAG,wDAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,OAAO,WAAW,CAAC,QAAQ,KAAK,WAAW,EAAE,CAAC;YAC9C,WAAW,CAAC,QAAQ,GAAG,uDAAU,CAAC,SAAS,CAAC;QAChD,CAAC;QACD,IAAI,OAAO,WAAW,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;YAC5C,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,CAAC;QACD,IAAM,QAAQ,GAAU,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAChE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;QAClE,IAAM,QAAQ,GAAU,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,2DAAS,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAC/C,QAAQ,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QACrC,CAAC;aACI,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,mEAAa,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EACnD,QAAQ,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QACrC,CAAC;QACU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;IAClF,CAAC;IACD;;;;;OAKG;IACU,8BAAS,GAAtB,UAAuB,YAA+B;;;;;;wBAClD,YAAY,GAAG,wDAAY,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;wBAChD,IAAI,OAAO,YAAY,CAAC,KAAK,KAAK,WAAW,EAAE,CAAC;4BAC5C,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;wBAC5D,CAAC;wBACD,IAAI,OAAO,YAAY,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;4BAC7C,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;wBAC1D,CAAC;wBACK,SAAS,GAAU;4BACrB,KAAK,EAAE,YAAY,CAAC,KAAK;4BACzB,MAAM,EAAE,YAAY,CAAC,MAAM;yBAC9B,CAAC;wBACI,SAAS,GAAU,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;wBACjE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBAClC,eAAI,CAAC,KAAK,EAAC,IAAI;wBAAC,qBAAM,wDAAY,CAAC,eAAe,CAC9C,wDAAY,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,EAC/C,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,YAAY,CAAC,MAAM;gCAC9C,KAAK,EAAE,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK;gCACzC,MAAM,EAAE,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,YAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;;wBAJ9I,cAAgB,SAI8H,EAAC,CAAC;wBAChJ,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;;;;;KAChC;IACL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AC3Q8C;AAIJ;AACK;AAEhD;IAAiD,qEAA0B;IAA3E;;IAcA,CAAC;IAbU,4BAAO,GAAd,UAAe,IAA+C;QAC1D,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAAE,OAAO;QAC/B,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAA6C,CAAC;QAC5E,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IACY,yBAAI,GAAjB,UAAkB,MAAc,EAAE,OAAgB;;;;;;wBAC9C,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI;4BAAE,sBAAO;wBAC1B,CAAC,GAAG,CAAC;;;6BAAE,EAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM;wBACrC,qBAAM,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC;;wBAAxC,SAAwC,CAAC;;;wBADF,CAAC,EAAE;;;;;;KAGjD;IACL,iBAAC;AAAD,CAAC,CAdgD,kDAAS,GAczD;;AACD;IAAA;IAkBA,CAAC;IAjBuB,kCAAqB,GAAzC,UAA0C,MAAiB,EACvD,UAAyB,EAAE,KAAoB;;;;;;wBAC/C,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;4BAChC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,MAAM;gCAChC,MAAM,CAAC,QAAQ,CAAC;oCACZ,IAAI,EAAE,iHAAiH;oCACvH,QAAQ,EAAE,EAAE;iCACf,CAAC,CAAC;4BACP,CAAC,CAAC,CAAC;wBACP,CAAC;wBACQ,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,KAAK,CAAC,MAAM;wBACpC,qBAAM,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,oDAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,UAAU,EACxE,wDAAY,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;;wBADpE,SACoE,CAAC;wBACrE,qBAAM,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,oDAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,UAAU,EACxE,wDAAY,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;;wBADpE,SACoE,CAAC;;;wBAJ/B,CAAC,EAAE;;;;;;KAMhD;IACL,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCiI;AAGnF;AACI;AAEA;AACc;AACJ;AACb;AACG;AAEnD;IAAyC,8EAAY;IAEjD,6BAAsB,MAAiB,EACnC,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFlB,YAAM,GAAN,MAAM,CAAW;QACJ,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAAyB,QAAQ,CAAC;;IACnD,CAAC;IACY,kDAAoB,GAAjC,UAAkC,KAAa;;;;;;wBACrC,aAAa,GAAmB,IAAI,qEAAc,EAAE,CAAC;wBACrD,MAAM,GAAW,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBAC5C,QAAQ,GAAc,IAAI,yEAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAC3E,wDAAY,CAAC,QAAQ,CACjB,wDAAY,CAAC,SAAS,CAAC,wDAAY,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,EACjE,wDAAY,CAAC,sBAAsB,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;wBAChE,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAC3B,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACpD,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,qBAAqB,CAAC;wBAC7F,YAAY,GAAsB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;4BAC1E,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;6BACtF,aAAY,KAAK,IAAI,IAAI,YAAY,CAAC,YAAY,KAAK,IAAI,GAA3D,wBAA2D;wBAC3D,wBAAa,EAAC,QAAQ;wBAAC,qBAAM,wDAAY,CAAC,cAAc,CACpD,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,YAAY,EAAE,2DAAS,CAAC;;wBADvE,cAAuB,SACgD,EAAC,CAAC;;4BAE7E,sBAAO,CAAC,aAAa,CAAC,EAAC;;;;KAC1B;IACL,0BAAC;AAAD,CAAC,CAzBwC,wDAAY,GAyBpD;;AACD;IAAiC,sEAAc;IAE3C,qBAAsB,MAAiB,EACnC,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFlB,YAAM,GAAN,MAAM,CAAW;QACJ,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,UAAU,EAAE,CAAC;;IACtB,CAAC;IACO,gCAAU,GAAlB;QACI,IAAM,QAAQ,GAA+B,IAAI,CAAC,QAAS,CAAC;QAC5D,IAAM,WAAW,GAAG,IAAI,kDAAS,CAAwB,QAAS,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAwB,QAAS,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACnJ,IAAM,UAAU,GAAG,IAAI,kDAAS,CAAwB,QAAS,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAwB,QAAS,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC/I,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAChC,WAAW,CAAC,UAAU,CAAwB,QAAS,CAAC,aAAa,CAAC,CAAC;QACvE,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC/B,UAAU,CAAC,UAAU,CAAwB,QAAS,CAAC,YAAY,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IAC3C,CAAC;IACS,uCAAiB,GAA3B;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IACS,iCAAW,GAArB;QACI,OAAO,CAAC,CAAC;IACb,CAAC;IACL,kBAAC;AAAD,CAAC,CAvBgC,4DAAc,GAuB9C;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAC9D,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;AC7D5B;AACA;AAEgB;AAEnE;IAAkC,uEAAc;IAE5C,sBAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAA0B,QAAQ,CAAC;;IACpD,CAAC;IACM,uCAAgB,GAAvB,UAAwB,IAAW,EAAE,IAAe,EAAE,KAAa;QAC/D,OAAO,IAAI,2EAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACpF,CAAC;IACL,mBAAC;AAAD,CAAC,CAViC,4DAAc,GAU/C;;AACD;IAAgC,qEAAY;IAExC,oBAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAAwB,QAAQ,CAAC;;IAClD,CAAC;IACS,sCAAiB,GAA3B;QACI,IAAG,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC3C,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;QACzC,CAAC;aAAM,CAAC;YACJ,OAAO,gBAAK,CAAC,iBAAiB,WAAE,CAAC;QACrC,CAAC;IACL,CAAC;IACL,iBAAC;AAAD,CAAC,CAd+B,YAAY,GAc3C;;AACD,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAC5D,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACnCQ;AAGzB;AACI;AAEH;AAEhD;IAAiC,sEAAY;IAEzC,qBAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAAyB,QAAQ,CAAC;;IACnD,CAAC;IACY,0CAAoB,GAAjC,UAAkC,KAAa;;;;4BACnC,qBAAM,wDAAY,CAAC,iBAAiB,CACxC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EACrC;4BACI,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;4BACxB,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;4BACpC,WAAW,EAAE,IAAI;4BACjB,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;4BAC3B,WAAW,EAAE,wDAAY,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;4BACpE,mBAAmB,EAAE,iDAAQ,CAAC,yBAAyB,KAAK,UAAU;4BACtE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;yBAC7B,CAAC;4BAVN,uBAAQ,SAUF,GAAE;;;;KACX;IACL,kBAAC;AAAD,CAAC,CApBgC,wDAAY,GAoB5C;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;AC3Bf;AACI;AAGnD;IAAqC,0EAAY;IAC7C,yBAAsB,MAAiB,EACnC,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFlB,YAAM,GAAN,MAAM,CAAW;QACJ,gBAAU,GAAV,UAAU,CAAe;;IAE5D,CAAC;IACY,8CAAoB,GAAjC,UAAkC,KAAa;;;;gBACrC,IAAI,GAAG,4DAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;gBACvH,sBAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAC;;;KAC3C;IACL,sBAAC;AAAD,CAAC,CAToC,wDAAY,GAShD;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACjBvB;AAEG;AACJ;AAE/C;IAAyC,8EAAY;IAArD;;IAKA,CAAC;IAJgB,kDAAoB,GAAjC,UAAkC,KAAa;;;;;4BACxB,qBAAM,wDAAY,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,UAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,EAAE,2DAAS,CAAC;;wBAAjI,UAAU,GAAG,SAAoH;wBACvI,sBAAO,CAAC,UAAU,CAAC,EAAC;;;;KACvB;IACL,0BAAC;AAAD,CAAC,CALwC,wDAAY,GAKpD;;;;;;;;;;;;;;;;;;;;;;;;;;ACXwE;AAG1B;AACI;AAEQ;AACE;AACb;AAEhD;IAAkC,uEAAY;IAE1C,sBAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAA0B,QAAQ,CAAC;;IACpD,CAAC;IACe,0CAAmB,GAAnC,UAAoC,KAAa;;;;;;wBACvC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;wBAChF,qBAAM,wDAAY,CAAC,iBAAiB,CACvC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE;gCACnC,SAAS,EAAE,YAAY,CAAC,EAAE;gCAC1B,IAAI,EAAE,wDAAY,CAAC,gBAAgB;gCACnC,KAAK,EAAE,YAAY,CAAC,YAAY,EAAE;gCAClC,mBAAmB,EAAE,iDAAQ,CAAC,yBAAyB,KAAK,UAAU;gCACtE,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;gCACpC,WAAW,EAAE,IAAI;6BACpB,CACJ;4BATD,sBAAO,SASN,EAAC;;;;KACL;IACY,2CAAoB,GAAjC,UAAkC,KAAa;;;;;;6BACxB,CAAC,IAAI,CAAC,qBAAqB,EAA3B,wBAA2B;wBAAG,SAAI,mEAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,wDAAY,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;;4BAAG,qBAAM,wDAAY,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EACrO;4BACI,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;4BAC3B,mBAAmB,EAAE,iDAAQ,CAAC,sBAAsB,KAAK,OAAO;4BAChE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,IAAI,EAAE;4BACvC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;4BACpC,WAAW,EAAE,wDAAY,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;yBACvE,CAAC;;wBAPyJ,cAOzJ;;;wBAPA,UAAU,KAOV;wBACA,aAAa,GAAmB,IAAI,qEAAc,CAAC,UAAU,CAAC,CAAC;6BACjE,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAApC,wBAAoC;wBAC9B,UAAU,GAAW,wDAAY,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;wBACnE,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,wDAAY,CAAC,gBAAgB,CAAC;wBAC9E,wBAAa,EAAC,QAAQ;wBAAC,qBAAM,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;;wBAAjE,cAAuB,SAA0C,EAAC,CAAC;;4BAEvE,sBAAO,CAAC,aAAa,CAAC,EAAC;;;;KAC1B;IACL,mBAAC;AAAD,CAAC,CArCiC,wDAAY,GAqC7C;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACjDW;AAG5B;AACI;AAEH;AAEhD;IAAoC,yEAAY;IAE5C,wBAA6B,MAAiB,EAC1C,QAAmB,EAAE,UAAyB;QAC9C,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QAG1C,KAAI,CAAC,QAAQ,GAA4B,QAAQ,CAAC;;IACtD,CAAC;IACY,6CAAoB,GAAjC,UAAkC,KAAa;;;;4BACnC,qBAAM,wDAAY,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE;4BAChF,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;4BACjC,UAAU,EAAE,IAAI;4BAChB,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;4BAC3B,mBAAmB,EAAE,iDAAQ,CAAC,sBAAsB,KAAK,OAAO;yBACnE,CAAC;4BALF,uBAAQ,SAKN,GAAE;;;;KACP;IACL,qBAAC;AAAD,CAAC,CAfmC,wDAAY,GAe/C;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACtBrB;AACI;AAEA;AACU;AACb;AAEhD;IAA8B,mEAAY;IAKtC,kBAA6B,MAAiB,EAC1C,QAAmB,EAAE,UAAyB;QAC9C,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QAG1C,KAAI,CAAC,QAAQ,GAAsB,QAAQ,CAAC;;IAChD,CAAC;IACa,mCAAgB,GAA9B,UAA+B,KAAa,EAAE,IAE7C;;;;;;6BAC6C,qEAAc;wBAAC,qBAAM,wDAAY,CAAC,cAAc,CACtF,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;;wBADjG,aAAa,GAAmB,cAAI,qEAAc,WAAC,SAC8C,KAAC;6BACpG,wDAAY,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,EAA/D,wBAA+D;wBACzD,UAAU,GAAW,wDAAY,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;wBACnE,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,QAAQ,CAAC,eAAe,CAAC;wBACzE,wBAAa,EAAC,QAAQ;wBAAC,qBAAM,wDAAY,CAAC,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,iBAAiB,EAAE,CAAC;;wBAAhO,cAAuB,SAAyM,EAAC,CAAC;;4BAEtO,sBAAO,aAAa,EAAC;;;;KACxB;IACO,0BAAO,GAAf,UAAgB,SAA2B,EAAE,SAAiB,EAAE,KAAa,EAAE,YAAwB;QACnG,IAAI,KAAK,KAAK,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACpC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CACpC,wDAAY,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAChE,SAAS,CAAC,IAAI,IAAI,wDAAY,CAAC,OAAO,CAAC;YACvC,SAAS,CAAC,IAAI,CAAC,IAAI,qEAAc,EAAE,CAAC,CAAC;QACzC,CAAC;IACL,CAAC;IAEa,8CAA2B,GAAzC,UAA0C,IAAwE;;;gBAC9G,sBAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAC;;;KAC9F;IACY,uCAAoB,GAAjC,UAAkC,KAAa;;;;;;wBACrC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;6BAC9F,EAAC,YAAY,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,GAA1C,wBAA0C;wBAClC,qBAAM,wDAAY,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAC1D,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,2DAAS,CAAC;4BADlE,uBAAQ,SAC0D,GAAE;;wBAElE,SAAS,GAAqB,CAAC,IAAI,qEAAc,EAAE,CAAC,CAAC;wBACrD,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAChD,IAAI,GAAW,SAAS,CAAC,IAAI,CAAC;wBACzB,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,YAAY,CAAC,MAAM;wBACvC,IAAI,uDAA4E,YAAY,CAAC,CAAC,CAAC,CAAE,CAAC;wBAChG,eAAe,GAAG,wDAAY,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;6BACpF,eAAe,EAAf,wBAAe;wBACf,SAAI;wBAAa,qBAAM,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,iBAAiB,EAAE,GAAG,EAAE,kBAAkB,EAAE,GAAG,EAAE,CAAC;;wBAAjP,GAAK,SAAS,GAAG,SAAgO,CAAC;;;wBAEhP,cAAc,GAAW,IAAI,CAAC,UAAU,CAAC,UAAU;4BACrD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;6BAChD,eAAe,EAAf,wBAAe;wBACQ,qBAAM,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC;;wBAA7D,cAAc,GAAG,SAA4C;wBACnE,IAAI,cAAc,GAAG,cAAc,EAAE,CAAC;4BAClC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;4BAC9B,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;4BACtB,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;wBACxD,CAAC;wBACD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EACvC,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,SAAS,CAAC,KAAK,GAAG,cAAc,CAAC,CAAC;wBACvC,qBAAM,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC;;wBAAlE,QAAQ,GAAc,SAA4C;wBACxE,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBACnD,SAAS,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC;wBAClC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACrC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;;;wBAG7B,IAAI,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;4BAC7C,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;4BAC9B,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;4BACtB,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;wBACxD,CAAC;wBAC2B,qBAAM,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC;;wBAAlE,QAAQ,GAAc,SAA4C;wBACxE,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBACnD,SAAS,CAAC,KAAK,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC;wBACpD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;;;wBAEzC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;;;wBAlCA,CAAC,EAAE;;6BAoCpD,sBAAO,SAAS,EAAC;;;;KACpB;IA/EsB,wBAAe,GAAW,KAAK,CAAC;IAChC,uBAAc,GAAW,GAAG,CAAC;IACtC,0BAAiB,GAAW,SAAS,CAAC;IA8ExD,eAAC;CAAA,CAjF6B,wDAAY,GAiFzC;AAjFoB;AAmFrB,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AC7Fe;AAGxB;AACI;AAEH;AACK;AAGrD;IAA8B,mEAAY;IAEtC,kBAA6B,MAAiB,EAC1C,QAAmB,EAAE,UAAyB;QAC9C,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;;IAG9C,CAAC;IACO,+BAAY,GAApB,UAAqB,IAAY;QAC7B,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9B,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACrB,OAAO,OAAO,CAAC;QACnB,CAAC;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;IAKS,8BAAW,GAArB,UAAsB,IAAY;QAC9B,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,IAAI;YACnC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IAChB,CAAC;IACY,uCAAoB,GAAjC,UAAkC,KAAa;;;;;;wBACvC,QAAQ,GAAqC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;wBACxE,IAAG,CAAC,wDAAY,CAAC,WAAW,EAAE,CAAC;4BAC3B,sBAAO,CAAC,IAAI,6DAAU,CAAC,wDAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC;wBAClE,CAAC;wBACD,IAAI,QAAQ,KAAK,MAAM;4BAAE,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;wBACjE,IAAI,QAAQ,KAAK,MAAM;4BAAE,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,wDAAY,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClG,IAAI,GAAW,wDAAY,CAAC,wBAAwB,CAAC,wDAAY,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;6BACpI,SAAQ,KAAK,OAAO,GAApB,wBAAoB;wBACd,KAAK,GAAW,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAE1E,qBAAM,wDAAY,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC;;wBADtD,KACN,SAA4D,EADpD,GAAG,WAAE,MAAM;wBAEb,MAAM,GAAW,KAAK,GAAG,MAAM,CAAC;wBAC9B,qBAAM,wDAAY,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,SAAE,MAAM,UAAE,CAAC;4BAA/G,uBAAQ,SAAuG,GAAE;;wBAE7G,mEAAY,EAAC,aAAa;8BAAC,IAAI,CAAC,UAAU;wBAAE,qBAAM,wDAAY,CAAC,cAAc,CACjF,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;4BADlE,uBAAQ,wBAA4C,SACc,GAAC,GAAE;;;;KACxE;IA1Bc,yBAAgB,GAAsD;QACjF,EAAE,YAAY,EAAE,8BAA8B,EAAE,aAAa,EAAE,MAAM,EAAE;KAC1E;IAyBL,eAAC;CAAA,CA1C6B,wDAAY,GA0CzC;AA1CoB;AA4CrB,mDAAU,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAC9C,mDAAU,CAAC,WAAW,CAAC,MAAM,EAAE;IAC3B,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,MAAM;IACf,OAAO,EAAE,KAAK;IACd,OAAO,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC;CACzC,CAAC,CAAC;AACH,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;AC1DT;AACI;AAEH;AAEhD;IAA+B,oEAAY;IAEvC,mBAA6B,MAAiB,EAC1C,QAAmB,EAAE,UAAyB;QAC9C,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QAG1C,KAAI,CAAC,QAAQ,GAAuB,QAAQ,CAAC;;IACjD,CAAC;IACa,uCAAmB,GAAjC;;;;4BACW,qBAAM,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;4BAAtL,sBAAO,SAA+K,EAAC;;;;KAC1L;IACY,wCAAoB,GAAjC,UAAkC,KAAa;;;;;4BACzB,qBAAM,IAAI,CAAC,mBAAmB,EAAE;;wBAA5C,SAAS,GAAG,SAAgC;wBAC1C,qBAAM,wDAAY,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAC3D,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,CAAC;4BADzG,uBAAQ,SACiG,GAAE;;;;KAC9G;IACL,gBAAC;AAAD,CAAC,CAf8B,wDAAY,GAe1C;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACvBX;AACI;AAGA;AACA;AACU;AACA;AACb;AAEhD;IAAqC,0EAAY;IAG7C,yBAA6B,MAAiB,EAC1C,QAAmB,EAAE,UAAyB;QAC9C,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QAG1C,KAAI,CAAC,QAAQ,GAA6B,QAAQ,CAAC;;IACvD,CAAC;IACa,0CAAgB,GAA9B,UAA+B,KAAa,EAAE,IAAe,EAAE,KAAa;;;;;;wBAClE,kBAAkB,GAAG,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC7D,qBAAM,wDAAY,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAQ,IAAK,CAAC,SAAS,EAAE,KAAK,EAAE,kBAAkB,EAAE,MAAM,EAAE,kBAAkB,GAAG,wDAAY,CAAC,iBAAiB,EAAE,CAAC;;wBAA9M,SAAS,GAAG,SAAkM;wBAC9M,aAAa,GAAmB,IAAI,qEAAc,CAAC,SAAS,CAAC,CAAC;wBAChE,WAAW,GAAW,wDAAY,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;6BAC9D,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAvB,wBAAuB;wBACI,qBAAM,wDAAY,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,2DAAS,CAAC;;wBAAzI,SAAS,GAAc,SAAkH;wBAC7I,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;wBAClC,WAAW,GAAG,wDAAY,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;;;wBAEhD,MAAM,GAAW,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBAC5C,UAAU,GAAU,wDAAY,CAAC,UAAU,CAAC,WAAW,EAAE,kBAAkB,EAAE,MAAM,CAAC,CAAC;wBAC3F,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;4BAC5B,aAAa,CAAC,QAAQ,CAAC,IAAI,qEAAc,CAAC,IAAI,CAAC,UAAU,EACrD,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,OAAO,GAAG,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;wBAChO,CAAC;6BACI,CAAC;4BACF,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;wBACjF,CAAC;wBACD,sBAAO,aAAa,EAAC;;;;KACxB;IACY,8CAAoB,GAAjC,UAAkC,KAAa;;;;;;wBAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;4BAC3C,IAAI,4DAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC9D,SAAS,GAAqB,CAAC,IAAI,qEAAc,EAAE,CAAC,CAAC;wBACrD,QAAQ,GAAW,wDAAY,CAAC,4BAA4B,CAC9D,IAAI,CAAC,UAAU,CAAC,GAAG,wDAAY,CAAC,iBAAiB,CAAC;wBAClD,IAAI,GAAW,CAAC,CAAC,CAAC,wDAAY;4BAC9B,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACtD,KAAK,GAAW,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC;wBAC1D,IAAI,GAAG,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;wBAC9B,IAAI,GAAW,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;wBAC3C,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,IAAI;wBACxB,IAAI,GAAW,SAAS,CAAC,IAAI,CAAC;wBAClC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC1B,cAAc,GAAW,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBACjD,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,IAAI;wBACtB,KAAK,GAAW,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;wBACnC,IAAI,KAAK,IAAI,KAAK;4BAAE,wBAAM;wBAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,cAAc,CAAC;wBAC9C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU;4BACtD,cAAc,GAAG,QAAQ,CAAC;wBAC9B,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU;4BACvC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;wBAC9D,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBACnB,qBAAM,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAC7D,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;;wBADzC,QAAQ,GAAc,SACmB;wBAC/C,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBACnD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;;;wBAZP,CAAC,EAAE;;;wBAcrC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBAC7B,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;wBAC9B,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,EAAE,CAAC;4BACjB,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CACpC,wDAAY,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;4BAChE,SAAS,CAAC,IAAI,IAAI,wDAAY,CAAC,OAAO,CAAC;4BACvC,SAAS,CAAC,IAAI,CAAC,IAAI,qEAAc,EAAE,CAAC,CAAC;wBACzC,CAAC;;;wBA1B6B,CAAC,EAAE;;4BA4BrC,sBAAO,SAAS,EAAC;;;;KACpB;IACL,sBAAC;AAAD,CAAC,CAvEoC,wDAAY,GAuEhD;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFE;AAGzB;AACI;AAEA;AACU;AACb;AAC6B;AAChB;AAE7D;IAAgC,qEAAY;IAGxC,oBAAsB,MAAiB,EACnC,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAA2B,QAAQ,EAAE,UAAU,CAAC,SAAC;QAF3C,YAAM,GAAN,MAAM,CAAW;QACJ,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAAwB,QAAQ,CAAC;;IAClD,CAAC;IACe,wCAAmB,GAAnC,UAAoC,KAAa;;;;;;wBACvC,OAAO,GAAgB,EAAE,CAAC;wBAC1B,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACpD,IAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;4BACvB,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,mBAAmB,CAAC;wBACzG,CAAC;wBACQ,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM;wBAC3D,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;wBAC/C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;wBAC1G,kBAAO,EAAC,IAAI;wBAAC,qBAAM,wDAAY,CAAC,kBAAkB,CAAC,SAAS,EACxD,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;;wBAD5E,cAAa,SAC+D,EAAC,CAAC;wBAC9E,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,mBAAmB,CAAC;wBACnG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;;;wBAPgC,CAAC,EAAE;;;wBAS9D,cAAc,QAAuB,qEAAc,YAAd,qEAAc,iEAAI,OAAO,YAAC,CAAC;wBACtE,sBAAO,CAAC,cAAc,EAAE,wDAAY,CAAC,iBAAiB,CAAC,wDAAY,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,EAAC;;;;KACtH;IACe,sCAAiB,GAAjC,UAAkC,KAAa,EAAE,UAAmB;;;;;;wBAC1D,KAAK,GAAgB,EAAE,CAAC;wBAC1B,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACzC,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM;wBAClD,GAAG,GAAW,KAAK,GAAG,CAAC,CAAC;wBACA,qBAAM,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAC7F,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,oBAAoB,CAAC,SAAS,CAAC;;wBAD7H,QAAQ,GAAgB,SACqG;wBACnI,SAAS,GAAG,wDAAY,CAAC,WAAW,CAAC,wDAAY,CAAC,UAAU,OAAvB,wDAAY,EAAe,QAAQ,EAAE,CAAC;wBAC3E,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC;wBAC3E,KAAK,CAAC,IAAI,OAAV,KAAK,EAAS,QAAQ,EAAE;;;wBANkC,CAAC,EAAE;;4BAQjE,sBAAO,KAAK,EAAC;;;;KAChB;IAGO,4CAAuB,GAA/B;QACI,IAAM,cAAc,GAAG,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3E,IAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;YACtD,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YAC9B,IAAI,CAAC,aAAa,GAAG,wDAAY,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;YAC1F,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,mBAAmB,CAAC,CAAC;YACpH,IAAI,CAAC,WAAW,GAAG,wDAAY,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YACrG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QACjC,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,GAAG,wDAAY,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChK,CAAC;IACL,CAAC;IACY,yCAAoB,GAAjC,UAAkC,KAAa;;;;;;wBAC3C,IAAI,CAAC,uBAAuB,EAAE,CAAC;wBACzB,UAAU,GAAY,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,KAAK,MAAM;4BACtG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,wDAAY,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC;wBACvF,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC5C,KAAK,GAAgB,EAAE,CAAC;6BAC1B,EAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,GAAnF,wBAAmF;wBACxD,qBAAM,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC;;wBAAhE,OAAO,GAAgB,SAAyC;wBACpE,SAAS,GAAG,wDAAY,CAAC,WAAW,CAAC,wDAAY,CAAC,UAAU,OAAvB,wDAAY,EAAe,OAAO,EAAE,CAAC;wBAC1E,SAAS,CAAC,IAAI,IAAI,UAAU,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBAC3E,KAAK,CAAC,IAAI,OAAV,KAAK,EAAS,OAAO,EAAE;;;6BAE3B,WAAK,CAAC,IAAI;8BAAV,KAAK;wBAAS,qBAAM,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,UAAU,CAAC;;wBAAjE,wBAAc,SAAmD,IAAE;wBACnE,sBAAO,KAAK,EAAC;;;;KAChB;IAlEsB,2BAAgB,GAAW,GAAG,CAAC;IAmE1D,iBAAC;CAAA,CApE+B,wDAAY,GAoE3C;AApEsB;AAsEvB;IAEI,uBAA6B,MAAiB,EAChC,QAA6B,EAAY,UAAyB,EAAU,GAAmB,EAAU,QAAgB,EAC3H,GAAW,EAAY,OAAwB,EAAY,UAA2B,EAAU,aAAqB,EAAU,WAAmB;QAA3H,yCAAwB;QAAY,+CAA2B;QAFrE,WAAM,GAAN,MAAM,CAAW;QAChC,aAAQ,GAAR,QAAQ,CAAqB;QAAY,eAAU,GAAV,UAAU,CAAe;QAAU,QAAG,GAAH,GAAG,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAQ;QAC3H,QAAG,GAAH,GAAG,CAAQ;QAAY,YAAO,GAAP,OAAO,CAAiB;QAAY,eAAU,GAAV,UAAU,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAQ;IAC9J,CAAC;IACY,4CAAoB,GAAjC,UAAkC,KAAa;;;;;;6BACpC,IAAI,CAAC,UAAU,EAAf,wBAAe;wBAClB,qBAAM,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC;;wBAA9C,cAA8C;;4BAC9C,qBAAM,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC;;wBAAhD,cAAgD;;4BAFpD,0BAEqD;;;;KACxD;IAES,wCAAgB,GAA1B,UAA2B,IAAW,EAAE,IAAe,EACnD,KAAa,EAAE,GAAW,EAAE,OAAiB;QAAjB,sCAAiB;QAC7C,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,GAAG,CAAC;QACzC,IAAM,SAAS,GAAY,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACpD,IAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;YAC7B,OAAO,IAAI,qEAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,SAAS,GAAG,OAAO,GAAG,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,SAAE,OAAO,EAAE,SAAS,EAAE,IAAI,QAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QACpL,CAAC;aAAM,CAAC;YACJ,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;gBACd,IAAI,CAAC,cAAc,GAAG,IAAI,qEAAc,CAAC,SAAS,EAC9C,IAAI,CAAC,UAAU,EAAE,kDAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAK,OAAO,EAAG,CAAC;gBAC5F,IAAI,CAAC,QAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC;YACjE,CAAC;iBACI,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,WAAW,EAAE,CAAC;gBAClD,IAAI,CAAC,cAAc,GAAS,IAAI,CAAC,QAAS,CAAC,iBAAiB,CAAC;YACjE,CAAC;YACD,OAAO,IAAI,qEAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAC3C,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACxG,CAAC;IACL,CAAC;IAEe,6CAAqB,GAArC,UAAsC,KAAa,EAAE,MAAiB,EAAE,KAAa;;;;;;wBAC3E,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9C,QAAQ,GAAG,wDAAY,CAAC,UAAU,CAAC,SAAS,EAC9C,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;wBAC/E,SAAS,GAAc,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAClI,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,wDAAY,CAAC,qBAAqB,CAAC;wBAC7E,qBAAM,wDAAY,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAC5F,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,2DAAS,CAAC;;wBADpE,YAAY,GAAG,SACqD;wBAC1E,sBAAO,IAAI,qEAAc,CAAC,SAAS,EAAE,YAAY,CAAC,EAAC;;;;KACtD;IACe,6CAAqB,GAArC,UAAsC,KAAa,EAAE,MAAiB,EAAE,KAAa;;;;;;wBAC3E,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9C,QAAQ,GAAU,wDAAY,CAAC,UAAU,CAAC,SAAS,EACrD,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;wBACtD,SAAS,GAAc,IAAI,CAAC,gBAAgB,CAAC,wDAAY,CAAC,QAAQ,CACpE,wDAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,wDAAY,CAAC,sBAAsB,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;wBACjK,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,qBAAqB,CAAC;wBACvE,qBAAM,wDAAY,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EACnF,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,2DAAS,CAAC;;wBADzC,SAAS,GAAc,SACkB;wBAC/C,sBAAO,IAAI,qEAAc,CAAC,SAAS,EAAE,SAAS,CAAC,EAAC;;;;KACnD;IACe,sDAA8B,GAA9C,UAA+C,KAAa;;;;;;wBAClD,KAAK,GAAgB,EAAE,CAAC;wBACxB,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;6BAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,EAArB,wBAAqB;wBACrB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBAC/C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;wBAC5G,gBAAK,EAAC,IAAI;wBAAC,qBAAM,wDAAY,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,2DAAS,CAAC;;wBAApH,cAAW,SAAyG,EAAC,CAAC;wBACtH,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,mBAAmB,CAAC;wBACrG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;;;wBAExB,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM;wBACrD,MAAM,GAAc,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;wBACpD,OAAO,GAAY,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;wBACxD,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;wBAC/C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;6BACtG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAzB,wBAAyB;wBACzB,gBAAK,EAAC,IAAI;wBAAC,qBAAM,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;;wBAAjE,cAAW,SAAsD,EAAC,CAAC;;;wBAG7D,QAAQ,GAAU,wDAAY,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;wBACnH,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,wDAAY,CAAC,QAAQ,CAClD,wDAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,wDAAY,CAAC,sBAAsB,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;;;wBAEnK,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,mBAAmB,CAAC;wBACnG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;;;wBAfgC,CAAC,EAAE;;;wBAiB9D,cAAc,QAAO,qEAAc,YAAd,qEAAc,iEAAI,KAAK,YAAC,CAAC;wBACpD,sBAAO,CAAC,cAAc,EAAE,wDAAY,CAAC,iBAAiB,CAAC,wDAAY,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,EAAC;;;;KACtH;IACe,oDAA4B,GAA5C,UAA6C,KAAa;;;;;;wBAChD,KAAK,GAAgB,EAAE,CAAC;wBACxB,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;6BAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,EAArB,wBAAqB;wBACD,qBAAM,wDAAY,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAC1E,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,2DAAS,CAAC;;wBAD3C,WAAW,GAAG,SAC6B;wBACjD,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,GAAG,wDAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBACrG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;;6BAE5B,WAAK,CAAC,IAAI;8BAAV,KAAK;wBAAS,qBAAM,IAAI,CAAC,uBAAuB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;;wBAAzF,wBAAc,SAA2E,IAAE;wBACrF,cAAc,QAAuB,qEAAc,YAAd,qEAAc,iEAAI,KAAK,YAAC,CAAC;wBACpE,sBAAO,CAAC,cAAc,EAAE,wDAAY,CAAC,iBAAiB,CAAC,wDAAY,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,EAAC;;;;KACtH;IACe,+CAAuB,GAAvC,UAAwC,KAAa,EAAE,UAAuB;;;;;;wBACpE,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9C,KAAK,GAAgB,EAAE,CAAC;wBACrB,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,UAAU,CAAC,MAAM;wBACb,qBAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;wBAA3J,QAAQ,GAAc,SAAqI;wBACjK,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,wDAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBAC5F,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;wBAHsB,CAAC,EAAE;;4BAKlD,sBAAO,KAAK,EAAC;;;;KAChB;IACL,oBAAC;AAAD,CAAC;;AAED,mDAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAChD,mDAAU,CAAC,WAAW,CAAC,QAAQ,EAAE;IAC7B,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,MAAM;IACf,OAAO,EAAE,KAAK;IACd,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;CAC5B,CAAC,CAAC;AACH,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;ACvMR;AAGD;AACQ;AAE3D;IAAuC,4EAAkB;IACrD,2BAA6B,MAAiB,EAC1C,QAAmB,EAAE,UAAyB;QAC9C,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,SAAC;QAFlB,YAAM,GAAN,MAAM,CAAW;;IAG9C,CAAC;IACL,wBAAC;AAAD,CAAC,CALsC,oEAAkB,GAKxD;;AAED,mDAAU,CAAC,cAAc,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;AACvD,mDAAU,CAAC,WAAW,CAAC,eAAe,EAAE;IACpC,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,MAAM;IACf,OAAO,EAAE,KAAK;IACd,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;CAC5B,CAAC,CAAC;AACH,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AChBrD;AAGyC;AAEX;AAEA;AACU;AACb;AACL;AAE3C;IAAwC,6EAAY;IAGhD,4BAA6B,MAAiB,EAAE,QAAmB,EAAE,UAAyB,EAChF,UAA0B;QAA1B,8CAA0B;QACpC,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QAChC,gBAAU,GAAV,UAAU,CAAgB;QAEpC,KAAI,CAAC,QAAQ,GAAoC,QAAQ,CAAC;;IAC9D,CAAC;IAED,sBAAY,2CAAW;aAAvB;YACI,IAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,aAAG,IAAI,UAAG,CAAC,OAAO,EAAX,CAAW,CAAC,CAAC;YACxF,CAAC;YACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;;;OAAA;IACa,mDAAsB,GAApC,UAAqC,KAAa,EAAE,QAA2B;;;;;;wBACrE,SAAS,GAAmB,IAAI,qEAAc,EAAE,CAAC;wBACvD,oBAAS,EAAC,QAAQ;wBAAC,qBAAM,wDAAY,CAAC,cAAc,CAAC,KAAK,EACtD,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,2DAAS,CAAC;;wBADxD,cAAmB,SACqC,EAAC,CAAC;wBAC1D,sBAAO,SAAS,EAAC;;;;KACpB;IACa,8CAAiB,GAA/B;mGAAgC,KAAa,EAAE,IAAwC,EACnF,QAA8B,EAAE,MAAsB;;YAAtB,sCAAsB;;;;wBAChD,SAAS,GAAmB,IAAI,qEAAc,EAAE,CAAC;6BACnD,IAAI,CAAC,WAAW,EAAhB,wBAAgB;6BACb,SAAQ,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAjD,wBAAiD;;;6BAC3C,OAAM,IAAI,IAAI,CAAC,QAAQ,GAAvB,wBAAuB;wBACtB,2BAA2B,GAAkB,4DAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAClF,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;wBACpE,QAAQ,GAAU,wDAAY,CAAC,QAAQ,CAAC,wDAAY,CAAC,SAAS,CAChE,wDAAY,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EACtF,wDAAY,CAAC,sBAAsB,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;wBACvD,SAAS,CAAC,QAAQ,CAAkB,2BAA4B;6BAC3D,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;;;wBAG9D,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,wDAAY,CAAC,qBAAqB,CAAC;6BACjE,eAAS,CAAC,QAAQ;8BAAlB,SAAS;wBAAa,qBAAM,wDAAY,CAAC,qBAAqB,CAC1D,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC;;wBADvD,wBAAsB,SACiC,IAAE;;;;6BAGxD,IAAI,CAAC,QAAQ,EAAb,wBAAa;6BACd,SAAQ,IAAI,QAAQ,GAApB,wBAAoB;wBACpB,oBAAS,EAAC,QAAQ;wBAAC,qBAAM,wDAAY,CAAC,kBAAkB,CAAC,KAAK,EAC1D,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;;wBADlD,cAAmB,SAC+B,EAAC,CAAC;;;wBAGpD,oBAAS,EAAC,QAAQ;wBAAC,qBAAM,wDAAY,CAAC,cAAc,CAAC,KAAK,EACtD,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,2DAAS,CAAC;;wBAD7D,cAAmB,SAC0C,EAAC,CAAC;;4BAGvE,sBAAO,SAAS,EAAC;;;;KACpB;IACD,sBAAY,8CAAc;aAA1B;YAAA,iBAEC;YADG,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,WAAW,IAAK,kBAAW,CAAC,GAAG,IAAI,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,EAAhE,CAAgE,CAAC,CAAC;QACpH,CAAC;;;OAAA;IACO,uCAAU,GAAlB,UAAmB,IAAwC,EAAE,KAAa,EAAE,QAA8B,EAAE,MAAsB;QAAtB,sCAAsB;QAC9H,IAAG,CAAC,MAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU;YAAE,OAAO,IAAI,CAAC;QACjG,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACxH,CAAC;IACO,2CAAc,GAAtB,UAAuB,GAAsC;QACzD,OAAO,GAAG,KAAK,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAC7I,CAAC;IACa,uDAA0B,GAAxC,UAAyC,KAAa,EAAE,GAAsC,EAAE,WAAqB;;;;;;wBAC3G,SAAS,GAAmB,IAAI,qEAAc,EAAE,CAAC;wBACjD,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAChD,eAAe,GAAW,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI;4BACnF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,mBAAmB,CAAC;wBACjE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC1B,GAAG,GAAG,CAAC,CAAC;wBACN,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;wBACpC,CAAC,GAAG,CAAC;;;6BAAE,EAAC,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM;wBAChC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC;4BAAE,wBAAS;wBAC5D,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,eAAe;4BACvE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,mBAAmB,CAAC;wBACjE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU;4BACtD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;wBACpD,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC;wBAChD,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBACX,qBAAM,IAAI,CAAC,iBAAiB,CAC5D,SAAS,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC;;wBADnC,WAAW,GAAmB,SACK;wBACzC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;4BACvB,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;wBACpC,CAAC;wBACD,GAAG,EAAE,CAAC;;;wBAb4B,CAAC,EAAE;;;wBAezC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBAC7B,sBAAO,SAAS,EAAC;;;;KACpB;IACa,qDAAwB,GAAtC,UAAuC,KAAa,EAAE,GAAsC;;;;;;;wBAClF,SAAS,GAAmB,IAAI,qEAAc,EAAE,CAAC;wBACjD,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9C,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;wBACpC,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM;wBACxC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC;4BAAE,wBAAS;6BAC/D,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,KAAI,eAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,0CAAE,MAAM,0CAAE,QAAQ,IAA5G,wBAA4G;wBAC5G,oBAAS,EAAC,QAAQ;wBAAC,qBAAM,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;;wBAAlG,cAAmB,SAA+E,EAAC,CAAC;wBACpG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,kBAAkB,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;;;wBAEvG,oBAAS,EAAC,QAAQ;wBAAC,qBAAM,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC;;wBAA5F,cAAmB,SAAyE,EAAC,CAAC;wBAC9F,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,kBAAkB,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;;;wBAPzD,CAAC,EAAE;;4BASjD,sBAAO,SAAS,EAAC;;;;KACpB;IACO,6CAAgB,GAAxB,UAAyB,QAAgB;QACrC,OAAO,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC;YAC1D,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,mBAAmB,CAAC;IAClF,CAAC;IACO,iDAAoB,GAA5B,UAA6B,IAAyC,EAAE,QAAgB;QAAxF,iBAkCC;QAjCG,IAAM,cAAc,GAAW,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,WAAW,GAAW,cAAc,CAAC;QACzC,IAAI,cAAc,GAAW,QAAQ,CAAC;QACtC,IAAM,WAAW,GAAa,EAAE,CAAC;QACjC,IAAM,UAAU,GAAyC,EAAE,CAAC;QAC5D,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAwC,EAAE,KAAa,IAAK,QAAC,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,EAA7B,CAA6B,CAAC,CAAC;QAC7H,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC;YACxC,IAAM,KAAK,GAAW,wDAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EACxD,cAAc,EAAE,QAAQ,CAAC,IAAI,GAAG,CAAC;YACrC,WAAW,IAAI,KAAK,CAAC;YACrB,IAAI,KAAK,KAAK,GAAG,EAAE,CAAC;gBAChB,cAAc,EAAE,CAAC;YACrB,CAAC;iBAAM,CAAC;gBACJ,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;YACD,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;QACD,IAAI,cAAc,KAAK,CAAC;YAAE,OAAO,WAAW,CAAC;QAC7C,IAAM,cAAc,GAAW,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,wDAAY,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC;QACnG,UAAU,CAAC,IAAI,CAAC,UAAC,KAAyC,EAAE,KAAyC;YACjG,IAAI,SAAS,GAAG,wDAAY,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,cAAc,EAAE,QAAQ,CAAC,IAAI,GAAG,CAAC;YACzF,IAAI,SAAS,GAAG,wDAAY,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,cAAc,EAAE,QAAQ,CAAC,IAAI,GAAG,CAAC;YACzF,OAAO,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC,OAAO,CAAC,UAAC,IAAwC;YAChD,IAAM,UAAU,GAAW,WAAW,GAAG,cAAc,CAAC;YACxD,IAAM,cAAc,GAAW,wDAAY,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,EAAE,QAAQ,CAAC,IAAI,GAAG,CAAC;YACvG,IAAG,cAAc,GAAG,UAAU,IAAI,cAAc,GAAG,cAAc,EAAE,CAAC;gBAChE,WAAW,IAAI,cAAc,CAAC;gBAC9B,cAAc,EAAE,CAAC;YACrB,CAAC;YACD,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;QAC5F,CAAC,CAAC,CAAC;QACH,OAAO,WAAW,CAAC;IACvB,CAAC;IACa,2CAAc,GAA5B,UAA6B,KAAa,EAAE,GAAsC,EAAE,MAAe,EAAE,WAAqB;;;;;6BAClH,MAAM,EAAN,wBAAM;wBACC,qBAAM,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,GAAG,EAAE,WAAW,CAAC;4BAArE,sBAAO,SAA8D,EAAC;4BAEnE,qBAAM,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,GAAG,CAAC;4BAAtD,sBAAO,SAA+C,EAAC;;;;KAC1D;IACa,8CAAiB,GAA/B,UAAgC,KAAa,EAAE,IAAyC,EACpF,QAAgB,EAAE,MAAe;;;;;;wBAC3B,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9C,SAAS,GAAqB,EAAE,CAAC;wBAC9B,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,IAAI,CAAC,MAAM;wBACL,qBAAM,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,EACtE,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;wBADlD,OAAO,GAAmB,SACwB;wBACtD,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;4BAAE,wBAAS;wBACxE,IAAG,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gCACxB,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gCAC9B,OAAO,CAAC,QAAQ,CAAC,wDAAY,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;4BACjF,CAAC;4BACD,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BACxB,SAAS,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,kBAAkB,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBACrG,CAAC;6BAEG,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,GAArC,wBAAqC;wBACrC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;wBACxB,kBAAkB,GAAe,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC;wBAC/D,KAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC3D,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC;wBAClD,CAAC;wBACgC,qBAAM,oDAAU,CAAC,kBAAkB,CAChE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,kBAAkB,EAAE,SAAS,CAAC;;wBAD1D,WAAW,GAAgB,SAC+B;wBAE1D,aAAa,GAAmB,IAAI,qEAAc,EAAE,CAAC;wBAC3D,aAAa,CAAC,QAAQ,OAAtB,aAAa,EAAa,WAAW,EAAE;wBACvC,SAAS,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,GAAG,kBAAkB,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBAEvG,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;6BAC1B,EAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,IAAI,MAAM,GAAzE,wBAAyE;wBAC1C,qBAAM,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,EACvE,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;wBADhD,MAAM,GAAmB,SACuB;wBAClD,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC;wBAClC,IAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;4BACjB,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;4BACvB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC3B,CAAC;wBACD,SAAS,CAAC,IAAI,GAAG,QAAQ,GAAG,kBAAkB,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;;;wBAnChE,CAAC,EAAE;;4BAuC5C,sBAAO,SAAS,EAAC;;;;KACpB;IACO,4CAAe,GAAvB,UAAwB,KAA0C,EAAE,QAAgB;QAChF,IAAM,IAAI,GAAwC,EAAE,CAAC;QACrD,IAAG,KAAK,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,IAAI,OAAT,IAAI,EAAS,IAAI,CAAC,WAAW,EAAE;QAC/B,IAAG,IAAI,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QAClC,IAAM,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAC,QAAgB,EAAE,KAAa,IAAK,eAAQ,IAAI,KAAK,EAAjB,CAAiB,EAAE,CAAC,CAAC,CAAC;QACnI,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvK,CAAC;IACO,4CAAe,GAAvB,UAAwB,KAA0C,EAAE,UAAmB,EAAE,MAAe;QACpG,IAAM,IAAI,GAAwC,EAAE,CAAC;QACrD,IAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QACtC,IAAI,KAAK,CAAC,UAAU,IAAI,MAAM;YAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,OAAT,IAAI,EAAS,YAAY,EAAE;QAC3B,IAAI,KAAK,CAAC,aAAa,IAAI,UAAU;YAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QAClD,IAAI,KAAK,CAAC,UAAU;YAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IAChB,CAAC;IACO,wCAAW,GAAnB,UAAoB,KAA0C,EAAE,YAAsD;QAAtH,iBAOC;QANG,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;YACpB,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAwC,EAAE,KAAa,IAAK,QAAC,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,EAA7B,CAA6B,CAAC,CAAC,MAAM,CAAC;QAC3I,CAAC;aAAM,CAAC;YACJ,OAAO,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACvE,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC;IACL,CAAC;IAEY,iDAAoB,GAAjC,UAAkC,KAAa;;;;;;wBACvC,KAAK,GAAwC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;wBACzE,UAAU,GAAY,IAAI,CAAC,QAAQ,CAAC,YAAY,KAAK,UAAU,CAAC;wBAChE,QAAQ,GAAW,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wBACjE,IAAI,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;4BACzC,sBAAO,CAAC,IAAI,qEAAc,CAAC,wDAAY,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;wBACxF,CAAC;wBACK,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;wBACrD,IAAG,CAAC,MAAM,EAAE,CAAC;4BACT,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;4BAC9B,UAAU,GAAG,KAAK,CAAC;4BACnB,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;4BACpC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;4BAClC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wBACzD,CAAC;wBACK,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;wBACtD,qBAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC;4BAAlE,sBAAO,SAA2D,EAAC;;;;KACtE;IA9OsB,mCAAgB,GAAW,GAAG,CAAC;IA+O1D,yBAAC;CAAA,CAhPuC,wDAAY,GAgPnD;AAhP8B;AAkP/B,mDAAU,CAAC,cAAc,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;AACxD,mDAAU,CAAC,WAAW,CAAC,gBAAgB,EAAE;IACrC,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,MAAM;IACf,OAAO,EAAE,KAAK;IACd,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;CAC5B,CAAC,CAAC;AACH,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;ACtQd;AACX;AAEU;AACb;AAGhD;IAAsC,2EAAY;IAG9C,0BAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAA8B,QAAQ,CAAC;;IACxD,CAAC;IACO,yCAAc,GAAtB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,aAAG,IAAI,UAAG,CAAC,SAAS,EAAb,CAAa,CAAC,CAAC;IAChE,CAAC;IACa,2CAAgB,GAA9B,UAA+B,KAAa,EAAE,SAAiB,EAAE,SAAiB,EAC9E,IAA2B;;;;;;wBACrB,QAAQ,GAAW,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC7E,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU;4BACtD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,QAAQ,GAAG,wDAAY,CAAC,sBAAsB,CAAC;6BACxC,qEAAc;wBAAC,qBAAM,wDAAY;gCACvE,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;;wBADtE,aAAa,GAAmB,cAAI,qEAAc,WAAC,SACmB,KAAC;wBAC7E,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBAEvB,4BAA4B,GAAkB,4DAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CACnF,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;wBACjD,SAAS,GAAW,wDAAY,CAAC,mBAAmB,CAAC;4BACvD,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,QAAQ,GAAG,wDAAY,CAAC,sBAAsB,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI;yBAAE,EAC3F,IAAI,CAAC,UAAU,CAAC,CAAC;6BACjB,mBAAa,CAAC,QAAQ;8BAAtB,aAAa;wBAAa,qBAAoB,4BAA6B,CAAC,oBAAoB,CAAC,SAAS,CAAC;;wBAA3G,wBAA0B,SAAiF,IAAE;wBAE7G,sBAAO,aAAa,EAAC;;;;KACxB;IACY,+CAAoB,GAAjC,UAAkC,KAAa;;;;;;wBACrC,SAAS,GAAqB,EAAE,CAAC;wBACjC,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9C,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;wBAC1B,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,IAAI,CAAC,MAAM;wBACnC,SAAS,CAAC,IAAI,CAAC,IAAI,qEAAc,EAAE,CAAC,CAAC;wBACjC,IAAI,GAAW,SAAS,CAAC,IAAI,CAAC;wBAClC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBACrB,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;wBAC5C,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,wDAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBAC1E,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBACnB,qBAAM,IAAI,CAAC,gBAAgB,CACnD,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;;wBADrC,QAAQ,GAAc,SACe;wBAC3C,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBACnD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACrC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;;;wBARiB,CAAC,EAAE;;;wBAUrD,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBAC7B,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;wBAC9B,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;wBACtB,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CACpC,wDAAY,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAChE,SAAS,CAAC,IAAI,IAAI,wDAAY,CAAC,OAAO,CAAC;wBACvC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,gBAAgB,CAAC,cAAc,CAAC;;;wBApB1C,CAAC,EAAE;;4BAsB5C,sBAAO,SAAS,EAAC;;;;KACpB;IAxDsB,+BAAc,GAAW,KAAK,CAAC;IAyD1D,uBAAC;CAAA,CA1DqC,wDAAY,GA0DjD;AA1D4B;AA4D7B,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;ACnE7B;AACI;AACI;AAEH;AAEhD;IAAsC,2EAAY;IAG9C,0BAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAA8B,QAAQ,CAAC;;IACxD,CAAC;IACY,+CAAoB,GAAjC,UAAkC,KAAa;;;;;;wBACrC,KAAK,GAAgB,EAAE,CAAC;wBACxB,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;8BACZ,EAApB,SAAI,CAAC,QAAQ,CAAC,MAAM;;;6BAApB,eAAoB;wBAA7B,KAAK;wBACoB,qBAAM,oDAAU,CAAC,kBAAkB,CAC/D,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,SAAS,CAAC;;wBAD7C,UAAU,GAAgB,SACmB;wBACnD,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;4BAC1B,SAAS,CAAC,IAAI,GAAG,wDAAY,CAAC,UAAU,OAAvB,wDAAY,EAAe,UAAU,EAAE,IAAI,CAAC;4BAC7D,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,gBAAgB,CAAC,kBAAkB,CAAC;4BACnF,KAAK,CAAC,IAAI,OAAV,KAAK,EAAS,UAAU,EAAE;wBAC9B,CAAC;;;wBAPe,IAAoB;;4BASxC,sBAAO,KAAK,EAAC;;;;KAChB;IAnBsB,mCAAkB,GAAW,IAAI,CAAC;IAoB7D,uBAAC;CAAA,CAtBqC,wDAAY,GAsBjD;AAtB4B;AAwB7B,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACjCmB;AAGhD;AAEQ;AACU;AACb;AAMhD;IAMI,sBAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QAD/B,WAAM,GAAN,MAAM,CAAW;QACX,eAAU,GAAV,UAAU,CAAe;QACxD,IAAI,CAAC,QAAQ,GAAa,QAAQ,CAAC;IACvC,CAAC;IACa,wCAAiB,GAA/B,UAAgC,KAAa;;;;4BAClC,qBAAM,wDAAY,CAAC,eAAe,CAAC,KAAK,EAC3C,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;4BADnC,sBAAO,SAC4B,EAAC;;;;KACvC;IACa,8CAAuB,GAArC,UAAsC,KAAa;;;;4BACxC,qBAAM,wDAAY,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;4BAA7G,sBAAO,SAAsG,EAAC;;;;KACjH;IACa,yCAAkB,GAAhC,UAAiC,KAAa;;;;;4BACb,qBAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;;wBAA1D,SAAS,GAAc,SAAmC;wBAC1D,aAAa,GAAmB,IAAI,qEAAc,CAAC,SAAS,CAAC,CAAC;6BACjE,IAAI,CAAC,QAAQ,CAAC,wBAAwB,EAAtC,wBAAsC;wBAC/B,SAAS,GAAW,wDAAY,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;wBAC3E,SAAS,CAAC,IAAI,IAAI,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBAC3E,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,YAAY,CAAC,oBAAoB,CAAC;wBACjF,wBAAa,EAAC,QAAQ;wBAAC,qBAAM,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC;;wBAApE,cAAuB,SAA6C,EAAC,CAAC;;4BAE1E,sBAAO,aAAa,EAAC;;;;KACxB;IACa,2CAAoB,GAAlC,UAAmC,KAAa;;;;;;wBACtC,IAAI,GAAsB,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;wBAC5B,qBAAM,wDAAY,CAAC,cAAc,CAC9D,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,2DAAS,CAAC;;wBADrD,aAAa,GAAc,SAC0B;wBACrD,UAAU,GAAW,wDAAY,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;wBACnE,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,wDAAY,CAAC,gBAAgB,CAAC;6BACnE,qEAAc;sCAAC,aAAa;wBAAE,qBAAM,wDAAY,CAAC,iBAAiB,CACzE,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE;gCACxC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,UAAU;gCACxC,IAAI,EAAE,wDAAY,CAAC,gBAAgB;gCACnC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gCACzG,mBAAmB,EAAE,iDAAQ,CAAC,yBAAyB,KAAK,UAAU;gCACtE,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;gCACpC,WAAW,EAAE,IAAI;gCACjB,WAAW,EAAE,EAAE;6BAClB,CAAC;4BATN,sBAAO,cAAI,qEAAc,aAAgB,SASnC,MAAC,EAAC;;;;KACX;IACY,6CAAsB,GAAnC,UAAoC,KAAa;;;;;;wBACvC,YAAY,GAAS,IAAI,CAAC,QAAS,CAAC,YAAY,CAAC;6BACnD,CAAC,CAAC,YAAY,EAAd,wBAAc;wBACP,qBAAM,oDAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAClD,IAAI,CAAC,UAAU,EAAE,YAAY,EAAE,KAAK,CAAC;4BADzC,sBAAO,SACkC,EAAC;;wBAE9C,IAAI,CAAC,QAAQ,GAAG,wDAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACxD,qBAAM,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;4BAA7C,sBAAO,SAAsC,EAAC;;;;KACjD;IACY,2CAAoB,GAAjC,UAAkC,KAAa;;;gBAC3C,sBAAO,IAAI,EAAC;;;KACf;IACY,+DAAwC,GAArD,UAAsD,KAAa;;;;;;;wBACzD,KAAK,GAAqB,EAAE,CAAC;wBACd,qBAAM,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;;wBAAvD,YAAY,GAAG,SAAwC;wBAC7D,KAAK,CAAC,IAAI,OAAV,KAAK,EAAS,YAAY,EAAE;wBACtB,cAAc,GAAG;4BACnB,IAAM,GAAG,GAAG,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;4BACtC,IAAG,YAAY,KAAK,IAAI,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gCACpD,GAAG,CAAC,IAAI,GAAG,wDAAY,CAAC,UAAU,OAAvB,wDAAY,EAAe,KAAK,EAAE,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,UAAU,GAAG,wDAAY,CAAC,gBAAgB,CAAC;4BACnH,CAAC;4BACD,OAAO,GAAG,CAAC;wBACf,CAAC,CAAC;6BACE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAxB,wBAAwB;wBACxB,gBAAK,EAAC,IAAI;wBAAC,qBAAM,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAE,CAAC;;wBAA5D,cAAW,SAAiD,EAAC,CAAC;;;6BAE9D,IAAI,CAAC,QAAQ,CAAC,wBAAwB,EAAtC,wBAAsC;wBACtC,gBAAK,EAAC,IAAI;wBAAC,qBAAM,IAAI,CAAC,uBAAuB,CAAC,cAAc,EAAE,CAAC;;wBAA/D,cAAW,SAAoD,EAAC,CAAC;;4BAGrE,sBAAO,KAAK,EAAC;;;;KAChB;IACY,oCAAa,GAA1B,UAA2B,KAAa;;;;;;wBACpC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;wBAClF,WAAW,GAAW;4BACxB,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK;4BAC5E,IAAI,EAAE,KAAK,CAAC,IAAI;yBACnB,CAAC;wBACI,KAAK,GAAgB,EAAE,CAAC;wBAC1B,aAAa,GAAW,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;wBAC7D,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC;wBAC1D,kBAAa;;iCACZ,KAAK,CAAC,CAAN,wBAAK;iCACL,SAAS,CAAC,CAAV,wBAAS;iCAmBT,QAAQ,CAAC,CAAT,wBAAQ;iCAgBR,MAAM,CAAC,CAAP,wBAAM;iCAkBN,QAAQ,CAAC,CAAT,yBAAQ;iCACR,wDAAY,CAAC,qBAAqB,CAAC,CAAnC,yBAAkC;;;4BArDhB,qBAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC;;wBAAvD,UAAU,GAAG,SAA0C;wBACzD,YAAY,GAAW,wDAAY,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;wBAChE,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,YAAY,CAAC,oBAAoB,CAAC;wBACpF,UAAU,CAAC,QAAQ,CAAC,wDAAY,CAAC,iBAAiB,CAC9C,wDAAY,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC5D,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU;4BAC3C,YAAY,CAAC,sBAAsB,GAAG,wDAAY,CAAC,OAAO,CAAC;wBAC/D,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,YAAY,CAAC,oBAAoB,CAAC;wBAC5D,qBAAM,IAAI,CAAC,wCAAwC,CAAC,YAAY,CAAC;;wBAA7F,YAAY,GAAgB,SAAiE;wBACnG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBAC7B,IAAG,YAAY,KAAK,IAAI,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;4BACpD,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;wBAC9C,CAAC;wBACD,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACvB,KAAK,CAAC,IAAI,OAAV,KAAK,EAAS,YAAY,EAAE;wBAC5B,yBAAM;;wBAGA,YAAY,GAAW,wDAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;wBAC7D,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,YAAY,CAAC,oBAAoB,CAAC;wBACpF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,YAAY,CAAC,oBAAoB,CAAC;wBAC5D,qBAAM,IAAI,CAAC,wCAAwC,CAAC,YAAY,CAAC;;wBAA7F,YAAY,GAAgB,SAAiE;wBACnG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBAC7B,KAAK,CAAC,IAAI,OAAV,KAAK,EAAS,YAAY,EAAE;wBACtB,UAAU,GAAW,WAAW,CAAC;wBACvC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;4BACrB,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;wBACnD,CAAC;wBACD,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,YAAY,CAAC,sBAAsB,CAAC;wBACpF,gBAAK,EAAC,IAAI;wBAAC,qBAAM,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;;wBAApD,cAAW,SAAyC,EAAC,CAAC;wBACtD,yBAAM;;wBAGN,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EACpD,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI;4BACrD,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC;gCAC/C,wDAAY,CAAC,sBAAsB,CAAC,CAAC;wBACd,qBAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC;;wBAAvE,UAAU,GAAmB,SAA0C;wBACvE,YAAY,GAAW,wDAAY,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;wBAC/E,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBAC7B,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,YAAY,CAAC,qBAAqB,CAAC;wBACrF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC;wBAChB,qBAAM,IAAI,CAAC,wCAAwC,CAAC,YAAY,CAAC;;wBAA7F,YAAY,GAAgB,SAAiE;wBACnG,IAAG,YAAY,KAAK,IAAI,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;4BACpD,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC;wBAC9C,CAAC;wBACD,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACvB,KAAK,CAAC,IAAI,OAAV,KAAK,EAAS,YAAY,EAAE;wBAC5B,yBAAM;;wBAKA,YAAY,GAAW,wDAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;wBAC7D,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,IAAI,aAAa,KAAK,wDAAY,CAAC,qBAAqB,EAAE,CAAC;4BACvD,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,YAAY,CAAC,oBAAoB,CAAC;4BACpF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,YAAY,CAAC,oBAAoB,CAAC;wBAClG,CAAC;6BACD,WAAK,CAAC,IAAI;8BAAV,KAAK;wBAAS,qBAAM,IAAI,CAAC,wCAAwC,CAAC,YAAY,CAAC;;wBAA/E,wBAAc,SAAiE,IAAE;wBACjF,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBAC7B,yBAAM;;wBAGd,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBAC7B,sBAAO,KAAK,EAAC;;;;KAChB;IACD,sBAAc,+CAAqB;aAAnC;YACI,OAAO,wDAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7E,CAAC;;;OAAA;IAhKa,mCAAsB,GAAW,GAAG,CAAC;IACrC,kCAAqB,GAAW,GAAG,CAAC;IACpC,iCAAoB,GAAW,GAAG,CAAC;IACnC,2BAAc,GAAW,MAAM,CAAC;IA8JlD,mBAAC;CAAA;AAlKwB;AAoKzB,mDAAU,CAAC,WAAW,CAAC,UAAU,EAAE;IAC/B,IAAI,EAAE,kBAAkB;IACxB,OAAO,EAAE,MAAM;IACf,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC;IACrC,OAAO,EAAE,KAAK;CACjB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACnLgD;AAE0B;AAC1B;AAEnD;IAAoC,yEAAc;IAG9C,wBAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAA4B,QAAQ,CAAC;;IACtD,CAAC;IACS,uCAAc,GAAxB,UAAyB,IAAe,EAAE,OAAiB;QACvD,OAAO,CAAC,OAAO,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC;YACrC,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAC/D,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK;oBAC/B,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,KAAK,WAAW;wBAChD,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;IACpE,CAAC;IACM,yCAAgB,GAAvB,UAAwB,IAAW,EAAE,IAAe,EAChD,KAAa,EAAE,GAAY,EAAE,OAAiB,EAAE,OAAiB;QAAjB,sCAAiB;QACjE,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;YACd,IAAI,CAAC,cAAc,GAAG,IAAI,qEAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EACjG,IAAI,CAAC,UAAU,EAAE,kDAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAK,OAAO,EAAG,CAAC;YAC5F,IAAI,CAAC,QAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC;QACjE,CAAC;aACI,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,WAAW,EAAE,CAAC;YAClD,IAAI,CAAC,cAAc,GAAS,IAAI,CAAC,QAAS,CAAC,iBAAiB,CAAC;QACjE,CAAC;QACD,IAAM,SAAS,GAAY,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC9D,OAAO,IAAI,qEAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAC3C,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACxG,CAAC;IACL,qBAAC;AAAD,CAAC,CA7BmC,4DAAc,GA6BjD;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;AACpE,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACrCtB;AACI;AAEA;AACc;AACJ;AACb;AACc;AAE9D;IAAiC,sEAAY;IAEzC,qBAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAAyB,QAAQ,CAAC;;IACnD,CAAC;IACe,2CAAqB,GAArC;mGAAsC,KAAa,EAAE,IAAe,EAAE,KAAa,EAAE,YAA6B;;YAA7B,mDAA6B;;;;wBACxG,QAAQ,GAAU,wDAAY,CAAC,UAAU,CAAC,KAAK,EACjD,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;wBACrD,cAAc,GAAU,wDAAY,CAAC,QAAQ,CAAC,wDAAY,CAAC,SAAS,CACtE,QAAQ,EAAE,wDAAY,CAAC,sBAAsB,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC3D,QAAQ,GAAc,IAAI,yEAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAC3E,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC1E,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACpD,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,qBAAqB,CAAC;wBACvE,qBAAM,wDAAY,CAAC,cAAc,CACzD,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,2DAAS,CAAC;;wBADjE,QAAQ,GAAc,SAC2C;wBACvE,sBAAO,IAAI,qEAAc,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAC;;;;KACjD;IACY,2CAAqB,GAAlC;mGAAmC,KAAa,EAAE,OAAoB,EAAE,eAAgC;;YAAhC,yDAAgC;;;;wBAC9F,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9C,KAAK,GAAgB,EAAE,CAAC;wBACrB,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,OAAO,CAAC,MAAM;wBACV,qBAAM,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC;;wBAAjG,QAAQ,GAAc,SAA2E;wBACvG,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,wDAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBAC5F,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;wBAHmB,CAAC,EAAE;;4BAK/C,sBAAO,KAAK,EAAC;;;;KAChB;IACY,yDAAmC,GAAhD,UAAiD,KAAa;;;;;;wBACpD,SAAS,GAAG,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACtC,KAAK,GAAgB,EAAE,CAAC;6BAC3B,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,GAAzC,wBAAyC;6BACxC,WAAK,CAAC,IAAI;8BAAV,KAAK;wBAAS,qBAAM,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;;wBAAvF,wBAAc,SAAyE,IAAE;wBACzF,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,wDAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;;;wBAE/G,aAAa,GAAG,wDAAY,CAAC,UAAU,CAAC;4BAC1C,KAAK,EAAE,SAAS,CAAC,KAAK;4BACtB,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,wDAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,GAAG;yBAC5F,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wBACpF,KAAK,CAAC,IAAI,CAAC,IAAI,sEAAY,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,EAAE,wDAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;6BAE7F,WAAK,CAAC,IAAI;8BAAV,KAAK;wBAAS,qBAAM,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC;;wBAA/F,wBAAc,SAAiF,IAAE;wBACjG,sBAAO,KAAK,EAAC;;;;KAChB;IACY,2DAAqC,GAAlD,UAAmD,KAAa;;;;;;wBACtD,QAAQ,GAAG,CAAC,CAAC;wBACb,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9C,KAAK,GAAgB,EAAE,CAAC;wBACxB,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;wBACnG,GAAG,GAAmB,IAAI,qEAAc,EAAE,CAAC;wBACtC,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,SAAS;wBAC7B,QAAQ,GAAG,CAAC,CAAC;8BACoE,EAApE,MAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;;6BAApE,eAAoE;wBAA5E,IAAI;6BACN,CAAC,CAAC,IAAI,EAAN,wBAAM;wBACL,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBACzF,wDAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;wBACnE,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBACnB,qBAAM,IAAI,CAAC,qBAAqB,CACxD,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,IAAI,CAAC,CAAC;;wBADhC,QAAQ,GAAc,SACU;wBACtC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBACvB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;;;wBAEjC,QAAQ,EAAE,CAAC;;;wBAVE,IAAoE;;;wBAY/E,WAAW,GAAc,wDAAY,CAAC,iBAAiB,CACzD,wDAAY,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;wBACpD,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;wBACvB,aAAa,GAAG,wDAAY,CAAC,UAAU,CAAC;4BAC1C,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG;4BACnG,IAAI,EAAE,SAAS,CAAC,IAAI;yBACvB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACT,GAAG,CAAC,QAAQ,CAAC,IAAI,sEAAY,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,EAAE,wDAAY,CAAC,iBAAiB,EAAE,CAAC,EAAE,WAAW,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,SAAS,GAAG,CAAC,CAAC,CAAC;4BACvJ,wDAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAEtE,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI;4BAC7B,wDAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBAC/D,GAAG,GAAG,IAAI,qEAAc,EAAE,CAAC;;;wBA1BQ,CAAC,EAAE;;4BA4B1C,sBAAO,KAAK,EAAC;;;;KAChB;IACY,0CAAoB,GAAjC,UAAkC,KAAa;;;gBAC3C,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;oBACpC,sBAAO,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAC;gBAC3E,CAAC;qBACI,IAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,IAAI,UAAU,EAAE,CAAC;oBAC1D,sBAAO,IAAI,CAAC,mCAAmC,CAAC,KAAK,CAAC,EAAC;gBAC3D,CAAC;qBACI,CAAC;oBACF,sBAAO,IAAI,CAAC,qCAAqC,CAAC,KAAK,CAAC,EAAC;gBAC7D,CAAC;;;;KACJ;IACL,kBAAC;AAAD,CAAC,CA7FgC,wDAAY,GA6F5C;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACxGX;AACA;AAEA;AACU;AACb;AAEhD;IAAgC,qEAAc;IAE1C,oBAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,cAAc,GAAwB,QAAQ,CAAC;;IACxD,CAAC;IACe,oDAA+B,GAA/C,UAAgD,KAAa,EAAE,IAAe,EAAE,KAAa;;;;;;wBACnF,QAAQ,GAAsB,wDAAY,CAAC,iBAAiB,CAC9D,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC9C,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBACxB,SAAS,GAAW,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,GAAG,CAAC;wBAC1D,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC;wBAC1C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,SAAS,CAAC;wBACrC,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACpD,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC;6BACa,qEAAc;wBAAC,qBAAM,wDAAY;gCACvE,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC;;wBAD3E,aAAa,GAAmB,cAAI,qEAAc,WAAC,SACwB,KAAC;wBAClF,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBACzB,SAAS,GAAW,aAAa,CAAC,KAAK,CAAC;wBAC5C,IAAI,SAAS,GAAG,wDAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;4BAC9D,aAAa,CAAC,KAAK,IAAI,CAAC,wDAAY,CAAC,iBAAiB,CAClD,IAAI,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC;4BACpD,SAAS,GAAG,wDAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAChE,CAAC;6BACI,CAAC;4BACF,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;wBAC3C,CAAC;wBACK,UAAU,GAAW,wDAAY,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;wBACnE,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;wBAC/B,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,wDAAY,CAAC,UAAU,CAChE,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACpH,sBAAO,aAAa,EAAC;;;;KACxB;IACe,0CAAqB,GAArC,UAAsC,KAAa,EAAE,IAAe,EAAE,KAAa;;;;;;wBACzE,aAAa,GAAmB,IAAI,qEAAc,EAAE,CAAC;wBACrD,QAAQ,GAAU,wDAAY,CAAC,UAAU,CAAC,KAAK,EACjD,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;wBACtD,QAAQ,GAAc,IAAI,CAAC,gBAAgB,CAAC,wDAAY,CAAC,QAAQ,CACnE,wDAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,wDAAY,CAAC,sBAAsB,CAAC,EACrE,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC7E,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAC3B,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACpD,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,qBAAqB,CAAC;wBAC7F,QAAQ,GAAsB,wDAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC7G,aAAQ,IAAI,IAAI;gCAAhB,wBAAgB;wBAAI,wBAAa,EAAC,QAAQ;wBAAC,qBAAM,wDAAY,CAAC,cAAc,CACxE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,2DAAS,CAAC;;wBAD/C,mBAAuB,SACwB,EAAC;;;wBADpE,GACqE;wBACrE,sBAAO,aAAa,EAAC;;;;KACxB;IACe,8CAAyB,GAAzC,UAA0C,KAAa;;;;;;wBAC7C,SAAS,GAAqB,CAAC,IAAI,qEAAc,EAAE,CAAC,CAAC;wBACrD,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC3C,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,MAAM;wBACxC,qBAAM,IAAI,CAAC,+BAA+B,CAAC,SAAS,EAC5E,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;wBAD1C,QAAQ,GAAc,SACoB;wBAChD,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAC7C,SAAS,GAAW,IAAI,CAAC,UAAU,CAAC,UAAU;4BAChD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;wBACpD,IAAI,wDAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,SAAS,GAAG,wDAAY,CAAC,OAAO,EAAE,CAAC;4BACtF,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;wBACtC,CAAC;6BACI,CAAC;4BACF,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;4BAC9B,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;4BAC/B,IAAI,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gCACzD,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CACpC,wDAAY,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gCAChE,SAAS,CAAC,IAAI,IAAI,wDAAY,CAAC,OAAO,CAAC;gCACvC,SAAS,CAAC,IAAI,CAAC,IAAI,qEAAc,EAAE,CAAC,CAAC;4BACzC,CAAC;wBACL,CAAC;;;wBAlBqE,CAAC,EAAE;;4BAoB7E,sBAAO,SAAS,EAAC;;;;KACpB;IACY,yCAAoB,GAAjC,UAAkC,KAAa;;;;gBACvC,UAAU,GAAY,KAAK,CAAC;gBAChC,KAAS,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACtE,QAAQ,GAAsB,wDAAY,CAAC,iBAAiB,CAC9D,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBAC9E,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,wDAAY,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;wBACpH,UAAU,GAAG,IAAI,CAAC;oBACtB,CAAC;gBACL,CAAC;gBACD,sBAAO,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,EAAC;;;KAC1I;IACL,iBAAC;AAAD,CAAC,CArF+B,4DAAc,GAqF7C;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;;;;;;;;;;;;;;;;;;AC9FE;AACT;AAOrD;IAAA;QACY,cAAS,GAAyC,EAAE,CAAC;IAiCjE,CAAC;IA/BiB,0BAAW,GAAzB;QACI,OAAO,cAAc,CAAC,QAAQ,CAAC;IACnC,CAAC;IACM,iCAAQ,GAAf,UAAgB,SAAiB,EAAE,mBAAoC;QACnE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,mBAAmB,CAAC;IACpD,CAAC;IACM,yCAAgB,GAAvB,UAAwB,IAAY;QAChC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IACM,oCAAW,GAAlB,UAAmB,IAAY;QAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACM,+BAAM,GAAb,UAAc,MAAiB,EAAE,QAAkB,EAC/C,aAA4B,EAAE,IAAa;;QAC3C,IAAM,YAAY,GAAW,OAAO,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACrF,IAAI,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACzD,IAAG,CAAC,mBAAmB,EAAE,CAAC;YACtB,IAAG,CAAC,CAAC,eAAQ,CAAC,YAAY,0CAAE,SAAS,GAAE,CAAC;gBACpC,mBAAmB,GAAG,wDAAY,CAAC;YACvC,CAAC;iBAAM,CAAC;gBACJ,mBAAmB,GAAG,8DAAmB,CAAC;YAC9C,CAAC;QACL,CAAC;QACD,OAAO,IAAI,mBAAmB,CAAC,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;IACpE,CAAC;IACa,uBAAQ,GAAtB,UAAuB,IAAY,EAAE,mBAAoC;QACrE,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IAC3D,CAAC;IACa,0BAAW,GAAzB,UAA0B,IAAY;QAClC,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IA/Bc,uBAAQ,GAAmB,IAAI,cAAc,EAAE,CAAC;IAgCnE,qBAAC;CAAA;AAlC0B;;;;;;;;;;;;;;;;;;;;;;;;ACXwD;AAGpC;AAEI;AACU;AACb;AAGhD;IAA6C,yEAAY;IAErD,wBAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAAyB,QAAQ,CAAC;;IACnD,CAAC;IAEe,4CAAmB,GAAnC,UAAoC,KAAa,EAAE,IAAe;;;;;;wBACxD,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;wBAC1D,qBAAM,wDAAY,CAAC,iBAAiB,CACvC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE;gCACnC,SAAS,EAAE,YAAY,CAAC,EAAE;gCAC1B,IAAI,EAAE,wDAAY,CAAC,gBAAgB;gCACnC,KAAK,EAAE,YAAY,CAAC,YAAY,EAAE;gCAClC,mBAAmB,EAAE,iDAAQ,CAAC,yBAAyB,KAAK,UAAU;gCACtE,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;gCACpC,WAAW,EAAE,IAAI;6BACpB,CAAC;4BARN,sBAAO,SAQD,EAAC;;;;KACV;IACe,8CAAqB,GAArC,UAAsC,KAAa,EAAE,IAA4B,EAAE,KAAa;;;;;;wBACtF,aAAa,GAAmB,IAAI,qEAAc,EAAE,CAAC;wBACrD,QAAQ,GAAU,wDAAY,CAAC,UAAU,CAAC,KAAK,EACjD,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;wBACrD,QAAQ,GAAc,IAAI,CAAC,gBAAgB,CAAC,wDAAY,CAAC,QAAQ,CACnE,wDAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,wDAAY,CAAC,sBAAsB,CAAC,EACrE,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;wBAE/B,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAC3B,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACpD,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,wDAAY,CAAC,qBAAqB,CAAC;6BAC/F,KAAI,CAAC,OAAO,CAAC,YAAY,KAAK,IAAI,GAAlC,wBAAkC;wBAClC,wBAAa,EAAC,QAAQ;wBAAC,qBAAM,wDAAY,CAAC,cAAc,CACpD,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,2DAAS,CAAC;;wBADvE,cAAuB,SACgD,EAAC,CAAC;;;6BAE1E,IAAI,CAAC,gBAAgB,EAArB,wBAAqB;wBACd,UAAU,GAAW,wDAAY,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;wBAChF,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,wDAAY,CAAC,gBAAgB,CAAC;wBAC9E,wBAAa,EAAC,QAAQ;wBAAC,qBAAM,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC;;wBAAvE,cAAuB,SAAgD,EAAC,CAAC;;4BAE7E,sBAAO,aAAa,EAAC;;;;KACxB;IACS,0CAAiB,GAA3B;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;IACxC,CAAC;IACS,oCAAW,GAArB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAClC,CAAC;IACY,6CAAoB,GAAjC,UAAkC,KAAa;;;;;;wBACrC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;wBAC9B,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBAC5C,eAAe,GAAW,QAAQ,CAAC;6BACnC,SAAQ,IAAI,CAAC,GAAb,wBAAa;wBACb,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,wDAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC;8BAC1E,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,wDAAY,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;wBAChF,IAAI,cAAc,CAAC,MAAM,GAAG,eAAe,EAAE,CAAC;4BAC1C,eAAe,GAAG,cAAc,CAAC,MAAM,CAAC;wBAC5C,CAAC;;;6BAEI,SAAQ,GAAG,CAAC,GAAZ,wBAAY;wBACjB,eAAe,GAAG,CAAC,wDAAY,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC;4BACrE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,wDAAY,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;6BACrF,gBAAe,IAAI,QAAQ,GAA3B,wBAA2B;wBACnB,qBAAM,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;4BAAxC,sBAAO,SAAiC,EAAC;;6BAG1C,CAAC,eAAe,IAAI,CAAC,CAAC,EAAtB,wBAAsB;wBAAG,qBAAM,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,cAAc,CAAC;;wBAAzD,cAAyD;;4BACrF,qBAAM,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,eAAe,CAAC;;wBAA5D,cAA4D;;4BADhE,0BACiE;;;;KAEpE;IAEe,qCAAY,GAA5B,UAA6B,KAAa,EAAE,IAA6B;;;;;;;wBAC/D,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBAC1C,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9C,QAAQ,GAAG,CAAC,UAAI,CAAC,CAAC,CAAC,mCAAI,EAAE,CAAC,CAAC,MAAM,CAAC;wBAClC,KAAK,GAAgB,EAAE,CAAC;8BACV,EAAJ,aAAI;;;6BAAJ,mBAAI;wBAAX,GAAG;wBACF,OAAO,GAAmB,IAAI,qEAAc,EAAE,CAAC;wBAC5C,QAAQ,GAAG,CAAC;;;6BAAE,SAAQ,GAAG,GAAG,CAAC,MAAM;wBAClC,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;wBAC3B,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,wDAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;wBACnE,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBACnB,qBAAM,IAAI,CAAC,qBAAqB,CACxD,SAAS,EAAE,IAAI,EAAE,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;wBAD5C,QAAQ,GAAc,SACsB;wBAClD,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAC3B,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;;;wBARa,QAAQ,EAAG;;;wBAUnD,WAAW,GAAc,wDAAY,CAAC,iBAAiB,CACzD,wDAAY,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;wBACxD,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI;4BACzB,wDAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBACnE,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;;;wBAhBrB,IAAI;;4BAkBpB,sBAAO,KAAK,EAAC;;;;KAChB;IAEe,gDAAuB,GAAvC,UAAwC,KAAa,EAAE,UAAuB;;;;;;wBACpE,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC9C,KAAK,GAAgB,EAAE,CAAC;wBACrB,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,UAAU,CAAC,MAAM;wBACb,qBAAM,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;wBAAnF,QAAQ,GAAc,SAA6D;wBACzF,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,wDAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;wBAC5F,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;wBAHsB,CAAC,EAAE;;4BAKlD,sBAAO,KAAK,EAAC;;;;KAChB;IAEe,wCAAe,GAA/B,UAAgC,KAAa;;;;;;wBACnC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;wBAChC,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,MAAM,IAAK,WAAI,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,EAA5B,CAA4B,EAAE,CAAC,CAAC,CAAC;wBAC7E,IAAI,GAA4B,EAAE,CAAC;wBACzC,KAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC3B,GAAG,GAAG,EAAE,CAAC;4BACf,WAA0B,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE,CAAC;gCAApB,MAAM;gCACX,IAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;oCACX,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gCACxB,CAAC;4BACL,CAAC;4BACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBACnB,CAAC;wBACM,qBAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC;4BAA3C,sBAAO,SAAoC,EAAC;;;;KAC/C;IACe,kDAAyB,GAAzC,UAA0C,KAAa,EAAE,QAAgB;;;;;;wBAC/D,IAAI,GAA4B,EAAE,CAAC;wBACnC,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBAChD,cAAc,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;4BAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC;4BAC9C,IAAM,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC;4BAClC,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;gCAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;4BACxC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;wBACpC,CAAC,CAAC,CAAC;wBACI,qBAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC;4BAA3C,sBAAO,SAAoC,EAAC;;;;KAC/C;IACL,qBAAC;AAAD,CAAC,CAtI4C,wDAAY,GAsIxD;;;;;;;;;;;;;;;;;;;;;;;;AC9I8C;AACI;AAGiB;AACf;AACQ;AAE7D;IAAsC,2EAAY;IAG9C,0BAA6B,MAAiB,EAC1C,QAAmB,EAAE,UAAyB;QAC9C,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QAG1C,KAAI,CAAC,QAAQ,GAA8B,QAAQ,CAAC;;IACxD,CAAC;IAEY,kDAAuB,GAApC,UAAqC,KAAa;;;;4BACvC,qBAAM,wDAAY,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,KAAK,EAAE,wDAAY,CAAC,MAAM,CAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,wDAAY,CAAC,MAAM,CAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,IAAI,CAAC;4BAAnR,sBAAO,SAA4Q,EAAC;;;;KACvR;IACO,0CAAe,GAAvB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;IACvH,CAAC;IACY,uCAAY,GAAzB,UAA0B,KAAa;;;;;;;wBAC7B,KAAK,GAAG,wDAAY,CAAC,MAAM,CAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;wBAC/D,MAAM,GAAG,wDAAY,CAAC,MAAM,CAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;6BAEpE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAnB,wBAAmB;wBACV,qBAAM,wDAAY,CAAC,eAAe,CAAC,KAAK,EAC5C,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE;gCAC1D,KAAK,EAAE,KAAK;gCACZ,MAAM,EAAE,MAAM,EAAE,EAAE,KAAK,CAC9B;;wBAJD,KAAK,IAAG,SAIK,EAAC;;;wBAEd,KAAK,GAAG,IAAI,6DAAU,CAAC,wDAAY,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;;;wBAE1E,IAAG,gBAAgB,CAAC,YAAY,KAAK,MAAM,EAAE,CAAC;4BAC1C,KAAK,CAAC,mBAAmB,GAAG;gCACxB,IAAM,aAAa,GAAuB;oCACtC,MAAM,EAAE,KAAK,CAAC,KAAK;oCACnB,KAAK,EAAE,KAAK,CAAC,KAAK;oCAClB,IAAI,EAAE,KAAK,CAAC,IAAI;oCAChB,IAAI,EAAE,KAAK,CAAC,IAAI;oCAChB,KAAK,EAAE,KAAK,CAAC,KAAK;oCAClB,MAAM,EAAE,KAAK,CAAC,MAAM;oCACpB,eAAe,EAAE,KAAK,CAAC,eAAe;oCACtC,OAAO,EAAE,KAAK;oCACd,OAAO,EAAE,IAAI;oCACb,SAAS,EAAE,gBAAgB,CAAC,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC;wCACnD,SAAS,EAAE,CAAC,CAAC,CAAC;wCACd,SAAS,EAAE,CAAC;qCACf,CAAC,CAAC,CAAC,SAAS;iCAChB,CAAC;gCACF,wDAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;4BACnE,CAAC,CAAC;wBACN,CAAC;wBAED,sBAAO,KAAK,EAAC;;;;KAChB;IAEY,+CAAoB,GAAjC,UAAkC,KAAa;;;;;;wBACrC,cAAc,GAAG,IAAI,qEAAc,EAAE,CAAC;6BACzC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAA7B,wBAA6B;wBAC5B,yBAAc,EAAC,QAAQ;wBAAC,qBAAM,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;;wBAAjE,cAAwB,SAAyC,EAAC,CAAC;;;wBAEvE,yBAAc,EAAC,QAAQ;wBAAC,qBAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;;wBAAtD,cAAwB,SAA8B,EAAC,CAAC;wBACxD,sBAAO,CAAC,cAAc,CAAC,EAAC;;;;KAC3B;IAzDa,6BAAY,GAAgC,QAAQ,CAAC;IA0DvE,uBAAC;CAAA,CA5DqC,wDAAY,GA4DjD;AA5D4B;AA8D7B,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACrEzB;AACI;AAEH;AACqC;AACxB;AAE7D;IAAgC,qEAAY;IAExC,oBAA6B,MAAiB,EAC1C,QAAmB,EAAY,UAAyB;QACxD,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QACX,gBAAU,GAAV,UAAU,CAAe;QAExD,KAAI,CAAC,QAAQ,GAAwB,QAAQ,CAAC;;IAClD,CAAC;IACY,yCAAoB,GAAjC,UAAkC,KAAa;;;;;;wBACvC,YAAY,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;6BAEjD,KAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,QAAQ,GAArC,wBAAqC;wBAC/B,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;wBAC9B,qBAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,OAAO,CAAC;;wBAA5E,UAAU,GAAc,SAAoD;wBAClF,sBAAO,CAAC,UAAU,CAAC,EAAC;;6BAGpB,KAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,OAAO,GAApC,wBAAoC;wBAC9B,cAAc,GAAmB,IAAI,qEAAc,EAAE,CAAC;wBACnD,CAAC,GAAG,CAAC;;;6BAAE,EAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM;wBACpC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;wBAC9B,qBAAM,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;;wBAAzE,WAAW,GAAG,SAA2D;wBAC/E,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;;;wBAJO,CAAC,EAAE;;4BAMnD,sBAAO,CAAC,cAAc,CAAC,EAAC;;;;;KAE/B;IACO,sCAAiB,GAAzB,UAA0B,KAAa;QAC7B,SAAqB,IAAI,CAAC,QAAQ,EAAhC,EAAE,UAAE,UAAU,gBAAkB,CAAC;QACzC,OAAO;YACH,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,QAAQ;YACnB,KAAK;YACL,UAAU;YACV,mBAAmB,EAAE,IAAI;SAC5B,CAAC;IACN,CAAC;IAEa,uCAAkB,GAAhC,UAAiC,KAAa,EAAE,OAA8B;;;;;;6BACtE,CAAC,IAAI,CAAC,qBAAqB,EAA3B,wBAA2B;wBACrB,KAAK,GAAU,wDAAY,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC9E,sBAAO,IAAI,qEAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,oDAAK,OAAO,EAAG,EAAC;4BAG1E,qBAAM,wDAAY,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,oDAAK,OAAO,EAAG;4BAAlG,sBAAO,SAA2F,EAAC;;;;KAE1G;IAEa,wCAAmB,GAAjC,UAAkC,KAAa,EAAE,OAA8B,EAAE,QAAgB,EAAE,SAAiB;;;;;;wBAChH,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC9B,wDAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;wBAC9D,YAAY,GAAG,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC/C,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBAC/B,qBAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,OAAO,CAAC;;wBAAjE,UAAU,GAAG,SAAoD;wBACvE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;wBAC7B,sBAAO,UAAU,EAAC;;;;KACrB;IACL,iBAAC;AAAD,CAAC,CAzD+B,wDAAY,GAyD3C;;AAED,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACrEiB;AAIhB;AACJ;AACT;AACsC;AACtC;AACE;AAElD;IAAA;IAwNA,CAAC;IApNuB,6BAAkB,GAAtC,UAAuC,MAAiB,EAAE,UAAyB,EAC/E,KAAiB,EAAE,KAAa;;;;;;wBAC1B,UAAU,GAAgB,EAAE,CAAC;wBAC7B,iBAAiB,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAC5D,UAAU,CAAC,WAAW,EAAE,CAAC;wBACzB,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;wBAC3E,iBAAiB,CAAC,KAAK,IAAI,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;6BAC3E,gBAAU,CAAC,IAAI;8BAAf,UAAU;wBAAS,qBAAM,IAAI,CAAC,sBAAsB,CAAC,MAAM,EACvD,UAAU,EAAE,KAAK,EAAE,iBAAiB,CAAC;;wBADzC,wBAAmB,SACsB,IAAE;wBAC3C,UAAU,CAAC,UAAU,EAAE,CAAC;wBAClB,eAAe,GAAyB,IAAI,yEAAoB,CAAC,KAAK,EACxE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,wDAAc,CAAC,WAAW,EAAE,EAAE,yCAAe,CAAC,CAAC;wBAClF,qBAAM,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,eAAe,CAAC;;wBAAxD,SAAwD,CAAC;wBACzD,+EAAW,eAAe,CAAC,MAAM,SAAE;;;;KACtC;IACoB,iCAAsB,GAA3C,UAA4C,MAAiB,EAAE,UAAyB,EACpF,SAAyB,EAAE,KAAa;;;;;;wBACxC,IAAI,CAAC,SAAS,CAAC,SAAS;4BAAE,sBAAO;wBACjC,SAAS,CAAC,gBAAgB,EAAE,CAAC;wBACvB,cAAc,GAAgB,EAAE,CAAC;wBACnC,SAAS,GAAW,wDAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;6BAC9C,UAAS,CAAC,OAAO,EAAE,KAAK,MAAM,IAAI,MAAM,CAAC,cAAc,GAAvD,wBAAuD;wBACjD,aAAa,GAAmB,IAAI,qEAAc,EAAE,CAAC;6BACvD,SAAS,CAAC,KAAK,EAAf,wBAAe;6BACX,UAAS,YAAY,mDAAU,IAAI,SAAS,CAAC,EAAE,GAA/C,wBAA+C;wBACrB,qBAAM,wDAAY,CAAC,oBAAoB,CAC7D,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,OAAO,EAAE,KAAK,MAAM,CAAC;;wBADlE,MAAM,GAAc,SAC8C;wBACxE,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;wBAC/B,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;;4BAEjC,qBAAM,wDAAY,CAAC,oBAAoB,CAC1E,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,OAAO,EAAE,KAAK,MAAM,CAAC;;wBADxE,mBAAmB,GAAc,SACuC;wBAC9E,aAAa,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;wBAC5C,SAAS,GAAG,wDAAY,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;;;6BAE1D,SAAS,CAAC,WAAW,EAArB,wBAAqB;wBACrB,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC;4BAClB,SAAS,CAAC,IAAI,IAAI,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,oBAAoB,CAAC;wBAC7E,CAAC;wBACoC,qBAAM,wDAAY,CAAC,cAAc,CAClE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,CAAC,cAAc,CAAC;;wBADpD,iBAAiB,GAAc,SACqB;wBAC1D,aAAa,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;wBAC1C,SAAS,GAAG,wDAAY,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;;;wBAE5D,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;4BACnB,YAAY,GAAW,wDAAY,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;4BACrE,aAAa,CAAC,QAAQ,CAAC,wDAAY,CAAC,iBAAiB,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CAAC;4BACjF,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;4BACnC,SAAS,CAAC,IAAI,IAAI,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,oBAAoB,GAAG,wDAAY,CAAC,OAAO,CAAC;wBACrG,CAAC;;;8BAE2B,EAAd,cAAS,CAAC,IAAI;;;6BAAd,eAAc;wBAArB,GAAG;wBACV,IAAI,CAAC,GAAG,CAAC,OAAO;4BAAE,yBAAS;wBAC3B,UAAU,CAAC,WAAW,EAAE,CAAC;wBACnB,KAAK,GAAW,wDAAY,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;wBACjE,cAAc,GAAW,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBAC/C,QAAQ,GAAgB,EAAE,CAAC;wBAC3B,eAAe,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,CAAC,SAAS,EAAZ,CAAY,CAAC,CAAC;wBACvD,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,eAAe,CAAC,MAAM;wBAC1C,OAAO,GAAa,eAAe,CAAC,CAAC,CAAC,CAAC;wBAC3C,IAAI,CAAC,OAAO,CAAC,SAAS;4BAAE,yBAAS;wBAC3B,SAAS,GAAW,wDAAY,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,EACjE,KAAK,GAAG,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,SAAS,EAC3D,eAAe,CAAC,MAAM,CAAC,CAAC;wBAC5B,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,cAAc,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClF,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC;wBACvF,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBAC1C,cAAc,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC;6BACjD,QAAO,YAAY,mDAAU,GAA7B,yBAA6B;6BAC7B,cAAQ,CAAC,IAAI;8BAAb,QAAQ;wBAAS,qBAAM,IAAI,CAAC,kBAAkB,CAC1C,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,CAAC;;wBAD3C,wBAAiB,SAC0B,IAAE;;6BAG7C,qBAAiB,OAAQ,CAAC,sBAAsB,EAAE;;wBAAlD,SAAkD,CAAC;6BACnD,cAAQ,CAAC,IAAI;8BAAb,QAAQ;wBAAS,qBAAM,wDAAY,CAAC,qBAAqB,CAAC,MAAM,EAC5D,UAAU,EAAY,OAAO,EAAE,SAAS,CAAC;;wBAD7C,wBAAiB,SAC4B,IAAE;;;wBAjBH,CAAC,EAAE;;;wBAoBvD,UAAU,CAAC,UAAU,EAAE,CAAC;wBACxB,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;wBAC1C,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;4BACxB,SAAS,CAAC,IAAI,GAAG,wDAAY,CAAC,UAAU,OAAvB,wDAAY,EAAe,QAAQ,EAAE,IAAI,CAAC;4BAC3D,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;4BAC9B,SAAS,CAAC,IAAI,IAAI,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,mBAAmB,CAAC;4BACzE,cAAc,CAAC,IAAI,OAAnB,cAAc,EAAS,QAAQ,EAAE;4BACjC,cAAc,CAAC,IAAI,CAAC,wDAAY,CAAC,iBAAiB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;4BAC3E,SAAS,CAAC,IAAI,IAAI,wDAAY,CAAC,OAAO,CAAC;wBAC3C,CAAC;;;wBApCa,IAAc;;6BAsChC,sBAAO,cAAc,EAAC;;;;KACzB;IACc,sBAAW,GAA1B,UAA2B,KAAkB;QACzC,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,YAAY,iEAAY,EAAE,CAAC;YACzE,KAAK,CAAC,GAAG,EAAE,CAAC;QAChB,CAAC;IACL,CAAC;IACoB,4BAAiB,GAAtC,UAAuC,MAAiB,EAAE,UAAyB,EAC/E,KAAa;;;;;;wBACP,aAAa,GAAmB,IAAI,qEAAc,EAAE,CAAC;6BACvD,MAAM,CAAC,SAAS,EAAhB,wBAAgB;6BACZ,MAAM,CAAC,KAAK,EAAZ,wBAAY;wBACuB,qBAAM,wDAAY,CAAC,qBAAqB,CACvE,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC;;wBADjC,eAAe,GAAc,SACI;wBACvC,aAAa,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;wBACxC,KAAK,GAAG,wDAAY,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;;;6BAElD,MAAM,CAAC,WAAW,EAAlB,wBAAkB;wBAClB,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;4BACf,KAAK,CAAC,IAAI,IAAI,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,oBAAoB,CAAC;wBACzE,CAAC;wBACD,wBAAa,EAAC,QAAQ;wBAAC,qBAAM,wDAAY,CAAC,cAAc,CACpD,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,cAAc,CAAC;;wBADnD,cAAuB,SAC4B,EAAC,CAAC;;4BAG7D,sBAAO,aAAa,EAAC;;;;KACxB;IACoB,gCAAqB,GAA1C,UAA2C,MAAiB,EAAE,UAAyB,EACnF,KAAa;;;;;;wBACP,OAAO,GAAG,wDAAY,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;wBACzC,qBAAM,wDAAY,CAAC,qBAAqB,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,CAAC,SAAS,EAAE,iBAAiB,EAAE,OAAO,EAAE,kBAAkB,EAAE,OAAO,EAAE,CAAC;;wBAA9M,QAAQ,GAAG,SAAmM;wBACxL,qBAAM,wDAAY,CAAC,eAAe,CAC1D,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO;gCACpC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC;;wBAFnD,QAAQ,GAAc,SAE6B;wBACrD,KAAK,GAAW,CAAC,CAAC;wBACtB,IAAI,MAAM,CAAC,YAAY,KAAK,OAAO,EAAE,CAAC;4BAClC,KAAK,GAAG,wDAAY,CAAC,qBAAqB,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;wBAC5E,CAAC;6BACI,IAAI,MAAM,CAAC,YAAY,KAAK,MAAM,EAAE,CAAC;4BACtC,KAAK,GAAG,wDAAY,CAAC,qBAAqB,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC;wBACxF,CAAC;wBACD,QAAQ,CAAC,KAAK,IAAI,KAAK,CAAC;wBACxB,QAAQ,CAAC,MAAM,IAAI,KAAK,CAAC;wBACzB,sBAAO,QAAQ,EAAC;;;;KACnB;IACmB,wBAAa,GAAjC,UAAkC,MAAiB,EAAE,UAAyB;;;;;;;wBACpE,KAAK,GAAkB,EAAE,CAAC;6BAC5B,CAAC,MAAM,CAAC,OAAO,EAAf,wBAAe;wBACmB,qBAAM,IAAI,CAAC,iBAAiB,CAC1D,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC;;wBAD1C,SAAS,GAAmB,SACc;wBAChD,IAAI,CAAC,SAAS,CAAC,OAAO;4BAAE,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;;;6BAE3C,MAAM,CAAC,YAAY,EAAnB,wBAAmB;wBACI,qBAAM,IAAI,CAAC,qBAAqB,CACxD,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC;;wBAD1C,QAAQ,GAAc,SACoB;wBAChD,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACjB,UAAU,GAAW,wDAAY,CAAC,WAAW,CAAC,QAAQ,EACxD,MAAM,CAAC,YAAY,KAAK,KAAK,EAAE,MAAM,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC;wBAClE,IAAI,MAAM,CAAC,YAAY,KAAK,KAAK,EAAE,CAAC;4BAChC,UAAU,CAAC,WAAW,EAAE,CAAC;4BACzB,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,SAAS,CAAC;4BACzC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC;wBACrE,CAAC;6BACI,CAAC;4BACF,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC;4BACjD,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,UAAU,GAAG,GAAG,CAAC;wBACnD,CAAC;wBACiC,qBAAM,IAAI,CAAC,iBAAiB,CAC1D,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC;;wBAD7B,SAAS,GAAmB,SACC;wBACnC,IAAI,MAAM,CAAC,YAAY,KAAK,KAAK;4BAAE,UAAU,CAAC,UAAU,EAAE,CAAC;wBAC3D,IAAI,CAAC,SAAS,CAAC,OAAO;4BAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;;6BAG7C,OAAM,CAAC,YAAY,KAAK,OAAO,GAA/B,wBAA+B;wBACH,qBAAM,IAAI,CAAC,qBAAqB,CACxD,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC;;wBAD1C,QAAQ,GAAc,SACoB;wBAChD,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACvB,UAAU,CAAC,WAAW,EAAE,CAAC;wBACzB,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC;wBAChC,qBAAM,IAAI,CAAC,iBAAiB,CAC1D,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC;;wBAD1C,SAAS,GAAmB,SACc;wBAChD,IAAI,CAAC,SAAS,CAAC,OAAO;4BAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;wBACpD,UAAU,CAAC,UAAU,EAAE,CAAC;;4BAGU,qBAAM,IAAI,CAAC,iBAAiB,CAC1D,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC;;wBAD1C,SAAS,GAAmB,SACc;wBAC5C,SAAS,GAAW,UAAU,CAAC,YAAY,CAAC;wBAChD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;4BACrB,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;4BACxB,SAAS,GAAG,wDAAY,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;4BAChD,SAAS,CAAC,IAAI,IAAI,UAAU,CAAC,UAAU,GAAG,GAAG,CAAC;wBAClD,CAAC;wBAC2B,qBAAM,IAAI,CAAC,qBAAqB,CACxD,MAAM,EAAE,UAAU,EAAE,SAAS,CAAC;;wBAD5B,QAAQ,GAAc,SACM;wBAClC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;4BAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;4BAC3C,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;;;wBAGhC,KAAK,GAAW,UAAU,CAAC,YAAY,CAAC;wBAC5C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;4BACrB,KAAK,CAAC,IAAI,GAAG,wDAAY,CAAC,WAAW,CAAC,wDAAY,CAAC,UAAU,OAAvB,wDAAY,EAAe,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC;4BACjF,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,wDAAY,CAAC,iBAAiB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;4BACjE,KAAK,CAAC,IAAI,IAAI,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,oBAAoB,GAAG,wDAAY,CAAC,OAAO,CAAC;wBACjG,CAAC;wBACQ,CAAC,GAAW,CAAC;;;6BAAE,EAAC,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM;wBAClD,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;wBACxC,SAAS,GAAgB,EAAE,CAAC;6BAChC,eAAS,CAAC,IAAI;8BAAd,SAAS;wBAAS,qBAAM,IAAI,CAAC,sBAAsB,CAC/C,MAAM,EAAE,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;;wBADtD,wBAAkB,SACoC,IAAE;wBAClD,eAAe,GAAwB,IAAI,wEAAmB,CAAC,KAAK,EACtE,SAAS,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,wDAAc,CAAC,WAAW,EAAE,EAAE,yCAAe,CAAC,CAAC;wBAClG,qBAAM,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,eAAe,CAAC;;wBAAvD,SAAuD,CAAC;wBACxD,SAAS,GAAG,yDAAI,eAAe,CAAC,MAAM,OAAC,CAAC;wBACxC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;4BAChC,WAAK,CAAC,CAAC,CAAC,EAAC,IAAI,WAAI,SAAS,EAAE;wBAChC,CAAC;;4BACI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAC3B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC1C,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC;;;wBAdU,CAAC,EAAE;;6BAgB3D,sBAAO,KAAK,EAAC;;;;KAChB;IAtNa,8BAAmB,GAAW,GAAG,CAAC;IAClC,+BAAoB,GAAW,GAAG,CAAC;IACnC,+BAAoB,GAAW,IAAI,CAAC;IAqNtD,iBAAC;CAAA;AAxNsB;;;;;;;;;;;;;;;;;;;;;;;;ACX8C;AAGtB;AACI;AAEH;AACqC;AAErF;IAAiC,sEAAY;IAGzC,qBAA6B,MAAiB,EAC1C,QAAmB,EAAE,UAAyB;QAC9C,kBAAK,YAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,SAAC;QAFX,YAAM,GAAN,MAAM,CAAW;QAG1C,KAAI,CAAC,QAAQ,GAAsB,QAAQ,CAAC;;IAChD,CAAC;IACY,0CAAoB,GAAjC,UAAkC,KAAa;;;;;;wBACrC,OAAO,GAAgD;4BACzD,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;4BAC3B,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;4BAClC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;4BAC/B,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;4BACpC,mBAAmB,EAAE,iDAAQ,CAAC,sBAAsB,KAAK,OAAO;4BAChE,WAAW,EAAE,wDAAY,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;yBACvE,CAAC;wBACF,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;4BACxB,IAAI,GAAU,wDAAY,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;4BAC7E,sBAAO,CAAC,IAAI,qEAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,oDAAK,OAAO,EAAG,CAAC,EAAC;wBACtF,CAAC;wBACO,qBAAM,wDAAY,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAC7D,IAAI,CAAC,UAAU,EAAE,kDAAE,IAAI,EAAE,WAAW,CAAC,yBAAyB,EAAE,WAAW,EAAE,IAAI,IAAK,OAAO,EAAG;4BADpG,uBAAQ,SAC4F,GAAE;;;;KACzG;IAtBsB,qCAAyB,GAAW,CAAC,CAAC;IAuBjE,kBAAC;CAAA,CAxBgC,wDAAY,GAwB5C;AAxBuB;AA0BxB,4DAAc,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCuG;AACjH;AAEsB;AACR;AAIb;AACQ;AACI;AACE;AACd;AACA;AACE;AACA;AACI;AACI;AACD;AACyB;AAIpF;IAAA;IAuuBA,CAAC;IArsBiB,uBAAU,GAAxB,UAAyB,KAAa,EAAE,QAAgB,EACpD,YAAwB,EAAE,WAAoB;QAA9C,+CAAwB;QACxB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,OAAO,QAAQ,GAAG,YAAY,CAAC;QACnC,CAAC;QACD,IAAM,KAAK,GAAW,UAAU,CAAC,KAAK,CAAC,CAAC;QACxC,IAAM,IAAI,GAAW,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,IAAI,WAAW,CAAC;QACrE,IAAI,CAAS,CAAC;QACd,QAAQ,IAAI,EAAE,CAAC;YACX,KAAK,IAAI;gBACL,CAAC,GAAG,GAAG,CAAC;gBACR,MAAM;YACV,KAAK,IAAI;gBACL,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;gBAChB,MAAM;YACV,KAAK,IAAI;gBACL,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;gBAChB,MAAM;YACV,KAAK,IAAI;gBACL,CAAC,GAAG,IAAI,CAAC;gBACT,MAAM;YACV,KAAK,IAAI;gBACL,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;gBAChB,MAAM;YACV,KAAK,IAAI;gBACL,CAAC,GAAG,IAAI,CAAC;gBACT,MAAM;YACV,KAAK,IAAI;gBACL,CAAC,GAAG,IAAI,CAAC;gBACT,MAAM;YACV,KAAK,IAAI;gBACL,CAAC,GAAG,GAAG,CAAC;gBACR,MAAM;YACV,QAAQ;YACR,KAAK,GAAG;gBACJ,CAAC,GAAG,QAAQ,GAAG,KAAK,CAAC;gBACrB,MAAM;QACd,CAAC;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;IACzC,CAAC;IACa,mBAAM,GAApB,UAAqB,KAAsB;QACvC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC5B,IAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;gBACvB,KAAK,IAAI,IAAI,CAAC;YAClB,CAAC;YACD,OAAO,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;QAC5D,CAAC;QACD,OAAO,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;IAC/B,CAAC;IACa,uBAAU,GAAxB;QAAyB,eAAiB;aAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;YAAjB,0BAAiB;;QACtC,IAAM,UAAU,GAAU;YACtB,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK;YACrB,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM;YACvB,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;YACnB,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;SACtB,CAAC;QACF,KAAK,CAAC,OAAO,CAAC,UAAC,IAAW;YACtB,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC;gBACzD,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;gBAC5D,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;gBACtD,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACtB,CAAC;IACa,wBAAW,GAAzB,UAA0B,IAAW,EAAE,MAAsB,EAAE,KAAsB;QAA9C,sCAAsB;QAAE,qCAAsB;QACjF,OAAO;YACH,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;YACxC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;SACtC,CAAC;IACN,CAAC;IACa,uBAAU,GAAxB,UAAyB,KAAa,EAAE,KAAa,EAAE,MAAc;QACjE,OAAO;YACH,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,MAAM,EAAE,KAAK,CAAC,KAAK,GAAG,KAAK;YAC3B,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,IAAI,EAAE,KAAK,CAAC,IAAI,GAAG,MAAM;SAC5B,CAAC;IACN,CAAC;IACa,6BAAgB,GAA9B,UAA+B,UAAyB;QACpD,OAAO;YACH,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,UAAU,CAAC,UAAU;YAC7B,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,UAAU,CAAC,OAAO,CAAC,GAAG;SAC/B,CAAC;IACN,CAAC;IACa,6BAAgB,GAA9B,UAA+B,UAAyB;QACpD,OAAO;YACH,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,UAAU,CAAC,UAAU;YAC7B,IAAI,EAAE,UAAU,CAAC,WAAW,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG;YACrD,IAAI,EAAE,UAAU,CAAC,WAAW;SAC/B,CAAC;IACN,CAAC;IACa,2BAAc,GAA5B,UAA6B,UAAyB;QAClD,OAAO,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;IACrF,CAAC;IACa,gCAAmB,GAAjC,UAAkC,QAAgB,EAAE,SAAiB,EAAE,QAAgB;QACnF,OAAO,uBAAe,QAAQ,8BAAoB,SAAS,4BAAkB,QAAQ,sBAAY,IAAI,CAAC,UAAU,QAAI,CAAC;IACzH,CAAC;IACa,qCAAwB,GAAtC,UAAuC,IAAY,EAAE,UAAyB,EAAE,QAAyB;QACrG,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAC7C,OAAO,gDAAuC,IAAI,CAAC,mBAAmB,CAClE,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,MAAG;YACnD,+DAAwD,UAAU,CAAC,QAAQ,6CAAmC,IAAI,WAAQ,CAAC;IACnI,CAAC;IACa,0BAAa,GAA3B,UAA4B,UAAyB,EAAE,SAAoB;QACvE,IAAM,MAAM,GAAgB,EAAE,CAAC;QAC/B,IAAM,UAAU,GAAW,SAAS,CAAC,MAAM,CAAC;QAC5C,IAAM,SAAS,GAAW,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QACvD,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC;QAC5C,IAAM,eAAe,GAAW,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QACvE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvB,IAAM,SAAS,GAAW,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACtD,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,8DAAU,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;YACpF,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC;QAChC,CAAC;QACD,IAAM,eAAe,GAAW,UAAU,GAAG,CAAC,eAAe,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;QAC/E,IAAI,eAAe,GAAG,CAAC,EAAE,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC,IAAI,8DAAU,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC;QAC9F,CAAC;QACD,YAAW,sEAAc,YAAd,sEAAc,iEAAI,MAAM,aAAE;IACzC,CAAC;IACa,gCAAmB,GAAjC,UAAuD,KAAa,EAAE,QAAmB,EACrF,UAAyB,EAAE,IAAY,EAAE,MACqB;QAFlE,iBAcC;QAXG,IAAM,KAAK,GAAa,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,EACvD,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QACpE,IAAM,SAAS,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAM,SAAS,GAAmB,IAAI,sEAAc,EAAE,CAAC;QACvD,KAAK,CAAC,OAAO,CAAC,UAAC,IAAY;YACvB,IAAM,IAAI,GAAU,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACjD,SAAS,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,UAAU,EAC9C,KAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YAChE,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACrB,CAAC;IACmB,2BAAc,GAAlC,UAAwD,KAAa,EAAE,QAAmB,EACtF,UAAyB,EAAE,IAAgC,EAAE,MACC;;;;;;6BAC1D,QAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAA/C,wBAA+C;wBAC/C,sBAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC;gCACnF,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAoB,IAAI,CAAC,EAAE,MAAM,CAAC,EAAC;;wBAGxD,SAAI,CAAC,aAAa;8BAAC,UAAU;wBAAE,qBAAM,IAAI,CAAC,cAAc,CAAC,KAAK,EAAY,QAAQ,EAAE,UAAU,EACjG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;4BADnF,sBAAO,aAAI,aAA2B,SAC6C,GAAC,EAAC;;;;KAE5F;IACc,oBAAO,GAAtB,UAAuB,IAAuB;QAC1C,IAAM,OAAO,GAAW,oBAAoB,CAAC;QAC7C,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAO,IAAK,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACvG,CAAC;IACc,2BAAc,GAA7B,UAA8B,UAAyB,EAAE,KAAa;QAClE,IAAM,KAAK,GAAW,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC;QACrF,OAAO;YACH,GAAG,EAAE,UAAU,CAAC,OAAO,CAAC,GAAG;YAC3B,MAAM,EAAE,UAAU,CAAC,OAAO,CAAC,GAAG;YAC9B,KAAK,EAAE,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS;SACrE,CAAC;IACN,CAAC;IAEa,2BAAc,GAA5B,UAA6B,KAAa,EAAE,UAAyB,EACjE,OAAuD,EAAE,OAAe;QACxE,IAAM,mBAAmB,GAAW,UAAU,CAAC,WAAW,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC;QAC7G,IAAM,MAAM,GAAW,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;YAChE,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;cAC3E,OAAO,GAAG,OAAO,CAAC,GAAG,GAAG,YAAY,CAAC,oBAAoB,GAAG,UAAU,CAAC,QAAQ,CAAC;QACtF,IAAM,aAAa,GAAW,UAAU,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;QACtE,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC/B,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7C,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC;QACD,OAAO,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACjE,CAAC;IAEmB,2BAAc,GAAlC,UAAmC,KAAa,EAAE,QAAkB,EAAE,UAAyB,EAAE,IAAY;;;;;;wBACnG,OAAO,GAAmD,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;wBAChG,qBAAM,IAAI,OAAO,CAAY,UAAC,OAAO;gCACxC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,EAAE;oCAC1D,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK;iCACxC,EAAE,UAAU,MAAW;oCACpB,IAAM,IAAI,GAAU,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;oCACtF,OAAO,CAAC,IAAI,4DAAS,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;gCAC7D,CAAC,EAAE,OAAO,CAAC,CAAC;4BAChB,CAAC,CAAC;4BAPF,sBAAO,SAOL,EAAC;;;;KACN;IACa,6BAAgB,GAA9B,UAA+B,QAAgB,EAAE,UAAkB,EAAE,UAAkB;QACnF,OAAO,oCAA6B,QAAQ,OAAI;YAC5C,mEAA4D,UAAU,uBAAoB;YAC1F,uBAAgB,UAAU,QAAK,CAAC;IACxC,CAAC;IACa,4CAA+B,GAA7C,UAA8C,QAAgB,EAAE,UAAkB,EAAE,UAAkB;QAClG,OAAO,oCAA6B,QAAQ,OAAI;YAC5C,mEAA4D,UAAU,uBAAoB;YAC1F,uBAAgB,UAAU,0BAAuB,CAAC;IAC1D,CAAC;IACa,sBAAS,GAAvB,UAAwB,IAAY;QAChC,IAAM,OAAO,GAAa,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QACzE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QAC1C,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QACpF,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;QACpC,OAAO,CAAC,IAAI,aAAa,EAAE,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IACtF,CAAC;IACa,6BAAgB,GAA9B,UAA+B,IAAY,EAAE,KAAa,EAAE,UAAyB;QAArF,iBA4CC;QA3CG,IAAM,KAAK,GAAqB,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAChE,KAAK,CAAC,SAAS,GAAG,mFAAmF,CAAC;QACtG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACjC,IAAM,GAAG,GAAmB,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1D,GAAG,CAAC,SAAS,GAAG,kBAAkB,CAAC;QACnC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC5B,GAAG,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC7B,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC;QAC3B,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;QAC5B,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QAC/C,GAAG,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QAChC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC;QAC5B,GAAG,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;QACjC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;QAC3B,GAAG,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;QACjC,GAAG,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAM,QAAQ,GAAW,GAAG,CAAC,WAAW,CAAC;QACzC,IAAM,SAAS,GAAW,GAAG,CAAC,YAAY,CAAC;QAC3C,GAAG,CAAC,MAAM,EAAE,CAAC;QACb,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,IAAI,IAAI,GAAW,EAAE,CAAC;QACtB,IAAI,UAAU,CAAC,mBAAmB,EAAE,CAAC;YACjC,IAAI,GAAG,uBAAgB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAE;gBAClG,WAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,UAAU,EAAE,MAAM,CAAC,oBAAiB,CAAC;QACvG,CAAC;aAAM,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,0DAAa,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,kBAAQ;gBACnD,IAAM,IAAI,GAAG,0DAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,SAAsD;oBAC7E,IAAI,SAAS,KAAK,QAAQ,IAAI,SAAS,KAAK,MAAM,EAAE,CAAC;wBACjD,IAAI,IAAI,UAAG,KAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,CAAE,CAAC;oBAC7E,CAAC;yBAAM,CAAC;wBACJ,IAAI,IAAI,UAAG,KAAI,CAAC,+BAA+B,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAE,CAAC;oBAC7H,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,IAAI,GAAG,eAAe,GAAG,IAAI,GAAG,iBAAiB,CAAC;YACtD,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAM,GAAG,GAAW,4DAAkD,QAAQ,2BAAe,SAAS,UAAM,GAAG,IAAI;YAC/G,0EAA0E;YAC1E,iCAAyB,QAAQ,2BAAe,SAAS,UAAM;YAC/D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,wBAAwB,CAAC;QACpD,OAAO,EAAE,GAAG,OAAE,QAAQ,YAAE,SAAS,aAAE,CAAC;IACxC,CAAC;IACc,sBAAS,GAAxB,UAAyB,MAAyB,EAAE,QAAgB,EAAE,SAAiB,EAAE,GAAqB;QAC1G,MAAM,CAAC,KAAK,GAAG,QAAQ,GAAG,YAAY,CAAC,qBAAqB,CAAC;QAC7D,MAAM,CAAC,MAAM,GAAG,SAAS,GAAG,YAAY,CAAC,qBAAqB,CAAC;QAC/D,IAAM,OAAO,GAA6B,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAClE,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,qBAAqB,EAAE,YAAY,CAAC,qBAAqB,CAAC,CAAC;QACtF,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC,gBAAgB,CAAC;QAClD,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC5C,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IACmB,wBAAW,GAA/B,UAAgC,IAAY,EAAE,KAAa,EAAE,UAAyB;;;;gBAC5E,KAA+B,YAAY,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,EAAnF,GAAG,WAAE,QAAQ,gBAAE,SAAS,gBAA4D;gBACtF,IAAI,GAAW,4BAA4B,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACtF,GAAG,GAAqB,IAAI,KAAK,EAAE,CAAC;gBAC1C,GAAG,CAAC,WAAW,GAAC,WAAW,CAAC;gBAC5B,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;gBACf,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO;wBACvB,GAAG,CAAC,MAAM,GAAG;4BACT,IAAM,MAAM,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;4BACnE,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;4BACzD,IAAM,GAAG,GAAW,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,YAAY,CAAC,qBAAqB,CAAC,CAAC;4BACvF,MAAM,CAAC,MAAM,EAAE,CAAC;4BAChB,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,GAAG,SAAS,EAAE,CAAC,CAAC;wBACxD,CAAC,CAAC;wBACF,GAAG,CAAC,OAAO,GAAG;4BACV,OAAO,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;wBAC7D,CAAC,CAAC;oBACN,CAAC,CAAC,EAAC;;;KACN;IACmB,+BAAkB,GAAtC,UAAuC,KAAa,EAAE,QAAkB,EACpE,UAAyB,EAAE,IAAgC;;;;;;wBAC3D,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC;wBACD,qBAAM,IAAI,CAAC,cAAc,CAClD,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,mEAAa,CAAC;;wBAD/C,SAAS,GAAc,SACwB;wBACrD,UAAU,CAAC,SAAS,GAAG,QAAQ,CAAC;wBAChC,sBAAO,SAAS,EAAC;;;;KACpB;IACmB,4BAAe,GAAnC,UAAoC,KAAa,EAAE,QAAkB,EAAE,UAAyB;;;;;;wBACtF,SAAS,GAAmB,IAAI,sEAAc,EAAE,CAAC;wBACnD,SAAS,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACpC,WAAW,GAAW,UAAU,CAAC,QAAQ,CAAC;wBAChD,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC;6BACzC,QAAQ,CAAC,EAAE,EAAX,wBAAW;wBACL,MAAM,GAAW,QAAQ,CAAC,EAAE,GAAG,GAAG,CAAC;wBACrC,MAAM,SAAW,CAAC;6BAClB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAA/B,wBAA+B;wBAC/B,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC;wBAC9B,UAAU,CAAC,WAAW,EAAE,CAAC;wBACzB,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU;4BAC5C,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC;wBAClE,qBAAM,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAC9D,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;;wBADlE,MAAM,GAAG,SACyD,CAAC;wBACnE,UAAU,CAAC,UAAU,EAAE,CAAC;wBACxB,UAAU,CAAC,SAAS,GAAG,QAAQ,CAAC;;4BAGvB,qBAAM,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAC5C,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC;;wBADjC,MAAM,GAAG,SACwB,CAAC;;;wBAEtC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;wBAC3B,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;;;wBAEpC,UAAU,CAAC,WAAW,EAAE,CAAC;wBACzB,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;wBACO,qBAAM,IAAI,CAAC,kBAAkB,CAC1E,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC;;wBADjD,QAAQ,GAAmC,SACM;wBACvD,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAC7B,UAAU,CAAC,UAAU,EAAE,CAAC;6BACpB,QAAQ,CAAC,UAAU,EAAnB,yBAAmB;wBACb,YAAY,GAAW,QAAQ,CAAC,YAAY,CAAC;6BAC/C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAA/B,wBAA+B;wBAC/B,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;wBACjE,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC;wBAC9B,UAAU,CAAC,WAAW,EAAE,CAAC;wBACzB,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU;4BAC5C,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC;wBACjF,oBAAS,EAAC,QAAQ;wBAAC,qBAAM,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EACxE,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;;wBADxE,cAAmB,SACqD,EAAC,CAAC;wBAC1E,UAAU,CAAC,UAAU,EAAE,CAAC;wBACxB,UAAU,CAAC,SAAS,GAAG,QAAQ,CAAC;;;wBAGhC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;wBACnE,oBAAS,EAAC,QAAQ;wBAAC,qBAAM,IAAI,CAAC,kBAAkB,CAAC,SAAS,EACtD,QAAQ,EAAE,UAAU,EAAE,YAAY,CAAC;;wBADvC,cAAmB,SACoB,EAAC,CAAC;;;wBAGjD,UAAU,CAAC,QAAQ,GAAG,WAAW,CAAC;wBAClC,sBAAO,SAAS,EAAC;;;;KACpB;IACoB,uCAA0B,GAA/C,UAAgD,KAAa,EAAE,UAAyB,EACpF,IAAgC,EAAE,aAAqB;;;;;;wBACjD,WAAW,GAAW,UAAU,CAAC,QAAQ,CAAC;wBAChD,UAAU,CAAC,QAAQ,GAAG,WAAW,GAAG,aAAa,CAAC;wBAClD,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC;wBACD,qBAAM,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,uEAAe,CAAC;;wBAAhG,SAAS,GAAc,SAAyE;wBACtG,UAAU,CAAC,SAAS,GAAG,QAAQ,CAAC;wBAChC,UAAU,CAAC,QAAQ,GAAG,WAAW,CAAC;wBAClC,sBAAO,SAAS,EAAC;;;;KACpB;IACmB,kCAAqB,GAAzC,UAA0C,KAAa,EAAE,UAAyB,EAC9E,IAAgC;;;;4BACzB,qBAAM,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,4BAA4B,CAAC;4BAAxG,sBAAO,SAAiG,EAAC;;;;KAC5G;IACmB,iCAAoB,GAAxC;mGAAyC,KAAa,EAAE,UAAyB,EAC7E,IAAgC,EAAE,MAAuB;YAAvB,uCAAuB;;;4BAClD,qBAAM,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,EAChE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC;4BADhF,sBAAO,SACyE,EAAC;;;;KACpF;IACmB,2BAAc,GAAlC,UAAmC,KAAa,EAAE,QAAmB,EACjE,UAAyB,EAAE,IAAgC;;;;;;wBACrD,WAAW,GAAW,UAAU,CAAC,QAAQ,CAAC;wBAChD,UAAU,CAAC,QAAQ,GAAG,WAAW,GAAG,IAAI,CAAC,2BAA2B,CAAC;wBACxC,qBAAM,IAAI,CAAC,cAAc,CAClD,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,yEAAgB,CAAC;;wBADlD,SAAS,GAAc,SAC2B;wBACxD,UAAU,CAAC,QAAQ,GAAG,WAAW,CAAC;wBAClC,sBAAO,SAAS,EAAC;;;;KACpB;IACa,gCAAmB,GAAjC,UAAkC,QAAkB,EAAE,UAAyB;QAC3E,OAAa,QAAS,CAAC,gBAAgB,KAAK,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAO,QAAS,CAAC,gBAAgB,CAAC;IACxH,CAAC;IACmB,8BAAiB,GAArC,UAAsC,KAAa,EAAE,QAAkB,EACnE,UAAyB,EAAE,OAAmD;;;;;;;wBAC9E,OAAO,CAAC,IAAI,GAAG,aAAO,CAAC,IAAI,mCAAI,CAAC,CAAC;wBACjC,OAAO,CAAC,KAAK,GAAG,aAAO,CAAC,KAAK,mCAAI,EAAE,CAAC;wBAC9B,IAAI,GAAU,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,UAAU,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;6BAE1E,YAAY,CAAC,oBAAoB,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAC,UAAU,CAAC,EAA3E,wBAA2E;wBAChE,qBAAM,IAAI,CAAC,+BAA+B,CACjD,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,KAAK,CAAC;;wBAD/C,QAAQ,GAAG,SACoC,CAAC;wBAC1C,OAAO,GAAW,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,4BAA4B,CAAC;wBAClF,IAAI,QAAQ,CAAC,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI;4BAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC;;;wBAE3E,OAAO,GAAG,IAAI,sEAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;wBACxE,IAAG,QAAQ,EAAE,CAAC;4BACV,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;wBACjC,CAAC;wBACD,sBAAO,OAAO,EAAC;;;;KAClB;IAGD,sBAAkB,2BAAW;aAA7B;YACI,OAAO,OAAO,QAAQ,KAAK,WAAW,CAAC;QAC3C,CAAC;;;OAAA;IAEmB,2BAAc,GAAlC,UAAmC,SAAiB;;;;gBAC1C,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;gBAC1B,KAAK,CAAC,WAAW,GAAC,WAAW,CAAC;gBAC9B,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO;wBACvB,KAAK,CAAC,MAAM,GAAG;4BACX,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;4BAChD,IAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;4BACpC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC;4BACpC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC;4BAClC,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC3B,IAAM,OAAO,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;4BACnC,OAAO,CAAC,OAAO,CAAC,CAAC;wBACrB,CAAC,CAAC;wBACF,KAAK,CAAC,OAAO,GAAG;4BACZ,OAAO,CAAC,EAAE,CAAC,CAAC;wBAChB,CAAC,CAAC;wBACF,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC;oBAC1B,CAAC,CAAC,EAAC;;;KACN;IAEmB,yBAAY,GAAhC,UAAiC,UAAyB,EAAE,YAAiF,EAAE,aAAsB;;;;;;wBAC3J,MAAM,GAAW,IAAI,GAAG,IAAI,CAAC;6BACzB,IAAI,CAAC,uBAAuB,EAA5B,wBAA4B;wBAAG,qBAAM,YAAY,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC;;wBAApD,cAAoD;;;wBAAG,iBAAY,CAAC,IAAI;;;wBAA7G,GAAG,KAA0G;6BAC9G,QAAO,aAAa,KAAK,UAAU,IAAI,aAAa,GAApD,wBAAoD;wBAC7C,UAAU,GACb,+CAAwC,YAAY,CAAC,KAAK,GAAG,MAAM,yBAAe,YAAY,CAAC,MAAM,GAAG,MAAM,iDAC9F,GAAG,kCAAwB,YAAY,CAAC,SAAS,2DAC1D,CAAC;wBACJ,qBAAM,YAAY,CAAC,WAAW,CAAC,UAAU,EAAE,YAAY,CAAC,KAAK,EAAE,UAAU,CAAC;;wBAAjF,GAAG,GAAG,CAAC,SAA0E,CAAC,CAAC,GAAG,CAAC;;4BAE3F,sBAAO,GAAG,EAAC;;;;KACd;IACmB,4BAAe,GAAnC,UAAoC,KAAa,EAAE,QAAa,EAC5D,UAAyB,EAAE,YAAiF,EAAE,aAAuB;;;;;;6BACjI,YAAY,CAAC,SAAS,EAAtB,wBAAsB;wBACtB,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,IAAI,SAAS,CAAC,CAAC;wBACvH,IAAI,aAAa,aAAb,aAAa,cAAb,aAAa,GAAI,UAAU,CAAC,aAAa,EAAE,CAAC;4BAC5C,IAAI,YAAY,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;gCAC5F,QAAQ,GAAW,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC;gCACpG,YAAY,CAAC,MAAM,IAAI,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC;gCACrD,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC;4BAClC,CAAC;wBACL,CAAC;;wBACiC,qBAAM,YAAY,CAAC,YAAY,CAAC,UAAU,EAAE,YAAY,EAAE,aAAa,aAAb,aAAa,cAAb,aAAa,GAAI,UAAU,CAAC,aAAa,CAAC;;wBAAhI,IAAI,GAAW,wBAAa,SAAoG,uBAAY,YAAY,CAAC,KAAK,uBAAa,YAAY,CAAC,MAAM,QAAK;wBACzM,sBAAO,IAAI,4DAAS,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAC;4BAE5H,sBAAO,IAAI,8DAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,EAAC;;;;KAClH;IACa,4BAAe,GAA7B,UAA8B,QAA2B,EAAE,IAAqD,EAAE,GAAW;QACzH,OAAO,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACtC,8CAA8C;IAClD,CAAC;IACmB,yBAAY,GAAhC,UAAiC,GAAW;;;;;6BACpC,CAAC,YAAY,CAAC,SAAS,EAAvB,wBAAuB;wBAChB,qBAAM,IAAI,OAAO,CAAC,UAAC,OAAO;gCAC7B,OAAO,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;4BAC5D,CAAC,CAAC;4BAFF,sBAAO,SAEL,EAAC;4BAEA,qBAAM,IAAI,OAAO,CAAC,UAAC,OAAO;4BAC7B,IAAM,KAAK,GAAQ,IAAI,KAAK,EAAE,CAAC;4BAC/B,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;4BAChB,KAAK,CAAC,MAAM,GAAG;gCACX,OAAO,OAAO,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;4BACjE,CAAC,CAAC;4BACF,KAAK,CAAC,OAAO,GAAG,cAAc,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC1D,CAAC,CAAC;4BAPF,sBAAO,SAOL,EAAC;;;;KACN;IACa,8BAAiB,GAA/B,UAAgC,KAAa,EAAE,UAAyB,EACpE,KAAc,EAAE,KAAc;QAC9B,IAAI,MAAM,GAAW,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC;YAC/C,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAClD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QACpE,OAAO,IAAI,kEAAY,CAAC,UAAU,EAAE;YAChC,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO;YAC/B,IAAI,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO;SAClC,EAAE,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IACmB,2BAAc,GAAlC,UAAmC,KAAa,EAAE,QAAkB,EAChE,UAAyB,EAAE,IAAY,EAAE,IAAY;;;;;;4BACC,qBAAM,IAAI;4BAC5D,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,2DAAS,CAAC;;wBAD1D,aAAa,GAAmC,SACU;wBAC1D,aAAa,GAAmB,IAAI,sEAAc,EAAE,CAAC;wBAC3D,aAAa,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,UAAC,IAAe;4BAC3C,aAAa,CAAC,QAAQ,CAAC,IAAI,2DAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;4BAClD,IAAM,SAAS,GAAW,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;4BAC1D,aAAa,CAAC,QAAQ,CAAC,KAAI,CAAC,iBAAiB,CAAC,SAAS,EACnD,UAAU,EAAE,aAAa,CAAC,KAAK,EAAE,2DAAS,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC3D,CAAC,CAAC,CAAC;wBACH,sBAAO,aAAa,EAAC;;;;KACxB;IACa,+BAAkB,GAAhC,UAAiC,IAAW;QACxC,OAAO;YACH,IAAI,CAAC,KAAK;YACV,IAAI,CAAC,IAAI;YACT,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK;YACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;SACxB,CAAC;IACN,CAAC;IACa,gCAAmB,GAAjC,UAAkC,KAAa,EAAE,UAAyB,EAAE,KAAiB;QAAjB,iCAAiB;QACzF,IAAI,KAAK,GAAW,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC;QACnF,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAM,MAAM,GAAW,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC;QACrD,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IACjD,CAAC;IACmB,4CAA+B,GAAnD,UAAoD,KAAa,EAC7D,UAAyB,EAAE,QAAkB,EAAE,KAAa;;;;;;wBACtD,OAAO,GAAW,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,4BAA4B,CAAC;wBACjF,KAAK,CAAC,IAAI,IAAI,OAAO,CAAC;wBACtB,KAAK,CAAC,KAAK,IAAI,OAAO,CAAC;wBACvB,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC;wBAC5C,qBAAM,IAAI,CAAC,cAAc,CACjD,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,2DAAS,CAAC;;wBADvD,QAAQ,GAAc,SACiC;wBAC7D,UAAU,CAAC,UAAU,EAAE,CAAC;wBACxB,sBAAO,QAAQ,EAAC;;;;KACnB;IACa,8BAAiB,GAA/B,UAAgC,UAAyB,EAAE,aAAiC;;;QACxF,IAAI,CAAC,IAAI,CAAC,mBAAmB;YAAE,OAAO;QACtC,aAAa,CAAC,OAAO,GAAG,mBAAa,CAAC,OAAO,mCAAI,IAAI,CAAC;QACtD,aAAa,CAAC,OAAO,GAAG,mBAAa,CAAC,OAAO,mCAAI,KAAK,CAAC;QACvD,IAAM,OAAO,GAAW,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5E,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACpD,IAAM,YAAY,GAAW,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC;QACnG,IAAM,YAAY,GAAW,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,WAAW,CAAC,GAAG,OAAO,GAAG,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,WAAW,CAAC,GAAG,OAAO,GAAG,YAAY,GAAG,OAAO,CAAC;QAC7K,IAAM,YAAY,GAAW,UAAU,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAC3D,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QAC3D,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAC1C,IAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QAC/D,IAAG,aAAa,CAAC,SAAS,EAAE,CAAC;YACzB,IAAM,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC;YAC1C,IAAM,YAAY,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;YACxH,IAAM,iBAAiB,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,eAAS,CAAC,SAAS,CAAC,CAAC,CAAC,mCAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACtG,IAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,GAAG,iBAAiB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,iBAAiB,CAAC,CAAC;YAE5H,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAC7B,CAAC,QAAQ,EAAE,eAAS,CAAC,SAAS,CAAC,CAAC,CAAC,mCAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAC5D,SAAS,CAAC,SAAS,CACtB,CAAC;QACN,CAAC;QAED,gBAAU,CAAC,GAAG,EAAC,IAAI,WAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE;QAC5D,IAAG,aAAa,CAAC,OAAO,EAAE,CAAC;YACvB,IAAM,cAAc,GAAW,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC;YACvG,IAAM,cAAc,GAAW,GAAG,GAAG,cAAc,GAAG,OAAO,CAAC;YAC9D,IAAM,eAAe,GAAW,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;YACnE,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACnD,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;YAC5C,gBAAU,CAAC,GAAG,EAAC,WAAW,gEAAC,yDAAG,IAAI,CAAC,kBAAkB,CACjD,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC,WAAE,eAAe,EAAE,eAAe,WAAE;QAC1F,CAAC;QACD,IAAG,aAAa,CAAC,SAAS,EAAE,CAAC;YACzB,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QAC1C,CAAC;QACD,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;IAC9C,CAAC;IACa,yBAAY,GAA1B,UAA2B,IAAuB;QAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAAE,OAAO,IAAI,CAAC,YAAY,CAAC;QACjD,OAAa,IAAK,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC;IACzD,CAAC;IACa,+BAAkB,GAAhC,UAAiC,QAAkB;QAC/C,OAAO,CAAC,CAAO,QAAS,CAAC,eAAe,CAAC,CAAC,CAAO,QAAS,CAAC,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC1F,CAAC;IACa,2CAA8B,GAA5C,UAA6C,QAAkB,EAAE,MAAiB;QAC9E,IAAI,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACjC,IAAG,QAAQ,CAAC,OAAO,EAAE,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC,yBAAyB,EAAE,CAAC;YAC9E,QAAQ,GAAG,UAAU,CAAC;QAC1B,CAAC;QACD,IAAG,QAAQ,KAAK,SAAS,EAAE,CAAC;YACxB,IAAM,IAAI,GAAG,UAAG,QAAQ,CAAC,OAAO,EAAE,cAAI,QAAQ,CAAE,CAAC;YACjD,IAAG,wEAAc,CAAC,WAAW,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBAAE,OAAO,IAAI,CAAC;QACxE,CAAC;QACD,OAAO,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;IACa,mCAAsB,GAApC,UAAqC,QAAkB,EAAE,MAAiB;QACtE,IAAG,CAAC,CAAC,QAAQ,CAAC,YAAY;YAAE,OAAO,QAAQ,CAAC,YAAY,CAAC,eAAe,CAAC;QACzE,OAAO,CAAC,CAAO,QAAS,CAAC,eAAe,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACtH,CAAC;IACa,8BAAiB,GAA/B,UAAgC,UAAyB;QACrD,OAAO,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;IAC/D,CAAC;IACa,8BAAiB,GAA/B,UAAgC,QAA6B,EACzD,KAAa,EAAE,OAA0B;QACzC,IAAM,iBAAiB,GAAsB,IAAI,0DAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;QACvG,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACpD,IAAI,KAAK,KAAK,CAAC,IAAI,QAAQ,CAAC,kBAAkB,EAAE,CAAC;YAC7C,iBAAiB,CAAC,IAAI,GAAG,QAAQ,CAAC,qBAAqB,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACpG,CAAC;aACI,IAAI,KAAK,KAAK,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,kBAAkB,EAAE,CAAC;YACtF,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC;QACpG,CAAC;QACD,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IACa,kCAAqB,GAAnC,UAAoC,UAAyB;QACzD,OAAO,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC;IACtF,CAAC;IACa,yCAA4B,GAA1C,UAA2C,UAAyB;QAChE,IAAM,KAAK,GAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC;YACzD,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QAC1D,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC;IACrD,CAAC;IACa,2BAAc,GAA5B,UAA6B,UAAyB,EAAE,QAAgB;QACpE,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;YAC3D,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,QAAQ,CAAC;IACpE,CAAC;IACa,6BAAgB,GAA9B,UAA+B,UAAyB,EAAE,QAAgB,EAAE,MAAc;QACtF,IAAM,SAAS,GAAW,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACpE,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM;YACtD,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAClE,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC;YACzE,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACtE,CAAC;IACa,qBAAQ,GAAtB,UAAuB,IAAW,EAAE,IAAyB,EAAE,GAAuB;QAAlD,8BAAe,IAAI,CAAC,KAAK;QAAE,4BAAc,IAAI,CAAC,IAAI;QAClF,OAAO;YACH,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,GAAG;YACT,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK;YACvC,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;SACpC,CAAC;IACN,CAAC;IACa,sBAAS,GAAvB,UAAwB,IAAW,EAAE,KAAa;QAC9C,IAAM,UAAU,GAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;QAC3G,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,UAAU;YAC9B,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,UAAU;YAC5B,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,UAAU;YAChC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,UAAU;SAC/B,CAAC;IACN,CAAC;IACa,2BAAc,GAA5B,UAA6B,UAAyB;QAClD,OAAO,GAAG,GAAG,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;IAC1D,CAAC;IACa,sBAAS,GAAvB,UAAwB,UAAyB,EAAE,IAAW;QAC1D,IAAM,OAAO,GAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,GAAG,OAAO,CAAC;IACjE,CAAC;IACmB,kCAAqB,GAAzC,UAA0C,MAAiB,EACvD,UAAyB,EAAE,QAAkB,EAAE,KAAa;;;;;;wBACtD,YAAY,GAAW,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;wBACrE,YAAY,GAAkB,wEAAc,CAAC,WAAW,EAAE;4BAC5D,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;wBACpB,qBAAM,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;;wBAApE,aAAa,GAAgB,SAAuC;wBACpE,eAAe,GAAoB,IAAI,qEAAe,CAAC,KAAK,EAC9D,aAAa,EAAE,QAAQ,EAAE,UAAU,EAAE,wEAAc,CAAC,WAAW,EAAE,EAAE,yCAAe,CAAC,CAAC;wBACxF,IAAI,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;4BAC9D,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;4BAClC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;wBACrE,CAAC;wBACD,qBAAM,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,eAAe,CAAC;;wBAA3D,SAA2D,CAAC;wBAC5D,+EAAW,eAAe,CAAC,MAAM,SAAE;;;;KACtC;IACa,wBAAW,GAAzB,UAA0B,UAAyB,EAAE,QAAgB;QACjE,OAAO,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC;IAC3E,CAAC;IACa,yBAAY,GAA1B,UAA2B,UAAyB,EAAE,QAAgB;QAClE,OAAO,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,oBAAoB,CAAC;IAC5F,CAAC;IACa,oBAAO,GAArB,UAAsB,UAAyB;QAC3C,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACrD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACvC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,UAAU,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC;IACL,CAAC;IACa,kBAAK,GAAnB,UAAoB,GAAQ;QACxB,IAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,KAAK,IAAM,IAAI,IAAI,GAAG,EAAE,CAAC;YACrB,IAAI,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC3B,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC;QACL,CAAC;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACa,iCAAoB,GAAlC,UAAmC,QAAmB,EAAE,UAAyB,EAAE,QAAkB;QACjG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,YAAY,CAAC,mBAAmB,CAC7E,QAAQ,EAAE,UAAU,CAAC,KAAK,UAAU,CAAC,KAAI,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,QAAQ,EAAC;IAChF,CAAC;IACa,wBAAW,GAAzB,UAA0B,GAAQ;QAC9B,OAAO,CAAC,GAAG,IAAI,GAAG,KAAK,MAAM,CAAC;IAClC,CAAC;IACa,0BAAa,GAA3B,UAA4B,GAAQ;QAChC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC;IAClD,CAAC;IACmB,kCAAqB,GAAzC,UAA0C,UAAyB,EAAE,YAA2H;;;;;;wBACtL,UAAU,GAAoE,YAAY,WAAhF,EAAE,SAAS,GAAyD,YAAY,UAArE,EAAE,WAAW,GAA4C,YAAY,YAAxD,EAAE,iBAAiB,GAAyB,YAAY,kBAArC,EAAE,kBAAkB,GAAK,YAAY,mBAAjB,CAAkB;wBACjG,UAAU,GAAG,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;wBACjF,WAAW,GAAG,OAAO,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;wBACjF,OAAO,GAAW,UAAU,IAAI,YAAY,CAAC,UAAU,CAAC,UAAU,EAAE,YAAY,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;wBAC7H,QAAQ,GAAW,WAAW,IAAI,YAAY,CAAC,UAAU,CAAC,WAAW,EAAE,YAAY,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;wBACpI,iBAAiB,GAAG,OAAO,iBAAiB,KAAK,QAAQ,CAAC,CAAC,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC;wBAC7G,kBAAkB,GAAG,OAAO,kBAAkB,KAAK,QAAQ,CAAC,CAAC,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC;wBAC7G,cAAc,GAAW,iBAAiB,IAAI,YAAY,CAAC,UAAU,CAAC,iBAAiB,EAAE,YAAY,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;wBAClJ,eAAe,GAAW,kBAAkB,IAAI,YAAY,CAAC,UAAU,CAAC,kBAAkB,EAAE,YAAY,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;6BAEtJ,aAAY,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,GAA/E,wBAA+E;wBAC5D,qBAAM,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC;;wBAAtD,SAAS,GAAG,SAA0C;wBAC5D,IAAG,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;4BACvC,IAAG,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC;gCAC9B,QAAQ,GAAG,SAAS,CAAC,MAAM,GAAG,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC;4BAC5D,CAAC;wBACL,CAAC;6BACI,IAAG,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC;4BAC/C,IAAG,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;gCAC/B,OAAO,GAAG,SAAS,CAAC,KAAK,GAAG,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC;4BAC5D,CAAC;wBACL,CAAC;6BACI,IAAG,SAAS,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC;4BACvD,QAAQ,GAAG,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;4BACzH,OAAO,GAAG,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;wBAC3H,CAAC;;4BAEL,sBAAO,EAAE,KAAK,EAAE,OAAO,IAAI,cAAc,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,IAAI,eAAe,IAAI,CAAC,EAAE,EAAC;;;;KAC9F;IAruBa,oBAAO,GAAW,qCAAqC,CAAC;IACxD,yCAA4B,GAAW,GAAG,CAAC;IAC3C,uCAA0B,GAAW,GAAG,CAAC;IACzC,wCAA2B,GAAW,GAAG,CAAC;IAC1C,wCAA2B,GAAW,GAAG,GAAG,GAAG,CAAC;IAChD,6BAAgB,GAAW,CAAC,CAAC;IAC7B,6BAAgB,GAAW,CAAC,CAAC;IAC7B,8BAAiB,GAAW,CAAC,CAAC;IAC9B,gCAAmB,GAAW,CAAC,CAAC;IAChC,gCAAmB,GAAW,CAAC,CAAC;IAChC,8BAAiB,GAAW,CAAC,CAAC;IAC9B,8BAAiB,GAAW,GAAG,GAAG,GAAG,CAAC;IACtC,mCAAsB,GAAW,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/C,iCAAoB,GAAW,IAAI,CAAC;IACpC,mCAAsB,GAAW,IAAI,CAAC;IACtC,6BAAgB,GAAW,IAAI,CAAC;IAChC,gCAAmB,GAAW,GAAG,CAAC;IAClC,kCAAqB,GAAW,IAAI,CAAC;IACrC,gCAAmB,GAAY,IAAI,CAAC;IACpC,yBAAY,GAAW,GAAG,CAAC;IAC3B,iCAAoB,GAAW,GAAG,CAAC;IACnC,mCAAsB,GAAW,GAAG,CAAC;IACrC,yBAAY,GAAW,GAAG,CAAC;IAC3B,6BAAgB,GAAW,GAAG,CAAC;IAC/B,yCAA4B,GAAW,GAAG,CAAC;IAC3C,kCAAqB,GAAW,GAAG,CAAC;IACpC,8BAAiB,GAAW,SAAS,CAAC;IACtC,uBAAU,GAAW,SAAS,CAAC;IAC/B,6BAAgB,GAAW,SAAS,CAAC;IACrC,kCAAqB,GAAW,QAAQ,CAAC;IACzC,0BAAa,GAAW,WAAW,CAAC;IACpC,iCAAoB,GAAW,YAAY,CAAC;IAuY5C,sBAAS,GAAG,OAAO,KAAK,KAAK,UAAU,CAAC;IAyBxC,oCAAuB,GAAG,IAAI,CAAC;IAuSjD,mBAAC;CAAA;AAvuBwB;;;;;;;;;;;;;;;ACvBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAC8B;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,yCAAyC;AACzC;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;;AAEA;AACA,kCAAkC;AAClsCAAsC;AACtC;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;;AAEA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,qBAAqB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA,qDAAqD,0DAA0D;AAC/G,qDAAqD,0DAA0D;AAC/G,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,wCAAwC,+CAA+C;;AAEvF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,0DAA0D;AAClG;;AAEA,2CAA2C,mCAAmC;;AAE9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sFAAsF;;AAEtF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,sDAAsD;AACzF;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,yCAAyC;AACzF,0BAA0B;AAC1B;AACA;AACA,gDAAgD,uCAAuC;AACvF,0BAA0B;AAC1B,gDAAgD,wBAAwB;AACxE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA,qIAAqI;AACrI;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA,gGAAgG;AAChG;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA,sGAAsG;AACtG;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gGAAgG;AAChG;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA,uDAAuD;AACvD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA,0JAA0J;AAC1J;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;;AAGT;AACA,0FAA0F;AAC1F;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA,0FAA0F;AAC1F;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gEAAgE;AAChE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA,8RAA8R;AAC9R;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;;;AAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE,wCAAK,qDAAqD,qBAAM,oBAAoB,qBAAM,G;;;;;;;;;;;;;;;AC72F9E,SAAS,kBAAkB,CAAC,GAAQ;IAC/C,IAAM,sBAAsB,GAAa,GAAG,CAAC,kBAAkB,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC;IAC7F,GAAG,CAAC,kBAAkB,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,GAAG,UAAS,UAAe;QAC1E,IAAM,IAAI,GAAQ,sBAAsB,CAAC,UAAU,CAAC,CAAC;QACrD,IAAM,MAAM,GAAa,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjD,IAAM,WAAW,GAAW,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAChF,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,WAAW,GAAG,IAAI,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;QAC9E,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC;;;;;;;;;;;;;;;ACVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;;AAEpF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;;;AAGR;;AAEA,kBAAkB,uBAAuB;AACzC;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;;AAE7B,6DAA6D;;AAE7D;AACA;AACA,yCAAyC;;AAEzC,mEAAmE;AACnE;;;AAGA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2DAA2D;;AAE3D;AACA;;AAEA;AACA;AACA,4EAA4E;;AAE5E;AACA;AACA;AACA,wHAAwH;AACxH;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,iBAAiB,yLAAyL;AAC1M;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,iBAAiB,gFAAgF;;AAEjG,kGAAkG;;AAElG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gBAAgB;AAChB;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,iBAAiB;AACjB;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;AAGd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,8CAA8C;;AAE9C,yDAAyD;;AAEzD;AACA,6EAA6E;;AAE7E,wCAAwC;;AAExC;AACA,2DAA2D;;AAE3D;;AAEA,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA,cAAc;;;AAGd;AACA;AACA;AACA,YAAY;;;AAGZ,+DAA+D;;;AAG/D,2DAA2D;;AAE3D;AACA,WAAW;;;AAGX;;AAEA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA,UAAU;;;AAGV,gFAAgF;;AAEhF,wBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,kDAAkD,0BAA0B,yBAAyB,4BAA4B,4BAA4B,cAAc,iBAAiB,sBAAsB;AAC9S;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA,gEAAgE;;;AAGhE;AACA;AACA,0DAA0D;AAC1D,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;;AAEA;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA,wBAAwB,kBAAkB;AAC1C,oIAAoI;;AAEpI;AACA;AACA;;AAEA;;AAEA;AACA,mDAAmD;AACnD,YAAY;AACZ,uDAAuD;AACvD,YAAY;AACZ;AACA,kEAAkE;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4LAA4L;;AAE5L;AACA;AACA;;AAEA,mFAAmF;;AAEnF;;AAEA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,4HAA4H;;AAE5H;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sIAAsI;;AAEtI;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;;AAGV;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;;AAEA,wFAAwF;;AAExF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,GAAG;;AAEd,8FAA8F;;AAE9F;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","sources":["webpack://SurveyPDF/webpack/universalModuleDefinition","webpack://SurveyPDF/./node_modules/node-interval-tree/lib/index.js","webpack://SurveyPDF/./node_modules/shallowequal/index.js","webpack://SurveyPDF/./src/doc_controller.ts","webpack://SurveyPDF/./src/entries/helpers.ts","webpack://SurveyPDF/./src/entries/pdf.ts","webpack://SurveyPDF/./src/event_handler/adorners.ts","webpack://SurveyPDF/./src/event_handler/draw_canvas.ts","webpack://SurveyPDF/./src/event_handler/event_handler.ts","webpack://SurveyPDF/./src/flat_layout/flat_boolean.ts","webpack://SurveyPDF/./src/flat_layout/flat_checkbox.ts","webpack://SurveyPDF/./src/flat_layout/flat_comment.ts","webpack://SurveyPDF/./src/flat_layout/flat_custom_model.ts","webpack://SurveyPDF/./src/flat_layout/flat_default.ts","webpack://SurveyPDF/./src/flat_layout/flat_dropdown.ts","webpack://SurveyPDF/./src/flat_layout/flat_expression.ts","webpack://SurveyPDF/./src/flat_layout/flat_file.ts","webpack://SurveyPDF/./src/flat_layout/flat_html.ts","webpack://SurveyPDF/./src/flat_layout/flat_image.ts","webpack://SurveyPDF/./src/flat_layout/flat_imagepicker.ts","webpack://SurveyPDF/./src/flat_layout/flat_matrix.ts","webpack://SurveyPDF/./src/flat_layout/flat_matrixdynamic.ts","webpack://SurveyPDF/./src/flat_layout/flat_matrixmultiple.ts","webpack://SurveyPDF/./src/flat_layout/flat_multipletext.ts","webpack://SurveyPDF/./src/flat_layout/flat_paneldynamic.ts","webpack://SurveyPDF/./src/flat_layout/flat_question.ts","webpack://SurveyPDF/./src/flat_layout/flat_radiogroup.ts","webpack://SurveyPDF/./src/flat_layout/flat_ranking.ts","webpack://SurveyPDF/./src/flat_layout/flat_rating.ts","webpack://SurveyPDF/./src/flat_layout/flat_repository.ts","webpack://SurveyPDF/./src/flat_layout/flat_selectbase.ts","webpack://SurveyPDF/./src/flat_layout/flat_signaturepad.ts","webpack://SurveyPDF/./src/flat_layout/flat_slider.ts","webpack://SurveyPDF/./src/flat_layout/flat_survey.ts","webpack://SurveyPDF/./src/flat_layout/flat_textbox.ts","webpack://SurveyPDF/./src/helper_survey.ts","webpack://SurveyPDF/./src/jspdf_plugins/acroform.js","webpack://SurveyPDF/./src/jspdf_plugins/acroform_radio.ts","webpack://SurveyPDF/./src/jspdf_plugins/from_html.js","webpack://SurveyPDF/./src/page_layout/page_packer.ts","webpack://SurveyPDF/./src/pdf_render/pdf_booleanitem.ts","webpack://SurveyPDF/./src/pdf_render/pdf_brick.ts","webpack://SurveyPDF/./src/pdf_render/pdf_checkboxitem.ts","webpack://SurveyPDF/./src/pdf_render/pdf_checkitem.ts","webpack://SurveyPDF/./src/pdf_render/pdf_coloredbrick.ts","webpack://SurveyPDF/./src/pdf_render/pdf_composite.ts","webpack://SurveyPDF/./src/pdf_render/pdf_custom.ts","webpack://SurveyPDF/./src/pdf_render/pdf_description.ts","webpack://SurveyPDF/./src/pdf_render/pdf_dropdown.ts","webpack://SurveyPDF/./src/pdf_render/pdf_empty.ts","webpack://SurveyPDF/./src/pdf_render/pdf_html.ts","webpack://SurveyPDF/./src/pdf_render/pdf_image.ts","webpack://SurveyPDF/./src/pdf_render/pdf_link.ts","webpack://SurveyPDF/./src/pdf_render/pdf_radioitem.ts","webpack://SurveyPDF/./src/pdf_render/pdf_rankingitem.ts","webpack://SurveyPDF/./src/pdf_render/pdf_rowline.ts","webpack://SurveyPDF/./src/pdf_render/pdf_text.ts","webpack://SurveyPDF/./src/pdf_render/pdf_textbold.ts","webpack://SurveyPDF/./src/pdf_render/pdf_textfield.ts","webpack://SurveyPDF/./src/pdf_render/pdf_titlepanel.ts","webpack://SurveyPDF/./src/survey.ts","webpack://SurveyPDF/external umd {\"root\":\"jspdf\",\"commonjs2\":\"jspdf\",\"commonjs\":\"jspdf\",\"amd\":\"jspdf\"}","webpack://SurveyPDF/external umd {\"root\":\"Survey\",\"commonjs2\":\"survey-core\",\"commonjs\":\"survey-core\",\"amd\":\"survey-core\"}","webpack://SurveyPDF/webpack/bootstrap","webpack://SurveyPDF/webpack/runtime/compat get default export","webpack://SurveyPDF/webpack/runtime/define property getters","webpack://SurveyPDF/webpack/runtime/global","webpack://SurveyPDF/webpack/runtime/hasOwnProperty shorthand","webpack://SurveyPDF/webpack/runtime/make namespace object","webpack://SurveyPDF/webpack/before-startup","webpack://SurveyPDF/webpack/startup","webpack://SurveyPDF/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"survey-core\"), require(\"jspdf\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SurveyPDF\", [\"survey-core\", \"jspdf\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SurveyPDF\"] = factory(require(\"survey-core\"), require(\"jspdf\"));\n\telse\n\t\troot[\"SurveyPDF\"] = factory(root[\"Survey\"], root[\"jspdf\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE_survey_core__, __WEBPACK_EXTERNAL_MODULE_jspdf__) => {\nreturn ","\"use strict\";\r\n// An augmented AVL Tree where each node maintains a list of records and their search intervals.\r\n// Record is composed of an interval and its underlying data, sent by a client. This allows the\r\n// interval tree to have the same interval inserted multiple times, as long its data is different.\r\n// Both insertion and deletion require O(log n) time. Searching requires O(k*logn) time, where `k`\r\n// is the number of intervals in the output list.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar isSame = require(\"shallowequal\");\r\nfunction height(node) {\r\n    if (node === undefined) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return node.height;\r\n    }\r\n}\r\nvar Node = /** @class */ (function () {\r\n    function Node(intervalTree, record) {\r\n        this.intervalTree = intervalTree;\r\n        this.records = [];\r\n        this.height = 0;\r\n        this.key = record.low;\r\n        this.max = record.high;\r\n        // Save the array of all records with the same key for this node\r\n        this.records.push(record);\r\n    }\r\n    // Gets the highest record.high value for this node\r\n    Node.prototype.getNodeHigh = function () {\r\n        var high = this.records[0].high;\r\n        for (var i = 1; i < this.records.length; i++) {\r\n            if (this.records[i].high > high) {\r\n                high = this.records[i].high;\r\n            }\r\n        }\r\n        return high;\r\n    };\r\n    // Updates height value of the node. Called during insertion, rebalance, removal\r\n    Node.prototype.updateHeight = function () {\r\n        this.height = Math.max(height(this.left), height(this.right)) + 1;\r\n    };\r\n    // Updates the max value of all the parents after inserting into already existing node, as well as\r\n    // removing the node completely or removing the record of an already existing node. Starts with\r\n    // the parent of an affected node and bubbles up to root\r\n    Node.prototype.updateMaxOfParents = function () {\r\n        if (this === undefined) {\r\n            return;\r\n        }\r\n        var thisHigh = this.getNodeHigh();\r\n        if (this.left !== undefined && this.right !== undefined) {\r\n            this.max = Math.max(Math.max(this.left.max, this.right.max), thisHigh);\r\n        }\r\n        else if (this.left !== undefined && this.right === undefined) {\r\n            this.max = Math.max(this.left.max, thisHigh);\r\n        }\r\n        else if (this.left === undefined && this.right !== undefined) {\r\n            this.max = Math.max(this.right.max, thisHigh);\r\n        }\r\n        else {\r\n            this.max = thisHigh;\r\n        }\r\n        if (this.parent) {\r\n            this.parent.updateMaxOfParents();\r\n        }\r\n    };\r\n    /*\r\n    Left-Left case:\r\n  \r\n           z                                      y\r\n          / \\                                   /   \\\r\n         y   T4      Right Rotate (z)          x     z\r\n        / \\          - - - - - - - - ->       / \\   / \\\r\n       x   T3                                T1 T2 T3 T4\r\n      / \\\r\n    T1   T2\r\n  \r\n    Left-Right case:\r\n  \r\n         z                               z                           x\r\n        / \\                             / \\                        /   \\\r\n       y   T4  Left Rotate (y)         x  T4  Right Rotate(z)     y     z\r\n      / \\      - - - - - - - - ->     / \\      - - - - - - - ->  / \\   / \\\r\n    T1   x                           y  T3                      T1 T2 T3 T4\r\n        / \\                         / \\\r\n      T2   T3                      T1 T2\r\n    */\r\n    // Handles Left-Left case and Left-Right case after rebalancing AVL tree\r\n    Node.prototype._updateMaxAfterRightRotate = function () {\r\n        var parent = this.parent;\r\n        var left = parent.left;\r\n        // Update max of left sibling (x in first case, y in second)\r\n        var thisParentLeftHigh = left.getNodeHigh();\r\n        if (left.left === undefined && left.right !== undefined) {\r\n            left.max = Math.max(thisParentLeftHigh, left.right.max);\r\n        }\r\n        else if (left.left !== undefined && left.right === undefined) {\r\n            left.max = Math.max(thisParentLeftHigh, left.left.max);\r\n        }\r\n        else if (left.left === undefined && left.right === undefined) {\r\n            left.max = thisParentLeftHigh;\r\n        }\r\n        else {\r\n            left.max = Math.max(Math.max(left.left.max, left.right.max), thisParentLeftHigh);\r\n        }\r\n        // Update max of itself (z)\r\n        var thisHigh = this.getNodeHigh();\r\n        if (this.left === undefined && this.right !== undefined) {\r\n            this.max = Math.max(thisHigh, this.right.max);\r\n        }\r\n        else if (this.left !== undefined && this.right === undefined) {\r\n            this.max = Math.max(thisHigh, this.left.max);\r\n        }\r\n        else if (this.left === undefined && this.right === undefined) {\r\n            this.max = thisHigh;\r\n        }\r\n        else {\r\n            this.max = Math.max(Math.max(this.left.max, this.right.max), thisHigh);\r\n        }\r\n        // Update max of parent (y in first case, x in second)\r\n        parent.max = Math.max(Math.max(parent.left.max, parent.right.max), parent.getNodeHigh());\r\n    };\r\n    /*\r\n    Right-Right case:\r\n  \r\n      z                               y\r\n     / \\                            /   \\\r\n    T1  y     Left Rotate(z)       z     x\r\n       / \\   - - - - - - - ->     / \\   / \\\r\n      T2  x                      T1 T2 T3 T4\r\n         / \\\r\n        T3 T4\r\n  \r\n    Right-Left case:\r\n  \r\n       z                            z                            x\r\n      / \\                          / \\                         /   \\\r\n     T1  y   Right Rotate (y)     T1  x      Left Rotate(z)   z     y\r\n        / \\  - - - - - - - - ->      / \\   - - - - - - - ->  / \\   / \\\r\n       x  T4                        T2  y                   T1 T2 T3 T4\r\n      / \\                              / \\\r\n    T2   T3                           T3 T4\r\n    */\r\n    // Handles Right-Right case and Right-Left case in rebalancing AVL tree\r\n    Node.prototype._updateMaxAfterLeftRotate = function () {\r\n        var parent = this.parent;\r\n        var right = parent.right;\r\n        // Update max of right sibling (x in first case, y in second)\r\n        var thisParentRightHigh = right.getNodeHigh();\r\n        if (right.left === undefined && right.right !== undefined) {\r\n            right.max = Math.max(thisParentRightHigh, right.right.max);\r\n        }\r\n        else if (right.left !== undefined && right.right === undefined) {\r\n            right.max = Math.max(thisParentRightHigh, right.left.max);\r\n        }\r\n        else if (right.left === undefined && right.right === undefined) {\r\n            right.max = thisParentRightHigh;\r\n        }\r\n        else {\r\n            right.max = Math.max(Math.max(right.left.max, right.right.max), thisParentRightHigh);\r\n        }\r\n        // Update max of itself (z)\r\n        var thisHigh = this.getNodeHigh();\r\n        if (this.left === undefined && this.right !== undefined) {\r\n            this.max = Math.max(thisHigh, this.right.max);\r\n        }\r\n        else if (this.left !== undefined && this.right === undefined) {\r\n            this.max = Math.max(thisHigh, this.left.max);\r\n        }\r\n        else if (this.left === undefined && this.right === undefined) {\r\n            this.max = thisHigh;\r\n        }\r\n        else {\r\n            this.max = Math.max(Math.max(this.left.max, this.right.max), thisHigh);\r\n        }\r\n        // Update max of parent (y in first case, x in second)\r\n        parent.max = Math.max(Math.max(parent.left.max, right.max), parent.getNodeHigh());\r\n    };\r\n    Node.prototype._leftRotate = function () {\r\n        var rightChild = this.right;\r\n        rightChild.parent = this.parent;\r\n        if (rightChild.parent === undefined) {\r\n            this.intervalTree.root = rightChild;\r\n        }\r\n        else {\r\n            if (rightChild.parent.left === this) {\r\n                rightChild.parent.left = rightChild;\r\n            }\r\n            else if (rightChild.parent.right === this) {\r\n                rightChild.parent.right = rightChild;\r\n            }\r\n        }\r\n        this.right = rightChild.left;\r\n        if (this.right !== undefined) {\r\n            this.right.parent = this;\r\n        }\r\n        rightChild.left = this;\r\n        this.parent = rightChild;\r\n        this.updateHeight();\r\n        rightChild.updateHeight();\r\n    };\r\n    Node.prototype._rightRotate = function () {\r\n        var leftChild = this.left;\r\n        leftChild.parent = this.parent;\r\n        if (leftChild.parent === undefined) {\r\n            this.intervalTree.root = leftChild;\r\n        }\r\n        else {\r\n            if (leftChild.parent.left === this) {\r\n                leftChild.parent.left = leftChild;\r\n            }\r\n            else if (leftChild.parent.right === this) {\r\n                leftChild.parent.right = leftChild;\r\n            }\r\n        }\r\n        this.left = leftChild.right;\r\n        if (this.left !== undefined) {\r\n            this.left.parent = this;\r\n        }\r\n        leftChild.right = this;\r\n        this.parent = leftChild;\r\n        this.updateHeight();\r\n        leftChild.updateHeight();\r\n    };\r\n    // Rebalances the tree if the height value between two nodes of the same parent is greater than\r\n    // two. There are 4 cases that can happen which are outlined in the graphics above\r\n    Node.prototype._rebalance = function () {\r\n        if (height(this.left) >= 2 + height(this.right)) {\r\n            var left = this.left;\r\n            if (height(left.left) >= height(left.right)) {\r\n                // Left-Left case\r\n                this._rightRotate();\r\n                this._updateMaxAfterRightRotate();\r\n            }\r\n            else {\r\n                // Left-Right case\r\n                left._leftRotate();\r\n                this._rightRotate();\r\n                this._updateMaxAfterRightRotate();\r\n            }\r\n        }\r\n        else if (height(this.right) >= 2 + height(this.left)) {\r\n            var right = this.right;\r\n            if (height(right.right) >= height(right.left)) {\r\n                // Right-Right case\r\n                this._leftRotate();\r\n                this._updateMaxAfterLeftRotate();\r\n            }\r\n            else {\r\n                // Right-Left case\r\n                right._rightRotate();\r\n                this._leftRotate();\r\n                this._updateMaxAfterLeftRotate();\r\n            }\r\n        }\r\n    };\r\n    Node.prototype.insert = function (record) {\r\n        if (record.low < this.key) {\r\n            // Insert into left subtree\r\n            if (this.left === undefined) {\r\n                this.left = new Node(this.intervalTree, record);\r\n                this.left.parent = this;\r\n            }\r\n            else {\r\n                this.left.insert(record);\r\n            }\r\n        }\r\n        else {\r\n            // Insert into right subtree\r\n            if (this.right === undefined) {\r\n                this.right = new Node(this.intervalTree, record);\r\n                this.right.parent = this;\r\n            }\r\n            else {\r\n                this.right.insert(record);\r\n            }\r\n        }\r\n        // Update the max value of this ancestor if needed\r\n        if (this.max < record.high) {\r\n            this.max = record.high;\r\n        }\r\n        // Update height of each node\r\n        this.updateHeight();\r\n        // Rebalance the tree to ensure all operations are executed in O(logn) time. This is especially\r\n        // important in searching, as the tree has a high chance of degenerating without the rebalancing\r\n        this._rebalance();\r\n    };\r\n    Node.prototype._getOverlappingRecords = function (currentNode, low, high) {\r\n        if (currentNode.key <= high && low <= currentNode.getNodeHigh()) {\r\n            // Nodes are overlapping, check if individual records in the node are overlapping\r\n            var tempResults = [];\r\n            for (var i = 0; i < currentNode.records.length; i++) {\r\n                if (currentNode.records[i].high >= low) {\r\n                    tempResults.push(currentNode.records[i]);\r\n                }\r\n            }\r\n            return tempResults;\r\n        }\r\n        return [];\r\n    };\r\n    Node.prototype.search = function (low, high) {\r\n        // Don't search nodes that don't exist\r\n        if (this === undefined) {\r\n            return [];\r\n        }\r\n        var leftSearch = [];\r\n        var ownSearch = [];\r\n        var rightSearch = [];\r\n        // If interval is to the right of the rightmost point of any interval in this node and all its\r\n        // children, there won't be any matches\r\n        if (low > this.max) {\r\n            return [];\r\n        }\r\n        // Search left children\r\n        if (this.left !== undefined && this.left.max >= low) {\r\n            leftSearch = this.left.search(low, high);\r\n        }\r\n        // Check this node\r\n        ownSearch = this._getOverlappingRecords(this, low, high);\r\n        // If interval is to the left of the start of this interval, then it can't be in any child to\r\n        // the right\r\n        if (high < this.key) {\r\n            return leftSearch.concat(ownSearch);\r\n        }\r\n        // Otherwise, search right children\r\n        if (this.right !== undefined) {\r\n            rightSearch = this.right.search(low, high);\r\n        }\r\n        // Return accumulated results, if any\r\n        return leftSearch.concat(ownSearch, rightSearch);\r\n    };\r\n    // Searches for a node by a `key` value\r\n    Node.prototype.searchExisting = function (low) {\r\n        if (this === undefined) {\r\n            return undefined;\r\n        }\r\n        if (this.key === low) {\r\n            return this;\r\n        }\r\n        else if (low < this.key) {\r\n            if (this.left !== undefined) {\r\n                return this.left.searchExisting(low);\r\n            }\r\n        }\r\n        else {\r\n            if (this.right !== undefined) {\r\n                return this.right.searchExisting(low);\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    // Returns the smallest node of the subtree\r\n    Node.prototype._minValue = function () {\r\n        if (this.left === undefined) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left._minValue();\r\n        }\r\n    };\r\n    Node.prototype.remove = function (node) {\r\n        var parent = this.parent;\r\n        if (node.key < this.key) {\r\n            // Node to be removed is on the left side\r\n            if (this.left !== undefined) {\r\n                return this.left.remove(node);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n        else if (node.key > this.key) {\r\n            // Node to be removed is on the right side\r\n            if (this.right !== undefined) {\r\n                return this.right.remove(node);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n        else {\r\n            if (this.left !== undefined && this.right !== undefined) {\r\n                // Node has two children\r\n                var minValue = this.right._minValue();\r\n                this.key = minValue.key;\r\n                this.records = minValue.records;\r\n                return this.right.remove(this);\r\n            }\r\n            else if (parent.left === this) {\r\n                // One child or no child case on left side\r\n                if (this.right !== undefined) {\r\n                    parent.left = this.right;\r\n                    this.right.parent = parent;\r\n                }\r\n                else {\r\n                    parent.left = this.left;\r\n                    if (this.left !== undefined) {\r\n                        this.left.parent = parent;\r\n                    }\r\n                }\r\n                parent.updateMaxOfParents();\r\n                parent.updateHeight();\r\n                parent._rebalance();\r\n                return this;\r\n            }\r\n            else if (parent.right === this) {\r\n                // One child or no child case on right side\r\n                if (this.right !== undefined) {\r\n                    parent.right = this.right;\r\n                    this.right.parent = parent;\r\n                }\r\n                else {\r\n                    parent.right = this.left;\r\n                    if (this.left !== undefined) {\r\n                        this.left.parent = parent;\r\n                    }\r\n                }\r\n                parent.updateMaxOfParents();\r\n                parent.updateHeight();\r\n                parent._rebalance();\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    return Node;\r\n}());\r\nexports.Node = Node;\r\nvar IntervalTree = /** @class */ (function () {\r\n    function IntervalTree() {\r\n        this.count = 0;\r\n    }\r\n    IntervalTree.prototype.insert = function (record) {\r\n        if (record.low > record.high) {\r\n            throw new Error('`low` value must be lower or equal to `high` value');\r\n        }\r\n        if (this.root === undefined) {\r\n            // Base case: Tree is empty, new node becomes root\r\n            this.root = new Node(this, record);\r\n            this.count++;\r\n            return true;\r\n        }\r\n        else {\r\n            // Otherwise, check if node already exists with the same key\r\n            var node = this.root.searchExisting(record.low);\r\n            if (node !== undefined) {\r\n                // Check the records in this node if there already is the one with same low, high, data\r\n                for (var i = 0; i < node.records.length; i++) {\r\n                    if (isSame(node.records[i], record)) {\r\n                        // This record is same as the one we're trying to insert; return false to indicate\r\n                        // nothing has been inserted\r\n                        return false;\r\n                    }\r\n                }\r\n                // Add the record to the node\r\n                node.records.push(record);\r\n                // Update max of the node and its parents if necessary\r\n                if (record.high > node.max) {\r\n                    node.max = record.high;\r\n                    if (node.parent) {\r\n                        node.parent.updateMaxOfParents();\r\n                    }\r\n                }\r\n                this.count++;\r\n                return true;\r\n            }\r\n            else {\r\n                // Node with this key doesn't already exist. Call insert function on root's node\r\n                this.root.insert(record);\r\n                this.count++;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    IntervalTree.prototype.search = function (low, high) {\r\n        if (this.root === undefined) {\r\n            // Tree is empty; return empty array\r\n            return [];\r\n        }\r\n        else {\r\n            return this.root.search(low, high);\r\n        }\r\n    };\r\n    IntervalTree.prototype.remove = function (record) {\r\n        if (this.root === undefined) {\r\n            // Tree is empty; nothing to remove\r\n            return false;\r\n        }\r\n        else {\r\n            var node = this.root.searchExisting(record.low);\r\n            if (node === undefined) {\r\n                return false;\r\n            }\r\n            else if (node.records.length > 1) {\r\n                var removedRecord = void 0;\r\n                // Node with this key has 2 or more records. Find the one we need and remove it\r\n                for (var i = 0; i < node.records.length; i++) {\r\n                    if (isSame(node.records[i], record)) {\r\n                        removedRecord = node.records[i];\r\n                        node.records.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                if (removedRecord) {\r\n                    removedRecord = undefined;\r\n                    // Update max of that node and its parents if necessary\r\n                    if (record.high === node.max) {\r\n                        var nodeHigh = node.getNodeHigh();\r\n                        if (node.left !== undefined && node.right !== undefined) {\r\n                            node.max = Math.max(Math.max(node.left.max, node.right.max), nodeHigh);\r\n                        }\r\n                        else if (node.left !== undefined && node.right === undefined) {\r\n                            node.max = Math.max(node.left.max, nodeHigh);\r\n                        }\r\n                        else if (node.left === undefined && node.right !== undefined) {\r\n                            node.max = Math.max(node.right.max, nodeHigh);\r\n                        }\r\n                        else {\r\n                            node.max = nodeHigh;\r\n                        }\r\n                        if (node.parent) {\r\n                            node.parent.updateMaxOfParents();\r\n                        }\r\n                    }\r\n                    this.count--;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (node.records.length === 1) {\r\n                // Node with this key has only 1 record. Check if the remaining record in this node is\r\n                // actually the one we want to remove\r\n                if (isSame(node.records[0], record)) {\r\n                    // The remaining record is the one we want to remove. Remove the whole node from the tree\r\n                    if (this.root.key === node.key) {\r\n                        // We're removing the root element. Create a dummy node that will temporarily take\r\n                        // root's parent role\r\n                        var rootParent = new Node(this, { low: record.low, high: record.low });\r\n                        rootParent.left = this.root;\r\n                        this.root.parent = rootParent;\r\n                        var removedNode = this.root.remove(node);\r\n                        this.root = rootParent.left;\r\n                        if (this.root !== undefined) {\r\n                            this.root.parent = undefined;\r\n                        }\r\n                        if (removedNode) {\r\n                            removedNode = undefined;\r\n                            this.count--;\r\n                            return true;\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        var removedNode = this.root.remove(node);\r\n                        if (removedNode) {\r\n                            removedNode = undefined;\r\n                            this.count--;\r\n                            return true;\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // The remaining record is not the one we want to remove\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                // No records at all in this node?! Shouldn't happen\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    IntervalTree.prototype.inOrder = function () {\r\n        return new InOrder(this.root);\r\n    };\r\n    IntervalTree.prototype.preOrder = function () {\r\n        return new PreOrder(this.root);\r\n    };\r\n    return IntervalTree;\r\n}());\r\nexports.IntervalTree = IntervalTree;\r\nvar DataIntervalTree = /** @class */ (function () {\r\n    function DataIntervalTree() {\r\n        this.tree = new IntervalTree();\r\n    }\r\n    DataIntervalTree.prototype.insert = function (low, high, data) {\r\n        return this.tree.insert({ low: low, high: high, data: data });\r\n    };\r\n    DataIntervalTree.prototype.remove = function (low, high, data) {\r\n        return this.tree.remove({ low: low, high: high, data: data });\r\n    };\r\n    DataIntervalTree.prototype.search = function (low, high) {\r\n        return this.tree.search(low, high).map(function (v) { return v.data; });\r\n    };\r\n    DataIntervalTree.prototype.inOrder = function () {\r\n        return this.tree.inOrder();\r\n    };\r\n    DataIntervalTree.prototype.preOrder = function () {\r\n        return this.tree.preOrder();\r\n    };\r\n    Object.defineProperty(DataIntervalTree.prototype, \"count\", {\r\n        get: function () {\r\n            return this.tree.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataIntervalTree;\r\n}());\r\nexports.default = DataIntervalTree;\r\nvar InOrder = /** @class */ (function () {\r\n    function InOrder(startNode) {\r\n        this.stack = [];\r\n        if (startNode !== undefined) {\r\n            this.push(startNode);\r\n        }\r\n    }\r\n    InOrder.prototype.next = function () {\r\n        // Will only happen if stack is empty and pop is called\r\n        if (this.currentNode === undefined) {\r\n            return {\r\n                done: true,\r\n                value: undefined,\r\n            };\r\n        }\r\n        // Process this node\r\n        if (this.i < this.currentNode.records.length) {\r\n            return {\r\n                done: false,\r\n                value: this.currentNode.records[this.i++],\r\n            };\r\n        }\r\n        if (this.currentNode.right !== undefined) {\r\n            this.push(this.currentNode.right);\r\n        }\r\n        else {\r\n            // Might pop the last and set this.currentNode = undefined\r\n            this.pop();\r\n        }\r\n        return this.next();\r\n    };\r\n    InOrder.prototype.push = function (node) {\r\n        this.currentNode = node;\r\n        this.i = 0;\r\n        while (this.currentNode.left !== undefined) {\r\n            this.stack.push(this.currentNode);\r\n            this.currentNode = this.currentNode.left;\r\n        }\r\n    };\r\n    InOrder.prototype.pop = function () {\r\n        this.currentNode = this.stack.pop();\r\n        this.i = 0;\r\n    };\r\n    return InOrder;\r\n}());\r\nexports.InOrder = InOrder;\r\nif (typeof Symbol === 'function') {\r\n    InOrder.prototype[Symbol.iterator] = function () { return this; };\r\n}\r\nvar PreOrder = /** @class */ (function () {\r\n    function PreOrder(startNode) {\r\n        this.stack = [];\r\n        this.i = 0;\r\n        this.currentNode = startNode;\r\n    }\r\n    PreOrder.prototype.next = function () {\r\n        // Will only happen if stack is empty and pop is called,\r\n        // which only happens if there is no right node (i.e we are done)\r\n        if (this.currentNode === undefined) {\r\n            return {\r\n                done: true,\r\n                value: undefined,\r\n            };\r\n        }\r\n        // Process this node\r\n        if (this.i < this.currentNode.records.length) {\r\n            return {\r\n                done: false,\r\n                value: this.currentNode.records[this.i++],\r\n            };\r\n        }\r\n        if (this.currentNode.right !== undefined) {\r\n            this.push(this.currentNode.right);\r\n        }\r\n        if (this.currentNode.left !== undefined) {\r\n            this.push(this.currentNode.left);\r\n        }\r\n        this.pop();\r\n        return this.next();\r\n    };\r\n    PreOrder.prototype.push = function (node) {\r\n        this.stack.push(node);\r\n    };\r\n    PreOrder.prototype.pop = function () {\r\n        this.currentNode = this.stack.pop();\r\n        this.i = 0;\r\n    };\r\n    return PreOrder;\r\n}());\r\nexports.PreOrder = PreOrder;\r\nif (typeof Symbol === 'function') {\r\n    PreOrder.prototype[Symbol.iterator] = function () { return this; };\r\n}\r\n//# sourceMappingURL=index.js.map","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","import { jsPDF, jsPDFOptions } from 'jspdf';\nimport { IHTMLRenderType } from './flat_layout/flat_html';\nimport { SurveyHelper } from './helper_survey';\nimport { LocalizableString } from 'survey-core';\n// import Fonts from './fonts';\nimport setRadioAppearance from './jspdf_plugins/acroform_radio';\nimport './jspdf_plugins/acroform.js';\nimport './jspdf_plugins/from_html.js';\n\nexport interface IPoint {\n    /**\n     * An X-coordinate for the left element edge.\n     */\n    xLeft: number;\n    /**\n     * A Y-coordinate for the top element edge.\n     */\n    yTop: number;\n}\n/**\n * An interface that describes a rectangle.\n */\nexport interface IRect extends IPoint {\n    /**\n     * An X-coordinate for the right element edge.\n     */\n    xRight: number;\n    /**\n     * A Y-coordinate for the bottom element edge.\n     */\n    yBot: number;\n}\nexport interface ISize {\n    width: number;\n    height: number;\n}\nexport interface IMarginLR {\n    /**\n     * A left margin.\n     */\n    left?: number;\n    /**\n     * A right margin.\n     */\n    right?: number;\n}\n/**\n * An interface that describes margins.\n */\nexport interface IMargin extends IMarginLR {\n    /**\n     * A top margin.\n     */\n    top?: number;\n    /**\n     * A bottom margin.\n     */\n    bot?: number;\n}\n/**\n * PDF document configuration. Pass it as the second argument to the `SurveyPDF` constructor:\n *\n * ```js\n * const surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n *\n * // In modular applications:\n * import { SurveyPDF } from \"survey-pdf\";\n * const surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n * ```\n */\nexport interface IDocOptions {\n    /**\n     * Page orientation.\n     *\n     * Possible values:\n     *\n     * - `\"p\"` (default) - Portrait orientation.\n     * - `\"l\"` - Landscape orientation.\n     *\n     * @see format\n     */\n    orientation?: 'p' | 'l';\n\n    /**\n     * Page format.\n     *\n     * Possible values:\n     *\n     * - `\"a0\"` - `\"a10\"` (`\"a4\"` is default)\n     * - `\"b0\"` - `\"b10\"`\n     * - `\"c0\"` - `\"c10\"`\n     * - `\"dl\"`\n     * - `\"letter\"`\n     * - `\"government-letter\"`\n     * - `\"legal\"`\n     * - `\"junior-legal\"`\n     * - `\"ledger\"`\n     * - `\"tabloid\"`\n     * - `\"credit-card\"`\n     * - `[width, height]` - Custom page size in millimeters, for example, `[210, 297]`.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/save-completed-forms-as-pdf-files/ (linkStyle))\n     * @see orientation\n     */\n    format?: string | number[];\n\n    /**\n     * Font size in points.\n     *\n     * Default value: 14\n     *\n     * @see fontName\n     */\n    fontSize?: number;\n\n    /**\n     * Font name.\n     *\n     * Possible values:\n     *\n     * - `\"Helvetica\"` (default)\n     * - `\"Courier\"`\n     * - `\"Times\"`\n     * - `\"Symbol\"`\n     * - `\"ZapfDingbats\"`\n     * - [Custom font name](https://surveyjs.io/pdf-generator/documentation/customize-pdf-form-settings#custom-fonts)\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/change-font-in-pdf-form/ (linkStyle))\n     * @see fontSize\n     */\n    fontName?: string;\n\n    base64Normal?: string;\n    base64Bold?: string;\n    /**\n     * Specifies whether to apply a custom font to [HTML questions](https://surveyjs.io/form-library/examples/questiontype-html/).\n     *\n     * Default value: `false`\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/change-font-in-pdf-form/ (linkStyle))\n     * @see htmlRenderAs\n     */\n    useCustomFontInHtml?: boolean;\n\n    /**\n     * Page margins.\n     *\n     * Set this property to an object with the following fields: `top`, `bot`, `left`, `right`.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/save-completed-forms-as-pdf-files/ (linkStyle))\n     */\n    margins?: IMargin;\n\n    /**\n     * Specifies how to render [HTML questions](https://surveyjs.io/Documentation/Library?id=questionhtmlmodel) into PDF.\n     *\n     * Possible values:\n     *\n     * - `\"standard\"` - Render HTML questions as selectable text.\n     * - `\"image\"` - Render HTML questions as images.\n     * - `\"auto\"` (default) - Select between the `\"standard\"` and `\"image\"` modes automatically based on the HTML content.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/split-html-image-across-pages/ (linkStyle))\n     *\n     * You can override this property for an individual HTML question. Set the question's `renderAs` property to `\"standard\"` or `\"image\"` in the survey JSON schema.\n     * @see useCustomFontInHtml\n     */\n    htmlRenderAs?: IHTMLRenderType;\n\n    /**\n     * Specifies how to render [Matrix](https://surveyjs.io/Documentation/Library?id=questionmatrixmodel), [Matrix Dropdown](https://surveyjs.io/Documentation/Library?id=questionmatrixdropdownmodel), and [Matrix Dynamic](https://surveyjs.io/Documentation/Library?id=questionmatrixdynamicmodel) questions into PDF.\n     *\n     * Possible values:\n     *\n     * - `\"list\"` - Render matrix-like questions as lists.\n     * - `\"auto\"` (default) - Render matrix-like questions as tables if they fit into the available space. Otherwise, render the questions as lists.\n     *\n     * You can override this property for an individual matrix-like question. Set the question's `renderAs` property to `\"list\"` in the survey JSON schema.\n     */\n    matrixRenderAs?: 'auto' | 'list';\n    useLegacyBooleanRendering?: boolean;\n    /**\n     * Specifies how to render read-only questions.\n     *\n     * Possible values:\n     *\n     * - `\"text\"` - Render read-only questions as plain text and custom primitives.\n     * - `\"acroform\"` - Use Adobe AcroForms to render questions that support them as interactive form elements switched to their native read-only state. Other questions are rendered in `\"text\"` mode.\n     * - `\"auto\"` (default) - Prefer the `\"text\"` mode but use `\"acroform\"` for [File Upload](https://surveyjs.io/form-library/documentation/api-reference/file-model) questions and links.\n     */\n    readonlyRenderAs?: 'auto' | 'text' | 'acroform';\n\n    textFieldRenderAs?: 'singleLine' | 'multiLine';\n\n    /**\n     * Specifies whether to compress the PDF document. Compressed documents do not support [custom fonts](https://surveyjs.io/Documentation/Pdf-Export?id=Customization-ChangeFonts#use-custom-font).\n     *\n     * Default value: `false`\n     */\n    compress?: boolean;\n\n    /**\n     * Specifies whether to apply `imageFit` settings specified in the survey JSON schema to exported images.\n     *\n     * Default value: `false`\n     *\n     * This property applies the following settings:\n     *\n     * - [`imageFit`](https://surveyjs.io/form-library/documentation/api-reference/add-image-to-survey#imageFit) to exported [Image](https://surveyjs.io/form-library/documentation/api-reference/add-image-to-survey) questions\n     * - [`imageFit`](https://surveyjs.io/form-library/documentation/api-reference/image-picker-question-model#imageFit) to exported [Image Picker](https://surveyjs.io/form-library/documentation/api-reference/image-picker-question-model) questions\n     * - [`logoFit`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#logoFit) to an exported logo in the survey header\n     *\n     * If you enable the `applyImageFit` property, the quality of images may be lower because they pass through several conversions. If `applyImageFit` is disabled, exported images fill the entire container and do not preserve their aspect ratio, but their quality remains the same because they are exported as is.\n     */\n    applyImageFit?: boolean;\n\n    /**\n     * Specifies whether the PDF document contains text in right-to-left languages.\n     *\n     * Default value: `false`\n     */\n    isRTL?: boolean;\n    /**\n     * Specifies whether to include only selected choices when PDF Generator renders a [Multi-Select Dropdown (Tag Box)](https://surveyjs.io/form-library/examples/how-to-create-multiselect-tag-box/) question.\n     *\n     * Default value: `false` (include all choices)\n     */\n    tagboxSelectedChoicesOnly?: boolean;\n}\n\nexport class DocOptions implements IDocOptions {\n    public static readonly MM_TO_PT = 72 / 25.4;\n    public static readonly FONT_SIZE = 14;\n    protected _orientation: 'l' | 'p';\n    protected _format: string | number[];\n    protected _fontSize: number;\n    protected _fontName: string;\n    public static SEGOE_NORMAL: string;\n    public static SEGOE_BOLD: string;\n    protected _base64Normal: string = undefined;\n    protected _base64Bold: string = undefined;\n    protected _useCustomFontInHtml: boolean;\n    protected _margins: IMargin;\n    protected _htmlRenderAs: IHTMLRenderType;\n    protected _matrixRenderAs: 'auto' | 'list';\n    protected _readonlyRenderAs: 'auto' | 'text' | 'acroform';\n    protected _compress: boolean;\n    protected _applyImageFit: boolean;\n    protected _useLegacyBooleanRendering: boolean\n    protected _isRTL: boolean;\n    protected _tagboxSelectedChoicesOnly: boolean;\n    public constructor(options: IDocOptions) {\n        if (typeof options.orientation === 'undefined') {\n            if (typeof options.format === 'undefined' ||\n                options.format[0] < options.format[1]) {\n                this._orientation = 'p';\n            }\n            else this._orientation = 'l';\n        }\n        else this._orientation = options.orientation;\n        this._format = options.format || 'a4';\n        if (Array.isArray(this._format)) {\n            this._format = this._format.map(f => f * DocOptions.MM_TO_PT);\n        }\n        this._fontSize = options.fontSize || DocOptions.FONT_SIZE;\n        if(!options.fontName) {\n            if(!DocOptions.SEGOE_BOLD && !DocOptions.SEGOE_NORMAL) {\n                this._fontName = SurveyHelper.STANDARD_FONT;\n            } else {\n                this._fontName = 'segoe';\n            }\n        } else {\n            this._fontName = options.fontName;\n        }\n        if ((typeof options.fontName !== 'undefined' &&\n            (typeof options.base64Normal !== 'undefined' ||\n                typeof options.base64Bold !== 'undefined'))) {\n            this._base64Normal = options.base64Normal || options.base64Bold;\n            this._base64Bold = options.base64Bold || options.base64Normal;\n        }\n        else if (this.fontName === 'segoe') {\n            // this._base64Normal = Fonts.SEGOE_NORMAL;\n            // this._base64Bold = Fonts.SEGOE_BOLD;\n            this._base64Normal = DocOptions.SEGOE_NORMAL;\n            this._base64Bold = DocOptions.SEGOE_BOLD;\n        }\n        this._margins = SurveyHelper.clone(options.margins);\n        if (typeof this._margins === 'undefined') {\n            this._margins = {};\n        }\n        if (typeof this._margins.top === 'undefined') {\n            this._margins.top = 10.0;\n        }\n        if (typeof this._margins.bot === 'undefined') {\n            this._margins.bot = 10.0;\n        }\n        if (typeof this._margins.left === 'undefined') {\n            this._margins.left = 10.0;\n        }\n        if (typeof this._margins.right === 'undefined') {\n            this._margins.right = 10.0;\n        }\n        Object.keys(this._margins).forEach((name: string) => {\n            (<any>this._margins)[name] = (<any>this._margins)[name] * DocOptions.MM_TO_PT;\n        });\n        this._htmlRenderAs = options.htmlRenderAs || 'auto';\n        this._matrixRenderAs = options.matrixRenderAs || 'auto';\n        this._readonlyRenderAs = options.readonlyRenderAs || 'auto';\n        this._compress = options.compress || false;\n        this._applyImageFit = options.applyImageFit || false;\n        this._useLegacyBooleanRendering = options.useLegacyBooleanRendering || false;\n        this._isRTL = options.isRTL || false;\n        this._tagboxSelectedChoicesOnly = options.tagboxSelectedChoicesOnly || false;\n    }\n    public get leftTopPoint(): IPoint {\n        return {\n            xLeft: this.margins.left,\n            yTop: this.margins.top\n        };\n    }\n    public get fontSize(): number {\n        return this._fontSize;\n    }\n    public get fontName(): string {\n        return this._fontName;\n    }\n    public get base64Normal(): string {\n        return this._base64Normal;\n    }\n    public get base64Bold(): string {\n        return this._base64Bold;\n    }\n    public get useCustomFontInHtml(): boolean {\n        return this._useCustomFontInHtml;\n    }\n    public get margins(): IMargin {\n        return this._margins;\n    }\n    public get format(): string | number[] {\n        return this._format;\n    }\n    public get orientation(): 'l' | 'p' {\n        return this._orientation;\n    }\n    public get htmlRenderAs(): IHTMLRenderType {\n        return this._htmlRenderAs;\n    }\n    public get matrixRenderAs(): 'auto' | 'list' {\n        return this._matrixRenderAs;\n    }\n    public get readonlyRenderAs(): 'auto' | 'text' | 'acroform' {\n        return this._readonlyRenderAs;\n    }\n    public get compress(): boolean {\n        return this._compress;\n    }\n    public get applyImageFit(): boolean {\n        return this._applyImageFit;\n    }\n    public get useLegacyBooleanRendering(): boolean {\n        return this._useLegacyBooleanRendering;\n    }\n    public get isRTL(): boolean {\n        return this._isRTL;\n    }\n    public get tagboxSelectedChoicesOnly(): boolean {\n        return this._tagboxSelectedChoicesOnly;\n    }\n}\n\n/**\n * The `DocController` object includes an API that allows you to configure main PDF document properties (font, margins, page width and height).\n *\n * [View Demo](https://surveyjs.io/pdf-generator/examples/change-font-in-pdf-form/ (linkStyle))\n */\nexport class DocController extends DocOptions {\n    private _doc: jsPDF;\n    private _helperDoc: jsPDF;\n    private _fontStyle: string;\n    private marginsStack: IMarginLR[];\n    public constructor(options: IDocOptions = {}) {\n        super(options);\n        const jspdfOptions: jsPDFOptions = {\n            orientation: this.orientation,\n            unit: 'pt',\n            format: this.format,\n            compress: this.compress\n        };\n        this._doc = new jsPDF(jspdfOptions);\n        if (typeof this.base64Normal !== 'undefined' && !SurveyHelper.isFontExist(this, this.fontName)) {\n            DocController.addFont(this.fontName, this.base64Normal, 'normal');\n            DocController.addFont(this.fontName, this.base64Bold, 'bold');\n            this._doc = new jsPDF(jspdfOptions);\n        }\n        setRadioAppearance(this._doc);\n        this._useCustomFontInHtml = options.useCustomFontInHtml && SurveyHelper.isFontExist(this, this.fontName);\n        this._helperDoc = new jsPDF(jspdfOptions);\n        this._doc.setFont(this.fontName);\n        this._helperDoc.setFont(this.fontName);\n        this._doc.setFontSize(this.fontSize);\n        this._helperDoc.setFontSize(this.fontSize);\n        this._fontStyle = 'normal';\n        this.marginsStack = [];\n    }\n    public static customFonts: { [name: string]: { normal: string, bold: string, italic: string, bolditalic: string } } = {};\n    /**\n     * Adds a custom font to the PDF Generator.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/change-font-in-pdf-form/ (linkStyle))\n     * @param fontName A custom name that you will use to apply the custom font.\n     * @param base64 The custom font as a Base64-encoded string. To encode your font to Base64, obtain it as a TTF file and use any TTF-to-Base64 online converter.\n     * @param fontStyle The style of the custom font: `\"normal\"`, `\"bold\"`, `\"italic\"`, or `\"bolditalic\"`.\n     */\n    public static addFont(fontName: string, base64: string, fontStyle: 'normal' | 'bold' | 'italic' | 'bolditalic') {\n        let font = DocController.customFonts[fontName];\n        if (!font) {\n            font = <any>{};\n            DocController.customFonts[fontName] = font;\n        }\n        font[fontStyle] = base64;\n        const addFontCallback: () => void = function () {\n            const customFont = DocController.customFonts[fontName];\n            if (!!customFont && !!customFont[fontStyle]) {\n                const fontFile: string = `${fontName}-${fontStyle}.ttf`;\n                this.addFileToVFS(fontFile, customFont[fontStyle]);\n                this.addFont(fontFile, fontName, fontStyle);\n            }\n        };\n        (<any>jsPDF).API.events.push(['addFonts', addFontCallback]);\n    }\n    public get doc(): any {\n        return this._doc;\n    }\n    public get helperDoc(): any {\n        return this._helperDoc;\n    }\n    public get fontName(): string {\n        return this._fontName;\n    }\n    public set fontName(fontName: string) {\n        this._fontName = fontName;\n        this._doc.setFont(fontName);\n        this._helperDoc.setFont(fontName);\n    }\n    public get fontSize(): number {\n        return this._fontSize;\n    }\n    public set fontSize(fontSize: number) {\n        this._fontSize = fontSize;\n        this._doc.setFontSize(fontSize);\n        this._helperDoc.setFontSize(fontSize);\n    }\n    public get fontStyle(): string {\n        return this._fontStyle;\n    }\n    public set fontStyle(fontStyle: string) {\n        this._fontStyle = fontStyle;\n        this._doc.setFont(this._fontName, fontStyle);\n        this._helperDoc.setFont(this._fontName, fontStyle);\n    }\n    public measureText(text: string | LocalizableString | number = 1, fontStyle: string = this._fontStyle,\n        fontSize: number = this._fontSize): ISize {\n        const oldFontSize: number = this._helperDoc.getFontSize();\n        this._helperDoc.setFontSize(fontSize);\n        this._helperDoc.setFont(this._fontName, fontStyle);\n        const height: number = this._helperDoc.getLineHeight() / this._helperDoc.internal.scaleFactor;\n        let width: number = 0.0;\n        if (typeof text === 'number') {\n            width = height * text;\n        }\n        else {\n            text = typeof text === 'string' ? text : SurveyHelper.getLocString(text);\n            width = text.split('').reduce((sm: number, cr: string) =>\n                sm + this._helperDoc.getTextWidth(cr), 0.0);\n        }\n        this._helperDoc.setFontSize(oldFontSize);\n        this._helperDoc.setFont(this._fontName, 'normal');\n        return {\n            width: width,\n            height: height\n        };\n    }\n    /**\n     * The width of one character in pixels.\n     */\n    public get unitWidth(): number {\n        return this.measureText().width;\n    }\n    /**\n     * The heigth of one character in pixels.\n     */\n    public get unitHeight(): number {\n        return this.measureText().height;\n    }\n    public pushMargins(left?: number, right?: number): void {\n        this.marginsStack.push({ left: this.margins.left, right: this.margins.right });\n        if (typeof left !== 'undefined') this.margins.left = left;\n        if (typeof right !== 'undefined') this.margins.right = right;\n    }\n    public popMargins(): void {\n        const margins: IMarginLR = this.marginsStack.pop();\n        this.margins.left = margins.left;\n        this.margins.right = margins.right;\n    }\n    /**\n     * The width of a PDF page in pixels.\n     */\n    public get paperWidth(): number {\n        return this.doc.internal.pageSize.width;\n    }\n    /**\n     * The height of a PDF page in pixels.\n     */\n    public get paperHeight(): number {\n        return this.doc.internal.pageSize.height;\n    }\n    public getNumberOfPages(): number {\n        return this.doc.getNumberOfPages();\n    }\n    public addPage(): void {\n        this.doc.addPage();\n    }\n    public getCurrentPageIndex(): number {\n        return this.doc.getCurrentPageInfo().pageNumber - 1;\n    }\n    public setPage(index: number): void {\n        this.doc.setPage(index + 1);\n    }\n}\n","declare var Reflect: any;\n\nvar extendStatics = function(d: any, b: any): any {\n    extendStatics = Object.setPrototypeOf ||\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n    return extendStatics(d, b);\n};\n\nexport function __extends(d: any, b: any) {\n    if (typeof b !== 'function' && b !== null)\n        throw new TypeError('Class extends value ' + String(b) + ' is not a constructor or null');\n    extendStatics(d, b);\n    function __() { this.constructor = d; }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n    __assign = (<any>Object).assign || function __assign(t: any) {\n        for (var s: any, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\nexport function __rest(s: any, e: any) {\n    var t: any = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === 'function')\n        for (var i = 0, q = Object.getOwnPropertySymbols(s); i < q.length; i++) {\n            if (e.indexOf(q[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, q[i]))\n                t[q[i]] = s[q[i]];\n        }\n    return t;\n}\n\nexport function __decorate(decorators: any, target: any, key: any, desc: any) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);\n    // eslint-disable-next-line no-cond-assign\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __awaiter(thisArg: any, _arguments: any, P: any, generator: any) {\n    function adopt(value: any) { return value instanceof P ? value : new P(function (resolve: any) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve: any, reject: any) {\n        function fulfilled(value: any) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value: any) { try { step(generator['throw'](value)); } catch (e) { reject(e); } }\n        function step(result: any) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\n\nexport function __generator(thisArg: any, body: any) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: <any>[], ops: <any>[] }, f: any, y: any, t: any, g: any;\n    return g = { next: verb(0), 'throw': verb(1), 'return': verb(2) }, typeof Symbol === 'function' && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n: any) { return function (v: any) { return step([n, v]); }; }\n    function step(op: any) {\n        if (f) throw new TypeError('Generator is already executing.');\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y['return'] : op[0] ? y['throw'] || ((t = y['return']) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { (<any>_) = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n}\n\nexport function __spreadArray (to: any, from: any, pack: any) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar: any; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}","export { SurveyPDF } from '../survey';\nexport { SurveyHelper } from '../helper_survey';\nexport { IPoint, IRect, ISize, IMarginLR, IMargin, IDocOptions, DocOptions, DocController } from '../doc_controller';\nexport { FlatRepository } from '../flat_layout/flat_repository';\nexport { IFlatQuestion, FlatQuestion } from '../flat_layout/flat_question';\nexport { FlatQuestionDefault } from '../flat_layout/flat_default';\nexport { FlatBooleanCheckbox as FlatBoolean } from '../flat_layout/flat_boolean';\nexport { FlatCheckbox } from '../flat_layout/flat_checkbox';\nexport { FlatCustomModel } from '../flat_layout/flat_custom_model';\nexport { FlatComment } from '../flat_layout/flat_comment';\nexport { FlatDropdown } from '../flat_layout/flat_dropdown';\nexport { FlatExpression } from '../flat_layout/flat_expression';\nexport { FlatFile } from '../flat_layout/flat_file';\nexport { FlatHTML } from '../flat_layout/flat_html';\nexport { FlatImage } from '../flat_layout/flat_image';\nexport { FlatImagePicker } from '../flat_layout/flat_imagepicker';\nexport { FlatPanelDynamic } from '../flat_layout/flat_paneldynamic';\nexport { FlatRadiogroup } from '../flat_layout/flat_radiogroup';\nexport { FlatRanking } from '../flat_layout/flat_ranking';\nexport { FlatRating } from '../flat_layout/flat_rating';\nexport { FlatSlider } from '../flat_layout/flat_slider';\nexport { FlatSelectBase } from '../flat_layout/flat_selectbase';\nexport { FlatSignaturePad } from '../flat_layout/flat_signaturepad';\nexport { FlatTextbox } from '../flat_layout/flat_textbox';\nexport { FlatSurvey } from '../flat_layout/flat_survey';\nexport { FlatMatrix } from '../flat_layout/flat_matrix';\nexport { FlatMatrixMultiple } from '../flat_layout/flat_matrixmultiple';\nexport { FlatMatrixDynamic } from '../flat_layout/flat_matrixdynamic';\nexport { FlatMultipleText } from '../flat_layout/flat_multipletext';\nexport { PagePacker } from '../page_layout/page_packer';\nexport { EventHandler } from '../event_handler/event_handler';\nexport { HorizontalAlign, VerticalAlign, IDrawRectOptions, IDrawTextOptions, IDrawImageOptions, DrawCanvas } from '../event_handler/draw_canvas';\nexport { IPdfBrick, PdfBrick } from '../pdf_render/pdf_brick';\nexport { BooleanItemBrick } from '../pdf_render/pdf_booleanitem';\nexport { CheckboxItemBrick } from '../pdf_render/pdf_checkboxitem';\nexport { CheckItemBrick } from '../pdf_render/pdf_checkitem';\nexport { CompositeBrick } from '../pdf_render/pdf_composite';\nexport { CustomBrick } from '../pdf_render/pdf_custom';\nexport { DropdownBrick } from '../pdf_render/pdf_dropdown';\nexport { EmptyBrick } from '../pdf_render/pdf_empty';\nexport { HTMLBrick } from '../pdf_render/pdf_html';\nexport { ImageBrick } from '../pdf_render/pdf_image';\nexport { LinkBrick } from '../pdf_render/pdf_link';\nexport { RadioItemBrick } from '../pdf_render/pdf_radioitem';\nexport { RankingItemBrick } from '../pdf_render/pdf_rankingitem';\nexport { RowlineBrick } from '../pdf_render/pdf_rowline';\nexport { TextFieldBrick } from '../pdf_render/pdf_textfield';\nexport { TextBoldBrick } from '../pdf_render/pdf_textbold';\nexport { TextBrick } from '../pdf_render/pdf_text';\nexport { TitlePanelBrick } from '../pdf_render/pdf_titlepanel';\n\nimport { checkLibraryVersion } from 'survey-core';\ncheckLibraryVersion(`${process.env.VERSION}`, 'survey-pdf');","import { IQuestion, PanelModel, PageModel, Question } from 'survey-core';\nimport { IPoint, DocController } from '../doc_controller';\nimport { FlatRepository } from '../flat_layout/flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\n\nexport class AdornersBaseOptions {\n    public point: IPoint;\n    public bricks: IPdfBrick[];\n    public controller: DocController;\n    public repository: FlatRepository;\n    public module: any;\n\n    public constructor(point: IPoint, bricks: IPdfBrick[],\n        controller: DocController, repository: FlatRepository, module: any) {\n        this.point = point;\n        this.bricks = bricks;\n        this.controller = controller;\n        this.repository = repository;\n        this.module = module;\n    }\n}\nexport class AdornersOptions extends AdornersBaseOptions {\n    public question: Question;\n    public constructor(point: IPoint, bricks: IPdfBrick[],\n        question: Question, controller: DocController,\n        repository: FlatRepository, module: any) {\n        super(point, bricks, controller, repository, module);\n        this.question = question;\n    }\n}\nexport class AdornersPanelOptions extends AdornersBaseOptions {\n    public panel: PanelModel;\n    public constructor(point: IPoint, bricks: IPdfBrick[],\n        panel: PanelModel, controller: DocController,\n        repository: FlatRepository, module: any) {\n        super(point, bricks, controller, repository, module);\n        this.panel = panel;\n    }\n}\n\nexport class AdornersPageOptions extends AdornersBaseOptions {\n    public page: PageModel;\n    public constructor(point: IPoint, bricks: IPdfBrick[],\n        page: PageModel, controller: DocController,\n        repository: FlatRepository, module: any) {\n        super(point, bricks, controller, repository, module);\n        this.page = page;\n    }\n}\n\n","import { IRect, IMargin, ISize, DocOptions, DocController } from '../doc_controller';\nimport { IPdfBrick, PdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { TextBoldBrick } from '../pdf_render/pdf_textbold';\nimport { SurveyHelper } from '../helper_survey';\n\n/**\n * Horizontal alignment types in onRenderHeader and onRenderFooter events\n */\nexport enum HorizontalAlign {\n    NotSet = 'notset',\n    Left = 'left',\n    Center = 'center',\n    Right = 'right'\n}\n/**\n * Vertical alignment types in onRenderHeader and onRenderFooter events\n */\nexport enum VerticalAlign {\n    NotSet = 'notset',\n    Top = 'top',\n    Middle = 'middle',\n    Bottom = 'bottom'\n}\n\nexport interface IDrawRectOptions {\n    /**\n     * Horizontal alignment within the rectangle that limits the drawing area.\n     *\n     * Possible values:\n     *\n     * - `\"center\"` (default)\n     * - `\"left\"`\n     * - `\"right\"`\n     */\n    horizontalAlign?: HorizontalAlign;\n    /**\n     * Vertical alignment within the rectangle that limits the drawing area.\n     *\n     * Possible values:\n     *\n     * - `\"middle\"` (default)\n     * - `\"top\"`\n     * - `\"bottom\"`\n     */\n    verticalAlign?: VerticalAlign;\n    /**\n     * The distance between the content and the borders of the rectangle. This property applies only if the content is aligned to the left/right or top/bottom.\n     */\n    margins?: IMargin;\n    /**\n     * An object with coordinates of the rectangle.\n     */\n    rect?: IRect;\n}\n/**\n * An object that configures rendering a piece of text.\n */\nexport interface IDrawTextOptions extends IDrawRectOptions {\n    /**\n     * A text string to be drawn.\n     */\n    text: string;\n    /**\n     * Font size in points.\n     *\n     * Default value: 14\n     */\n    fontSize?: number;\n    /**\n     * Enable this property to render the text string bold.\n     *\n     * Default value: `false`\n     */\n    isBold?: boolean;\n}\n/**\n * An object that configures rendering an image.\n */\nexport interface IDrawImageOptions extends IDrawRectOptions {\n    /**\n     * An image width in pixels. Defaults to the [rectangle width](https://surveyjs.io/pdf-generator/documentation/api-reference/idrawimageoptions#rect).\n     */\n    width?: number;\n    /**\n     * An image height in pixels. Defaults to the [rectangle height](https://surveyjs.io/pdf-generator/documentation/api-reference/idrawimageoptions#rect).\n     */\n    height?: number;\n    /**\n     * A string value with a base64-encoded image to be drawn.\n     */\n    base64: string;\n    /**\n     * Specifies how to resize the image to fit it into its container.\n     *\n     * Default value: `\"contain\"` if [`applyImageFit`](https://surveyjs.io/pdf-generator/documentation/api-reference/idocoptions#applyImageFit) is enabled or `undefined` if not.\n     *\n     * Refer to the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) CSS property description for information on accepted values.\n     */\n    imageFit?: string;\n}\n\n/**\n * An object that describes a drawing area and enables you to draw an image or a piece of text within the area. You can access this object within functions that handle `SurveyPDF`'s [`onRenderHeader`](https://surveyjs.io/pdf-generator/documentation/api-reference/surveypdf#onRenderHeader) and [`onRenderFooter`](https://surveyjs.io/pdf-generator/documentation/api-reference/surveypdf#onRenderFooter) events.\n *\n * [View Demo](https://surveyjs.io/pdf-generator/examples/customize-header-and-footer-of-pdf-form/ (linkStyle))\n */\nexport class DrawCanvas {\n    public constructor(public packs: IPdfBrick[],\n        public controller: DocController,\n        protected _rect: IRect,\n        protected _countPages: number,\n        protected _pageNumber: number) { }\n    /**\n     * A total number of pages in the document.\n     */\n    public get pageCount(): number {\n        return this._countPages;\n    }\n    public get countPages(): number {\n        return this._countPages;\n    }\n    /**\n     * The number of the page that contains the drawing area. Enumeration starts with 1.\n     */\n    public get pageNumber(): number {\n        return this._pageNumber;\n    }\n    /**\n     * An object with coordinates of a rectangle that limits the drawing area. This object contain the following fields: `xLeft`, `xRight`, `yTop`, `yBot`.\n     */\n    public get rect(): IRect {\n        return this._rect;\n    }\n    private alignRect(rectOptions: IDrawRectOptions, itemSize: ISize): IRect {\n        if (typeof rectOptions.margins === 'undefined') {\n            rectOptions.margins = { left: 0.0, right: 0.0, top: 0.0, bot: 0.0 };\n        }\n        else {\n            if (typeof rectOptions.margins.left === 'undefined') {\n                rectOptions.margins.left = 0.0;\n            }\n            if (typeof rectOptions.margins.right === 'undefined') {\n                rectOptions.margins.right = 0.0;\n            }\n            if (typeof rectOptions.margins.top === 'undefined') {\n                rectOptions.margins.top = 0.0;\n            }\n            if (typeof rectOptions.margins.bot === 'undefined') {\n                rectOptions.margins.bot = 0.0;\n            }\n        }\n        if (typeof rectOptions.rect === 'undefined') {\n            if (typeof rectOptions.horizontalAlign === 'undefined' ||\n                rectOptions.horizontalAlign === HorizontalAlign.NotSet) {\n                rectOptions.horizontalAlign = HorizontalAlign.Center;\n            }\n            if (typeof rectOptions.verticalAlign === 'undefined' ||\n                rectOptions.verticalAlign === VerticalAlign.NotSet) {\n                rectOptions.verticalAlign = VerticalAlign.Middle;\n            }\n        }\n        const rect: IRect = SurveyHelper.clone(this.rect);\n        if (typeof rectOptions.horizontalAlign !== 'undefined') {\n            switch (rectOptions.horizontalAlign) {\n                case HorizontalAlign.Left:\n                    rect.xLeft = this.rect.xLeft + rectOptions.margins.left;\n                    rect.xRight = Math.min(this.rect.xRight - rectOptions.margins.right,\n                        this.rect.xLeft + rectOptions.margins.left + itemSize.width);\n                    break;\n                case HorizontalAlign.Center:\n                    rect.xLeft = Math.max(this.rect.xLeft + rectOptions.margins.left,\n                        (this.rect.xLeft + this.rect.xRight - itemSize.width) / 2.0);\n                    rect.xRight = Math.min(this.rect.xRight - rectOptions.margins.right,\n                        (this.rect.xLeft + this.rect.xRight + itemSize.width) / 2.0);\n                    break;\n                case HorizontalAlign.Right:\n                    rect.xLeft = Math.max(this.rect.xLeft + rectOptions.margins.left,\n                        this.rect.xRight - rectOptions.margins.right - itemSize.width);\n                    rect.xRight = this.rect.xRight - rectOptions.margins.right;\n                    break;\n            }\n        }\n        else {\n            rect.xLeft = rectOptions.rect.xLeft || this.rect.xLeft;\n            rect.xRight = rectOptions.rect.xRight || this.rect.xRight;\n        }\n        if (typeof rectOptions.verticalAlign !== 'undefined') {\n            switch (rectOptions.verticalAlign) {\n                case VerticalAlign.Top:\n                    rect.yTop = this.rect.yTop + rectOptions.margins.top;\n                    rect.yBot = Math.min(this.rect.yBot - rectOptions.margins.bot,\n                        this.rect.yTop + rectOptions.margins.top + itemSize.height);\n                    break;\n                case VerticalAlign.Middle:\n                    rect.yTop = Math.max(this.rect.yTop + rectOptions.margins.top,\n                        (this.rect.yTop + this.rect.yBot - itemSize.height) / 2.0);\n                    rect.yBot = Math.min(this.rect.yBot - rectOptions.margins.bot,\n                        (this.rect.yTop + this.rect.yBot + itemSize.height) / 2.0);\n                    break;\n                case VerticalAlign.Bottom:\n                    rect.yTop = Math.max(this.rect.yTop + rectOptions.margins.top,\n                        this.rect.yBot - rectOptions.margins.bot - itemSize.height);\n                    rect.yBot = this.rect.yBot - rectOptions.margins.bot;\n                    break;\n            }\n        }\n        else {\n            rect.yTop = rectOptions.rect.yTop || this.rect.yTop;\n            rect.yBot = rectOptions.rect.yBot || this.rect.yBot;\n        }\n        return rect;\n    }\n    /**\n     * Draws a piece of text within the drawing area.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/customize-header-and-footer-of-pdf-form/ (linkStyle))\n     * @param textOptions An [`IDrawTextOptions`](https://surveyjs.io/pdf-generator/documentation/api-reference/idrawtextoptions) object that configures the drawing.\n     */\n    public drawText(textOptions: IDrawTextOptions): void {\n        textOptions = SurveyHelper.clone(textOptions);\n        if (typeof textOptions.fontSize === 'undefined') {\n            textOptions.fontSize = DocOptions.FONT_SIZE;\n        }\n        if (typeof textOptions.isBold === 'undefined') {\n            textOptions.isBold = false;\n        }\n        const textSize: ISize = this.controller.measureText(textOptions.text,\n            textOptions.isBold ? 'bold' : 'normal', textOptions.fontSize);\n        const textRect: IRect = this.alignRect(textOptions, textSize);\n        if (!textOptions.isBold) {\n            this.packs.push(new TextBrick(null, this.controller,\n                textRect, textOptions.text));\n        }\n        else {\n            this.packs.push(new TextBoldBrick(null, this.controller,\n                textRect, textOptions.text));\n        }\n        (<PdfBrick>this.packs[this.packs.length - 1]).fontSize = textOptions.fontSize;\n    }\n    /**\n     * Draws an image within the drawing area.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/customize-header-and-footer-of-pdf-form/ (linkStyle))\n     * @param imageOptions An [`IDrawImageOptions`](https://surveyjs.io/pdf-generator/documentation/api-reference/idrawimageoptions) object that configures drawing.\n     */\n    public async drawImage(imageOptions: IDrawImageOptions): Promise<void> {\n        imageOptions = SurveyHelper.clone(imageOptions);\n        if (typeof imageOptions.width === 'undefined') {\n            imageOptions.width = this.rect.xRight - this.rect.xLeft;\n        }\n        if (typeof imageOptions.height === 'undefined') {\n            imageOptions.height = this.rect.yBot - this.rect.yTop;\n        }\n        const imageSize: ISize = {\n            width: imageOptions.width,\n            height: imageOptions.height\n        };\n        const imageRect: IRect = this.alignRect(imageOptions, imageSize);\n        this.controller.pushMargins(0, 0);\n        this.packs.push(await SurveyHelper.createImageFlat(\n            SurveyHelper.createPoint(imageRect, true, true),\n            null, this.controller, { link: imageOptions.base64,\n                width: imageRect.xRight - imageRect.xLeft,\n                height: imageRect.yBot - imageRect.yTop, objectFit: imageOptions.imageFit }, !!imageOptions.imageFit || this.controller.applyImageFit));\n        this.controller.popMargins();\n    }\n}","import { Event, EventBase } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { DocController } from '../doc_controller';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { DrawCanvas } from './draw_canvas';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class EventAsync<Sender, Options> extends EventBase<Sender, Options> {\n    public unshift(func: (sender: Sender, options: Options) => any) {\n        if (this.hasFunc(func)) return;\n        if (this.callbacks == null) {\n            this.callbacks = new Array<(sender: Sender, options: Options) => any>();\n        }\n        this.callbacks.unshift(func);\n    }\n    public async fire(sender: Sender, options: Options) {\n        if (this.callbacks == null) return;\n        for (var i = 0; i < this.callbacks.length; i++) {\n            await this.callbacks[i](sender, options);\n        }\n    }\n}\nexport class EventHandler {\n    public static async process_header_events(survey: SurveyPDF,\n        controller: DocController, packs: IPdfBrick[][]): Promise<void> {\n        if (!survey.haveCommercialLicense) {\n            survey.onRenderHeader.add((_, canvas) => {\n                canvas.drawText({\n                    text: 'SurveyJS PDF | Please purchase a SurveyJS PDF developer license to use it in your app | https://surveyjs.io/Buy',\n                    fontSize: 10\n                });\n            });\n        }\n        for (let i: number = 0; i < packs.length; i++) {\n            await survey.onRenderHeader.fire(survey, new DrawCanvas(packs[i], controller,\n                SurveyHelper.createHeaderRect(controller), packs.length, i + 1));\n            await survey.onRenderFooter.fire(survey, new DrawCanvas(packs[i], controller,\n                SurveyHelper.createFooterRect(controller), packs.length, i + 1));\n        }\n    }\n}","import { IQuestion, ItemValue, LocalizableString, QuestionBooleanModel, QuestionRadiogroupModel, SurveyModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { BooleanItemBrick } from '../pdf_render/pdf_booleanitem';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\nimport { FlatRadiogroup } from './flat_radiogroup';\n\nexport class FlatBooleanCheckbox extends FlatQuestion {\n    protected question: QuestionBooleanModel;\n    constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionBooleanModel>question;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const compositeFlat: CompositeBrick = new CompositeBrick();\n        const height: number = this.controller.unitHeight;\n        const itemFlat: IPdfBrick = new BooleanItemBrick(this.question, this.controller,\n            SurveyHelper.moveRect(\n                SurveyHelper.scaleRect(SurveyHelper.createRect(point, height, height),\n                    SurveyHelper.SELECT_ITEM_FLAT_SCALE), point.xLeft));\n        compositeFlat.addBrick(itemFlat);\n        const textPoint: IPoint = SurveyHelper.clone(point);\n        textPoint.xLeft = itemFlat.xRight + this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_ITEM_TEXT;\n        const locLabelText: LocalizableString = this.question.isIndeterminate ? null :\n            this.question.booleanValue ? this.question.locLabelTrue : this.question.locLabelFalse;\n        if (locLabelText !== null && locLabelText.renderedHtml !== null) {\n            compositeFlat.addBrick(await SurveyHelper.createTextFlat(\n                textPoint, this.question, this.controller, locLabelText, TextBrick));\n        }\n        return [compositeFlat];\n    }\n}\nexport class FlatBoolean extends FlatRadiogroup {\n    private items: Array<ItemValue>;\n    constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.buildItems();\n    }\n    private buildItems() {\n        const question = <QuestionBooleanModel>(<any>this.question);\n        const falseChoice = new ItemValue((<QuestionBooleanModel>question).valueFalse !== undefined ? (<QuestionBooleanModel>question).valueFalse : false);\n        const trueChoice = new ItemValue((<QuestionBooleanModel>question).valueTrue !== undefined ? (<QuestionBooleanModel>question).valueTrue : true);\n        falseChoice.locOwner = question;\n        falseChoice.setLocText((<QuestionBooleanModel>question).locLabelFalse);\n        trueChoice.locOwner = question;\n        trueChoice.setLocText((<QuestionBooleanModel>question).locLabelTrue);\n        this.items = [falseChoice, trueChoice];\n    }\n    protected getVisibleChoices(): Array<ItemValue> {\n        return this.items;\n    }\n    protected getColCount(): number {\n        return 0;\n    }\n}\n\nFlatRepository.getInstance().register('boolean', FlatBoolean);\nFlatRepository.getInstance().register('boolean-checkbox', FlatBooleanCheckbox);\n","import { IQuestion, ItemValue, QuestionCheckboxModel, QuestionTagboxModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IRect, DocController } from '../doc_controller';\nimport { FlatSelectBase } from './flat_selectbase';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { CheckboxItemBrick } from '../pdf_render/pdf_checkboxitem';\n\nexport class FlatCheckbox extends FlatSelectBase {\n    protected question: QuestionCheckboxModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionCheckboxModel>question;\n    }\n    public generateFlatItem(rect: IRect, item: ItemValue, index: number): IPdfBrick {\n        return new CheckboxItemBrick(this.question, this.controller, rect, item, index);\n    }\n}\nexport class FlatTagbox extends FlatCheckbox {\n    protected question: QuestionTagboxModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionTagboxModel>question;\n    }\n    protected getVisibleChoices(): Array<ItemValue> {\n        if(this.controller.tagboxSelectedChoicesOnly) {\n            return this.question.selectedChoices;\n        } else {\n            return super.getVisibleChoices();\n        }\n    }\n}\nFlatRepository.getInstance().register('tagbox', FlatTagbox);\nFlatRepository.getInstance().register('checkbox', FlatCheckbox);","import { IQuestion, QuestionCommentModel, settings } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class FlatComment extends FlatQuestion {\n    protected question: QuestionCommentModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionCommentModel>question;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        return [await SurveyHelper.createCommentFlat(\n            point, this.question, this.controller,\n            {\n                rows: this.question.rows,\n                isReadOnly: this.question.isReadOnly,\n                isMultiline: true,\n                fieldName: this.question.id,\n                placeholder: SurveyHelper.getLocString(this.question.locPlaceHolder),\n                shouldRenderBorders: settings.readOnlyCommentRenderMode === 'textarea',\n                value: this.question.value\n            })];\n    }\n}\n\nFlatRepository.getInstance().register('comment', FlatComment);","import { IQuestion, QuestionCustomModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\n\nexport class FlatCustomModel extends FlatQuestion {\n    constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const flat = FlatRepository.getInstance().create(this.survey, this.question, this.controller, this.question.getType());\n        return flat.generateFlatsContent(point);\n    }\n}\n\nFlatRepository.getInstance().register('custom_model', FlatCustomModel);","import { IPoint } from '../doc_controller';\nimport { SurveyHelper } from '../helper_survey';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { FlatQuestion } from './flat_question';\n\nexport class FlatQuestionDefault extends FlatQuestion {\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const valueBrick = await SurveyHelper.createTextFlat(point, this.question, this.controller, `${this.question.displayValue}`, TextBrick);\n        return [valueBrick];\n    }\n}","import { IQuestion, QuestionDropdownModel, settings } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, IRect, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { DropdownBrick } from '../pdf_render/pdf_dropdown';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class FlatDropdown extends FlatQuestion {\n    protected question: QuestionDropdownModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionDropdownModel>question;\n    }\n    protected async generateItemComment(point: IPoint): Promise<IPdfBrick> {\n        const commentModel = this.question.getCommentTextAreaModel(this.question.selectedItem);\n        return await SurveyHelper.createCommentFlat(\n            point, this.question, this.controller, {\n                fieldName: commentModel.id,\n                rows: SurveyHelper.OTHER_ROWS_COUNT,\n                value: commentModel.getTextValue(),\n                shouldRenderBorders: settings.readOnlyCommentRenderMode === 'textarea',\n                isReadOnly: this.question.isReadOnly,\n                isMultiline: true,\n            }\n        );\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const valueBrick = !this.shouldRenderAsComment ? new DropdownBrick(this.question, this.controller, SurveyHelper.createTextFieldRect(point, this.controller)) : await SurveyHelper.createCommentFlat(point, this.question, this.controller,\n            {\n                fieldName: this.question.id,\n                shouldRenderBorders: settings.readOnlyTextRenderMode === 'input',\n                value: this.question.readOnlyText || '',\n                isReadOnly: this.question.isReadOnly,\n                placeholder: SurveyHelper.getLocString(this.question.locPlaceholder)\n            });\n        const compositeFlat: CompositeBrick = new CompositeBrick(valueBrick);\n        if (this.question.isShowingChoiceComment) {\n            const otherPoint: IPoint = SurveyHelper.createPoint(compositeFlat);\n            otherPoint.yTop += this.controller.unitHeight * SurveyHelper.GAP_BETWEEN_ROWS;\n            compositeFlat.addBrick(await this.generateItemComment(otherPoint));\n        }\n        return [compositeFlat];\n    }\n}\n\nFlatRepository.getInstance().register('dropdown', FlatDropdown);","import { IQuestion, QuestionExpressionModel, settings } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, IRect, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class FlatExpression extends FlatQuestion {\n    protected question: QuestionExpressionModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionExpressionModel>question;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        return [await SurveyHelper.createCommentFlat(point, this.question, this.controller, {\n            value: this.question.displayValue,\n            isReadOnly: true,\n            fieldName: this.question.id,\n            shouldRenderBorders: settings.readOnlyTextRenderMode === 'input',\n        })];\n    }\n}\n\nFlatRepository.getInstance().register('expression', FlatExpression);","import { IQuestion, QuestionFileModel, surveyLocalization } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, ISize, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class FlatFile extends FlatQuestion {\n    public static readonly IMAGE_GAP_SCALE: number = 0.195;\n    public static readonly TEXT_MIN_SCALE: number = 5.0;\n    public static DEFAULT_IMAGE_FIT: string = 'contain';\n    protected question: QuestionFileModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionFileModel>question;\n    }\n    private async generateFlatItem(point: IPoint, item: {\n        name: string, type: string, content: string, imageSize?: ISize,\n    }): Promise<IPdfBrick> {\n        const compositeFlat: CompositeBrick = new CompositeBrick(await SurveyHelper.createLinkFlat(\n            point, this.question, this.controller, item.name === undefined ? 'image' : item.name, item.content));\n        if (SurveyHelper.canPreviewImage(this.question, item, item.content)) {\n            const imagePoint: IPoint = SurveyHelper.createPoint(compositeFlat);\n            imagePoint.yTop += this.controller.unitHeight * FlatFile.IMAGE_GAP_SCALE;\n            compositeFlat.addBrick(await SurveyHelper.createImageFlat(imagePoint, this.question, this.controller, { link: item.content, width: item.imageSize.width, height: item.imageSize.height, objectFit: FlatFile.DEFAULT_IMAGE_FIT }));\n        }\n        return compositeFlat;\n    }\n    private addLine(rowsFlats: CompositeBrick[], currPoint: IPoint, index: number, previewValue: Array<any>): void {\n        if (index !== previewValue.length - 1) {\n            rowsFlats[rowsFlats.length - 1].addBrick(\n                SurveyHelper.createRowlineFlat(currPoint, this.controller));\n            currPoint.yTop += SurveyHelper.EPSILON;\n            rowsFlats.push(new CompositeBrick());\n        }\n    }\n\n    private async getImagePreviewContentWidth(item: { name: string, type: string, content: string, imageSize?: ISize }) {\n        return Math.max(item.imageSize.width, FlatFile.TEXT_MIN_SCALE * this.controller.unitWidth);\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const previewValue = this.question.showPreview ? this.question.previewValue : this.question.value;\n        if (!previewValue || previewValue.length === 0) {\n            return [await SurveyHelper.createTextFlat(point, this.question,\n                this.controller, this.question.noFileChosenCaption, TextBrick)];\n        }\n        const rowsFlats: CompositeBrick[] = [new CompositeBrick()];\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        let yBot: number = currPoint.yTop;\n        for (let i: number = 0; i < previewValue.length; i++) {\n            let item: { name: string, type: string, content: string, imageSize?: ISize } = { ...previewValue[i] };\n            const canPreviewImage = SurveyHelper.canPreviewImage(this.question, item, item.content);\n            if (canPreviewImage) {\n                item.imageSize = await SurveyHelper.getCorrectedImageSize(this.controller, { imageWidth: this.question.imageWidth, imageHeight: this.question.imageHeight, imageLink: previewValue[i].content, defaultImageWidth: 200, defaultImageHeight: 150 });\n            }\n            const availableWidth: number = this.controller.paperWidth -\n                this.controller.margins.right - currPoint.xLeft;\n            if (canPreviewImage) {\n                const compositeWidth = await this.getImagePreviewContentWidth(item);\n                if (availableWidth < compositeWidth) {\n                    currPoint.xLeft = point.xLeft;\n                    currPoint.yTop = yBot;\n                    this.addLine(rowsFlats, currPoint, i, previewValue);\n                }\n                this.controller.pushMargins(currPoint.xLeft,\n                    this.controller.paperWidth - currPoint.xLeft - compositeWidth);\n                const itemFlat: IPdfBrick = await this.generateFlatItem(currPoint, item);\n                rowsFlats[rowsFlats.length - 1].addBrick(itemFlat);\n                currPoint.xLeft += itemFlat.width;\n                yBot = Math.max(yBot, itemFlat.yBot);\n                this.controller.popMargins();\n            }\n            else {\n                if (availableWidth < this.controller.unitWidth) {\n                    currPoint.xLeft = point.xLeft;\n                    currPoint.yTop = yBot;\n                    this.addLine(rowsFlats, currPoint, i, previewValue);\n                }\n                const itemFlat: IPdfBrick = await this.generateFlatItem(currPoint, item);\n                rowsFlats[rowsFlats.length - 1].addBrick(itemFlat);\n                currPoint.xLeft += itemFlat.xRight - itemFlat.xLeft;\n                yBot = Math.max(yBot, itemFlat.yBot);\n            }\n            currPoint.xLeft += this.controller.unitWidth;\n        }\n        return rowsFlats;\n    }\n}\n\nFlatRepository.getInstance().register('file', FlatFile);","import { IQuestion, QuestionHtmlModel, Serializer } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\nimport { EmptyBrick } from '../pdf_render/pdf_empty';\n\nexport type IHTMLRenderType = 'auto' | 'standard' | 'image';\nexport class FlatHTML extends FlatQuestion {\n    protected question: QuestionHtmlModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, controller: DocController) {\n        super(survey, question, controller);\n    }\n    private chooseRender(html: string): IHTMLRenderType {\n        if (/<[^>]*style[^<]*>/.test(html) ||\n            /<[^>]*table[^<]*>/.test(html) ||\n            /&\\w+;/.test(html)) {\n            return 'image';\n        }\n        return 'standard';\n    }\n\n    private static correctHtmlRules: [{ searchRegExp: RegExp, replaceString: string }] = [\n        { searchRegExp: /(<\\/?br\\s*?\\/?\\s*?>\\s*){2,}/g, replaceString: '<br>' }\n    ]\n    protected correctHtml(html: string): string {\n        FlatHTML.correctHtmlRules.forEach((rule) => {\n            html = html.replace(rule.searchRegExp, rule.replaceString);\n        });\n        return html;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        let renderAs: IHTMLRenderType = <IHTMLRenderType>this.question.renderAs;\n        if(!SurveyHelper.hasDocument) {\n            return [new EmptyBrick(SurveyHelper.createRect(point, 0, 0))];\n        }\n        if (renderAs === 'auto') renderAs = this.controller.htmlRenderAs;\n        if (renderAs === 'auto') renderAs = this.chooseRender(SurveyHelper.getLocString(this.question.locHtml));\n        const html: string = SurveyHelper.createHtmlContainerBlock(SurveyHelper.getLocString(this.question.locHtml), this.controller, renderAs);\n        if (renderAs === 'image') {\n            const width: number = SurveyHelper.getPageAvailableWidth(this.controller);\n            const { url, aspect }: { url: string, aspect: number } =\n            await SurveyHelper.htmlToImage(html, width, this.controller);\n            const height: number = width / aspect;\n            return [await SurveyHelper.createImageFlat(point, this.question, this.controller, { link: url, width, height })];\n        }\n        return [SurveyHelper.splitHtmlRect(this.controller, await SurveyHelper.createHTMLFlat(\n            point, this.question, this.controller, this.correctHtml(html)))];\n    }\n}\n\nSerializer.removeProperty('html', 'renderAs');\nSerializer.addProperty('html', {\n    name: 'renderAs',\n    default: 'auto',\n    visible: false,\n    choices: ['auto', 'standard', 'image']\n});\nFlatRepository.getInstance().register('html', FlatHTML);","import { IQuestion, QuestionImageModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, DocController, ISize } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class FlatImage extends FlatQuestion {\n    protected question: QuestionImageModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionImageModel>question;\n    }\n    private async getCorrectImageSize(): Promise<ISize> {\n        return await SurveyHelper.getCorrectedImageSize(this.controller, { imageWidth: this.question.imageWidth, imageHeight: this.question.imageHeight, imageLink: this.question.imageLink });\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const imageSize = await this.getCorrectImageSize();\n        return [await SurveyHelper.createImageFlat(point, this.question,\n            this.controller, { link: this.question.imageLink, width: imageSize.width, height: imageSize.height })];\n    }\n}\n\nFlatRepository.getInstance().register('image', FlatImage);","import { IQuestion, ItemValue, QuestionImagePickerModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPoint, IRect, DocController } from '../doc_controller';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { FlatRadiogroup } from './flat_radiogroup';\nimport { CheckItemBrick } from '../pdf_render/pdf_checkitem';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class FlatImagePicker extends FlatQuestion {\n    protected question: QuestionImagePickerModel;\n    protected radio: FlatRadiogroup;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionImagePickerModel>question;\n    }\n    private async generateFlatItem(point: IPoint, item: ItemValue, index: number): Promise<IPdfBrick> {\n        const pageAvailableWidth = SurveyHelper.getPageAvailableWidth(this.controller);\n        const imageFlat = await SurveyHelper.createImageFlat(point, this.question, this.controller, { link: (<any>item).imageLink, width: pageAvailableWidth, height: pageAvailableWidth / SurveyHelper.IMAGEPICKER_RATIO });\n        const compositeFlat: CompositeBrick = new CompositeBrick(imageFlat);\n        let buttonPoint: IPoint = SurveyHelper.createPoint(compositeFlat);\n        if (this.question.showLabel) {\n            let labelFlat: IPdfBrick = await SurveyHelper.createTextFlat(buttonPoint, this.question, this.controller, item.text || item.value, TextBrick);\n            compositeFlat.addBrick(labelFlat);\n            buttonPoint = SurveyHelper.createPoint(labelFlat);\n        }\n        const height: number = this.controller.unitHeight;\n        const buttonRect: IRect = SurveyHelper.createRect(buttonPoint, pageAvailableWidth, height);\n        if (this.question.multiSelect) {\n            compositeFlat.addBrick(new CheckItemBrick(this.controller,\n                buttonRect, this.question.id + 'index' + index, { readOnly: this.question.isReadOnly || !item.isEnabled, question: this.question, item: item, checked: this.question.value.indexOf(item.value) !== -1, index: index }));\n        }\n        else {\n            compositeFlat.addBrick(this.radio.generateFlatItem(buttonRect, item, index));\n        }\n        return compositeFlat;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        this.radio = this.question.multiSelect ? null :\n            new FlatRadiogroup(this.survey, this.question, this.controller);\n        const rowsFlats: CompositeBrick[] = [new CompositeBrick()];\n        const colWidth: number = SurveyHelper.getImagePickerAvailableWidth(\n            this.controller) / SurveyHelper.IMAGEPICKER_COUNT;\n        let cols: number = ~~(SurveyHelper.\n            getPageAvailableWidth(this.controller) / colWidth) || 1;\n        const count: number = this.question.visibleChoices.length;\n        cols = cols <= count ? cols : count;\n        const rows: number = ~~(Math.ceil(count / cols));\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        for (let i: number = 0; i < rows; i++) {\n            let yBot: number = currPoint.yTop;\n            this.controller.pushMargins();\n            let currMarginLeft: number = this.controller.margins.left;\n            for (let j: number = 0; j < cols; j++) {\n                const index: number = i * cols + j;\n                if (index == count) break;\n                this.controller.margins.left = currMarginLeft;\n                this.controller.margins.right = this.controller.paperWidth -\n                    currMarginLeft - colWidth;\n                currMarginLeft = this.controller.paperWidth -\n                    this.controller.margins.right + this.controller.unitWidth;\n                currPoint.xLeft = this.controller.margins.left;\n                const itemFlat: IPdfBrick = await this.generateFlatItem(currPoint,\n                    this.question.visibleChoices[index], index);\n                rowsFlats[rowsFlats.length - 1].addBrick(itemFlat);\n                yBot = Math.max(yBot, itemFlat.yBot);\n            }\n            this.controller.popMargins();\n            currPoint.xLeft = point.xLeft;\n            currPoint.yTop = yBot;\n            if (i !== rows - 1) {\n                rowsFlats[rowsFlats.length - 1].addBrick(\n                    SurveyHelper.createRowlineFlat(currPoint, this.controller));\n                currPoint.yTop += SurveyHelper.EPSILON;\n                rowsFlats.push(new CompositeBrick());\n            }\n        }\n        return rowsFlats;\n    }\n}\n\nFlatRepository.getInstance().register('imagepicker', FlatImagePicker);","import { IQuestion, QuestionMatrixModel, MatrixRowModel,\n    QuestionRadiogroupModel, ItemValue, Serializer } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { DocController, IPoint, IRect } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\nimport { RadioGroupWrap, RadioItemBrick } from '../pdf_render/pdf_radioitem';\nimport { CheckItemBrick } from '../pdf_render/pdf_checkitem';\n\nexport class FlatMatrix extends FlatQuestion {\n    public static readonly GAP_BETWEEN_ROWS: number = 0.5;\n    protected question: QuestionMatrixModel;\n    constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, <QuestionRadiogroupModel>question, controller);\n        this.question = <QuestionMatrixModel>question;\n    }\n    protected async generateFlatsHeader(point: IPoint): Promise<IPdfBrick[]> {\n        const headers: IPdfBrick[] = [];\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        if(this.question.hasRows) {\n            currPoint.xLeft += this.rowTitleWidth + this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_COLUMNS;\n        }\n        for (let i: number = 0; i < this.question.visibleColumns.length; i++) {\n            this.controller.pushMargins();\n            this.controller.margins.left = currPoint.xLeft;\n            this.controller.margins.right += (SurveyHelper.getPageAvailableWidth(this.controller) - this.columnWidth);\n            headers.push(await SurveyHelper.createBoldTextFlat(currPoint,\n                this.question, this.controller, this.question.visibleColumns[i].locText));\n            currPoint.xLeft += this.columnWidth + this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_COLUMNS;\n            this.controller.popMargins();\n        }\n        const compositeBrick: CompositeBrick = new CompositeBrick(...headers);\n        return [compositeBrick, SurveyHelper.createRowlineFlat(SurveyHelper.createPoint(compositeBrick), this.controller)];\n    }\n    protected async generateFlatsRows(point: IPoint, isVertical: boolean): Promise<IPdfBrick[]> {\n        const cells: IPdfBrick[] = [];\n        let currPoint: IPoint = SurveyHelper.clone(point);\n        for (let i: number = 0; i < this.question.visibleRows.length; i++) {\n            const key: string = 'row' + i;\n            const flatsRow: IPdfBrick[] = await new FlatMatrixRow(this.survey, this.question, this.controller,\n                this.question.visibleRows[i], i, key, i == 0, isVertical, this.rowTitleWidth, this.columnWidth).generateFlatsContent(currPoint);\n            currPoint = SurveyHelper.createPoint(SurveyHelper.mergeRects(...flatsRow));\n            currPoint.yTop += this.controller.unitHeight * FlatMatrix.GAP_BETWEEN_ROWS;\n            cells.push(...flatsRow);\n        }\n        return cells;\n    }\n    private rowTitleWidth: number;\n    private columnWidth: number;\n    private calculateColumnsWidthes() {\n        const availableWidth = SurveyHelper.getPageAvailableWidth(this.controller);\n        if(this.question.hasRows && this.question.rowTitleWidth) {\n            this.controller.pushMargins();\n            this.rowTitleWidth = SurveyHelper.parseWidth(this.question.rowTitleWidth, availableWidth);\n            this.controller.margins.left += (this.rowTitleWidth + this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_COLUMNS);\n            this.columnWidth = SurveyHelper.getColumnWidth(this.controller, this.question.visibleColumns.length);\n            this.controller.popMargins();\n        } else {\n            this.columnWidth = this.rowTitleWidth = SurveyHelper.getColumnWidth(this.controller, this.question.visibleColumns.length + (this.question.hasRows ? 1 : 0));\n        }\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        this.calculateColumnsWidthes();\n        const isVertical: boolean = this.question.renderAs === 'list' || this.controller.matrixRenderAs === 'list' ||\n            this.columnWidth < this.controller.measureText(SurveyHelper.MATRIX_COLUMN_WIDTH).width;\n        let currPoint: IPoint = SurveyHelper.clone(point);\n        const cells: IPdfBrick[] = [];\n        if (!isVertical && this.question.showHeader && this.question.visibleColumns.length != 0) {\n            let headers: IPdfBrick[] = await this.generateFlatsHeader(currPoint);\n            currPoint = SurveyHelper.createPoint(SurveyHelper.mergeRects(...headers));\n            currPoint.yTop += FlatMatrix.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n            cells.push(...headers);\n        }\n        cells.push(...await this.generateFlatsRows(currPoint, isVertical));\n        return cells;\n    }\n}\n\nexport class FlatMatrixRow {\n    private radioGroupWrap: RadioGroupWrap;\n    public constructor(protected survey: SurveyPDF,\n        protected question: QuestionMatrixModel, protected controller: DocController, private row: MatrixRowModel, private rowIndex: number,\n        private key: string, protected isFirst: boolean = false, protected isVertical: boolean = false, private rowTitleWidth: number, private columnWidth: number) {\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        return this.isVertical ?\n            await this.generateFlatsVerticallyCells(point) :\n            await this.generateFlatsHorizontallyCells(point);\n    }\n\n    protected generateFlatItem(rect: IRect, item: ItemValue,\n        index: number, key: string, context: any = {}) {\n        const fieldName = this.question.id + key;\n        const isChecked: boolean = this.row.isChecked(item);\n        if(this.question.isMultiSelect) {\n            return new CheckItemBrick(this.controller, rect, fieldName + 'index' + index, { question: this.question, index, checked: isChecked, item, readOnly: this.question.isReadOnly });\n        } else {\n            if (index === 0) {\n                this.radioGroupWrap = new RadioGroupWrap(fieldName,\n                    this.controller, { readOnly: this.question.isReadOnly, question: this.question, ...context });\n                (<any>this.question).pdfRadioGroupWrap = this.radioGroupWrap;\n            }\n            else if (typeof this.radioGroupWrap === 'undefined') {\n                this.radioGroupWrap = (<any>this.question).pdfRadioGroupWrap;\n            }\n            return new RadioItemBrick(this.controller, rect,\n                { question: this.question, index: index, checked: isChecked, item: item }, this.radioGroupWrap);\n        }\n    }\n\n    protected async generateTextComposite(point: IPoint, column: ItemValue, index: number): Promise<IPdfBrick> {\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        const itemRect = SurveyHelper.createRect(currPoint,\n            SurveyHelper.getPageAvailableWidth(this.controller), this.controller.unitHeight);\n        const radioFlat: IPdfBrick = this.generateFlatItem(itemRect, column, index, this.key, { row: this.row, rowIndex: this.rowIndex });\n        currPoint.yTop = radioFlat.yBot + this.controller.unitHeight * SurveyHelper.GAP_BETWEEN_ITEM_TEXT;\n        const cellTextFlat = await SurveyHelper.createTextFlat(currPoint, this.question, this.controller,\n            this.question.getCellDisplayLocText(this.row.name, column), TextBrick);\n        return new CompositeBrick(radioFlat, cellTextFlat);\n    }\n    protected async generateItemComposite(point: IPoint, column: ItemValue, index: number): Promise<IPdfBrick> {\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        const itemRect: IRect = SurveyHelper.createRect(currPoint,\n            this.controller.unitHeight, this.controller.unitHeight);\n        const radioFlat: IPdfBrick = this.generateFlatItem(SurveyHelper.moveRect(\n            SurveyHelper.scaleRect(itemRect, SurveyHelper.SELECT_ITEM_FLAT_SCALE), itemRect.xLeft), column, index, this.key, { row: this.row, rowIndex: this.rowIndex });\n        currPoint.xLeft = radioFlat.xRight + this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_ITEM_TEXT;\n        const radioText: IPdfBrick = await SurveyHelper.createTextFlat(currPoint, this.question,\n            this.controller, column.locText, TextBrick);\n        return new CompositeBrick(radioFlat, radioText);\n    }\n    protected async generateFlatsHorizontallyCells(point: IPoint) {\n        const cells: IPdfBrick[] = [];\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        if (this.question.hasRows) {\n            this.controller.pushMargins();\n            currPoint.xLeft = this.controller.margins.left;\n            this.controller.margins.right += (SurveyHelper.getPageAvailableWidth(this.controller) - this.rowTitleWidth);\n            cells.push(await SurveyHelper.createTextFlat(currPoint, this.question, this.controller, this.row.locText, TextBrick));\n            currPoint.xLeft += this.rowTitleWidth + this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_COLUMNS;\n            this.controller.popMargins();\n        }\n        for (let i: number = 0; i < this.question.visibleColumns.length; i++) {\n            const column: ItemValue = this.question.visibleColumns[i];\n            const checked: boolean = this.row.value == column.value;\n            this.controller.pushMargins();\n            this.controller.margins.left = currPoint.xLeft;\n            this.controller.margins.right += (SurveyHelper.getPageAvailableWidth(this.controller) - this.columnWidth);\n            if (this.question.hasCellText) {\n                cells.push(await this.generateTextComposite(currPoint, column, i));\n            }\n            else {\n                const itemRect: IRect = SurveyHelper.createRect(currPoint, this.controller.unitHeight, this.controller.unitHeight);\n                cells.push(this.generateFlatItem(SurveyHelper.moveRect(\n                    SurveyHelper.scaleRect(itemRect, SurveyHelper.SELECT_ITEM_FLAT_SCALE), currPoint.xLeft), column, i, this.key, { row: this.row, rowIndex: this.rowIndex }));\n            }\n            currPoint.xLeft += this.columnWidth + this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_COLUMNS;\n            this.controller.popMargins();\n        }\n        const compositeBrick = new CompositeBrick(...cells);\n        return [compositeBrick, SurveyHelper.createRowlineFlat(SurveyHelper.createPoint(compositeBrick), this.controller)];\n    }\n    protected async generateFlatsVerticallyCells(point: IPoint): Promise<IPdfBrick[]> {\n        const cells: IPdfBrick[] = [];\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        if (this.question.hasRows) {\n            const rowTextFlat = await SurveyHelper.createTextFlat(currPoint, this.question,\n                this.controller, this.row.locText, TextBrick);\n            currPoint.yTop = rowTextFlat.yBot + FlatQuestion.CONTENT_GAP_VERT_SCALE * this.controller.unitHeight;\n            cells.push(rowTextFlat);\n        }\n        cells.push(...await this.generateVerticallyItems(currPoint, this.question.visibleColumns));\n        const compositeBrick: CompositeBrick = new CompositeBrick(...cells);\n        return [compositeBrick, SurveyHelper.createRowlineFlat(SurveyHelper.createPoint(compositeBrick), this.controller)];\n    }\n    protected async generateVerticallyItems(point: IPoint, itemValues: ItemValue[]): Promise<IPdfBrick[]> {\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        const flats: IPdfBrick[] = [];\n        for (let i: number = 0; i < itemValues.length; i++) {\n            const itemFlat: IPdfBrick = await ((this.question.hasCellText) ? this.generateTextComposite : this.generateItemComposite).call(this, currPoint, itemValues[i], i);\n            currPoint.yTop = itemFlat.yBot + SurveyHelper.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n            flats.push(itemFlat);\n        }\n        return flats;\n    }\n}\n\nSerializer.removeProperty('matrix', 'renderAs');\nSerializer.addProperty('matrix', {\n    name: 'renderAs',\n    default: 'auto',\n    visible: false,\n    choices: ['auto', 'list']\n});\nFlatRepository.getInstance().register('matrix', FlatMatrix);","import { IQuestion, Serializer } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { DocController } from '../doc_controller';\nimport { FlatRepository } from './flat_repository';\nimport { FlatMatrixMultiple } from './flat_matrixmultiple';\n\nexport class FlatMatrixDynamic extends FlatMatrixMultiple {\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, controller: DocController) {\n        super(survey, question, controller, false);\n    }\n}\n\nSerializer.removeProperty('matrixdynamic', 'renderAs');\nSerializer.addProperty('matrixdynamic', {\n    name: 'renderAs',\n    default: 'auto',\n    visible: false,\n    choices: ['auto', 'list']\n});\nFlatRepository.getInstance().register('matrixdynamic', FlatMatrixDynamic);","import {\n    IQuestion, QuestionMatrixDropdownModelBase, QuestionMatrixDropdownRenderedTable,\n    QuestionMatrixDropdownRenderedRow, QuestionMatrixDropdownRenderedCell, Serializer, PanelModel, QuestionMatrixDynamicModel,\n    LocalizableString\n} from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, IRect, DocController } from '../doc_controller';\nimport { IFlatQuestion, FlatQuestion } from './flat_question';\nimport { FlatSelectBase } from './flat_selectbase';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\nimport { FlatSurvey } from './flat_survey';\n\nexport class FlatMatrixMultiple extends FlatQuestion {\n    public static readonly GAP_BETWEEN_ROWS: number = 0.5;\n    protected question: QuestionMatrixDropdownModelBase;\n    public constructor(protected survey: SurveyPDF, question: IQuestion, controller: DocController,\n        protected isMultiple: boolean = true) {\n        super(survey, question, controller);\n        this.question = <QuestionMatrixDropdownModelBase>question;\n    }\n    private visibleRowsValue: QuestionMatrixDropdownRenderedRow[];\n    private get visibleRows() {\n        if(!this.visibleRowsValue) {\n            this.visibleRowsValue = this.question.renderedTable.rows.filter(row => row.visible);\n        }\n        return this.visibleRowsValue;\n    }\n    private async generateFlatsCellTitle(point: IPoint, locTitle: LocalizableString): Promise<CompositeBrick> {\n        const composite: CompositeBrick = new CompositeBrick();\n        composite.addBrick(await SurveyHelper.createTextFlat(point,\n            this.question, this.controller, locTitle, TextBrick));\n        return composite;\n    }\n    private async generateFlatsCell(point: IPoint, cell: QuestionMatrixDropdownRenderedCell,\n        location?: 'header' | 'footer', isWide: boolean = true): Promise<CompositeBrick> {\n        const composite: CompositeBrick = new CompositeBrick();\n        if (cell.hasQuestion) {\n            if(location == 'footer' && !cell.question.isAnswered) {}\n            else if (isWide && cell.isChoice) {\n                const flatMultipleColumnsQuestion: IFlatQuestion = FlatRepository.getInstance().create(\n                    this.survey, cell.question, this.controller, cell.question.getType());\n                const itemRect: IRect = SurveyHelper.moveRect(SurveyHelper.scaleRect(\n                    SurveyHelper.createRect(point, this.controller.unitHeight, this.controller.unitHeight),\n                    SurveyHelper.SELECT_ITEM_FLAT_SCALE), point.xLeft);\n                composite.addBrick((<FlatSelectBase>flatMultipleColumnsQuestion)\n                    .generateFlatItem(itemRect, cell.item, cell.choiceIndex));\n            }\n            else {\n                cell.question.titleLocation = SurveyHelper.TITLE_LOCATION_MATRIX;\n                composite.addBrick(...await SurveyHelper.generateQuestionFlats(\n                    this.survey, this.controller, cell.question, point));\n            }\n        }\n        else if (cell.hasTitle) {\n            if (location == 'header') {\n                composite.addBrick(await SurveyHelper.createBoldTextFlat(point,\n                    this.question, this.controller, cell.locTitle));\n            }\n            else {\n                composite.addBrick(await SurveyHelper.createTextFlat(point,\n                    this.question, this.controller, cell.locTitle, TextBrick));\n            }\n        }\n        return composite;\n    }\n    private get hasDetailPanel(): boolean {\n        return this.visibleRows.some((renderedRow) => renderedRow.row && this.question.hasDetailPanel(renderedRow.row));\n    }\n    private ignoreCell(cell: QuestionMatrixDropdownRenderedCell, index: number, location?: 'header' | 'footer', isWide: boolean = true): boolean {\n        if(!isWide && location == 'footer' && cell.hasQuestion && !cell.question.isAnswered) return true;\n        return !(cell.hasQuestion || cell.hasTitle || (this.isMultiple && (this.hasDetailPanel ? index == 1 : index == 0)));\n    }\n    private getRowLocation(row: QuestionMatrixDropdownRenderedRow) {\n        return row === this.question.renderedTable.headerRow ? 'header' : (this.question.renderedTable.footerRow === row ? 'footer' : undefined);\n    }\n    private async generateFlatsRowHorisontal(point: IPoint, row: QuestionMatrixDropdownRenderedRow, columnWidth: number[]): Promise<CompositeBrick> {\n        const composite: CompositeBrick = new CompositeBrick();\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        let lastRightMargin: number = this.controller.paperWidth - this.controller.margins.left +\n            this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_COLUMNS;\n        this.controller.pushMargins();\n        let cnt = 0;\n        const rowLocation = this.getRowLocation(row);\n        for (let i = 0; i < row.cells.length; i++) {\n            if (this.ignoreCell(row.cells[i], i, rowLocation)) continue;\n            this.controller.margins.left = this.controller.paperWidth - lastRightMargin +\n                this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_COLUMNS;\n            this.controller.margins.right = this.controller.paperWidth -\n                this.controller.margins.left - columnWidth[cnt];\n            lastRightMargin = this.controller.margins.right;\n            currPoint.xLeft = this.controller.margins.left;\n            const cellContent: CompositeBrick = await this.generateFlatsCell(\n                currPoint, row.cells[i], rowLocation);\n            if (!cellContent.isEmpty) {\n                composite.addBrick(cellContent);\n            }\n            cnt++;\n        }\n        this.controller.popMargins();\n        return composite;\n    }\n    private async generateFlatsRowVertical(point: IPoint, row: QuestionMatrixDropdownRenderedRow): Promise<CompositeBrick> {\n        const composite: CompositeBrick = new CompositeBrick();\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        const rowLocation = this.getRowLocation(row);\n        for (let i: number = 0; i < row.cells.length; i++) {\n            if (this.ignoreCell(row.cells[i], i, rowLocation, false)) continue;\n            if (this.question.renderedTable.showHeader && (!this.isMultiple || i > 0) && row.cells[i].cell?.column?.locTitle) {\n                composite.addBrick(await this.generateFlatsCellTitle(currPoint, row.cells[i].cell.column.locTitle));\n                currPoint.yTop = composite.yBot + FlatMatrixMultiple.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n            }\n            composite.addBrick(await this.generateFlatsCell(currPoint, row.cells[i], rowLocation, false));\n            currPoint.yTop = composite.yBot + FlatMatrixMultiple.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n        }\n        return composite;\n    }\n    private getAvalableWidth(colCount: number): number {\n        return SurveyHelper.getPageAvailableWidth(this.controller) -\n        (colCount - 1) * this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_COLUMNS;\n    }\n    private calculateColumnWidth(rows: QuestionMatrixDropdownRenderedRow[], colCount: number): number[] {\n        const availableWidth: number = this.getAvalableWidth(colCount);\n        let remainWidth: number = availableWidth;\n        let remainColCount: number = colCount;\n        const columnWidth: number[] = [];\n        const unsetCells: QuestionMatrixDropdownRenderedCell[] = [];\n        let cells = rows[0].cells.filter((cell: QuestionMatrixDropdownRenderedCell, index: number) => !this.ignoreCell(cell, index));\n        for (let i: number = 0; i < colCount; i++) {\n            const width: number = SurveyHelper.parseWidth(cells[i].width,\n                availableWidth, colCount) || 0.0;\n            remainWidth -= width;\n            if (width !== 0.0) {\n                remainColCount--;\n            } else {\n                unsetCells.push(cells[i]);\n            }\n            columnWidth.push(width);\n        }\n        if (remainColCount === 0) return columnWidth;\n        const heuristicWidth: number = this.controller.measureText(SurveyHelper.MATRIX_COLUMN_WIDTH).width;\n        unsetCells.sort((cell1: QuestionMatrixDropdownRenderedCell, cell2: QuestionMatrixDropdownRenderedCell) => {\n            let minWidth1 = SurveyHelper.parseWidth(cell1.minWidth, availableWidth, colCount) || 0.0;\n            let minWidth2 = SurveyHelper.parseWidth(cell2.minWidth, availableWidth, colCount) || 0.0;\n            return minWidth2 > minWidth1 ? 1 : -1;\n        }).forEach((cell: QuestionMatrixDropdownRenderedCell) => {\n            const equalWidth: number = remainWidth / remainColCount;\n            const columnMinWidth: number = SurveyHelper.parseWidth(cell.minWidth, availableWidth, colCount) || 0.0;\n            if(columnMinWidth > equalWidth && columnMinWidth > heuristicWidth) {\n                remainWidth -= columnMinWidth;\n                remainColCount--;\n            }\n            columnWidth[cells.indexOf(cell)] = Math.max(heuristicWidth, columnMinWidth, equalWidth);\n        });\n        return columnWidth;\n    }\n    private async generateOneRow(point: IPoint, row: QuestionMatrixDropdownRenderedRow, isWide: boolean, columnWidth: number[]): Promise<CompositeBrick> {\n        if (isWide) {\n            return await this.generateFlatsRowHorisontal(point, row, columnWidth);\n        }\n        return await this.generateFlatsRowVertical(point, row);\n    }\n    private async generateFlatsRows(point: IPoint, rows: QuestionMatrixDropdownRenderedRow[],\n        colCount: number, isWide: boolean): Promise<CompositeBrick[]> {\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        const rowsFlats: CompositeBrick[] = [];\n        for (let i: number = 0; i < rows.length; i++) {\n            let rowFlat: CompositeBrick = await this.generateOneRow(currPoint, rows[i],\n                isWide, this.calculateColumnWidth(rows, colCount));\n            if (rowFlat.isEmpty && !(rows[i].row && rows[i].row.hasPanel)) continue;\n            if(!rowFlat.isEmpty) {\n                if (i !== rows.length - 1) {\n                    currPoint.yTop = rowFlat.yBot;\n                    rowFlat.addBrick(SurveyHelper.createRowlineFlat(currPoint, this.controller));\n                }\n                rowsFlats.push(rowFlat);\n                currPoint.yTop = rowFlat.yBot + FlatMatrixMultiple.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n            }\n\n            if (!!rows[i].row && rows[i].row.hasPanel) {\n                rows[i].row.showDetailPanel();\n                const currentDetailPanel: PanelModel = rows[i].row.detailPanel;\n                for (let j = 0; j < currentDetailPanel.questions.length; j++) {\n                    currentDetailPanel.questions[j].id += '_' + i;\n                }\n                const panelBricks: IPdfBrick[] = await FlatSurvey.generateFlatsPanel(\n                    this.survey, this.controller, currentDetailPanel, currPoint);\n\n                const currComposite: CompositeBrick = new CompositeBrick();\n                currComposite.addBrick(...panelBricks);\n                currPoint.yTop = currComposite.yBot + FlatMatrixMultiple.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n\n                rowsFlats.push(currComposite);\n                if (i !== rows.length - 1 && this.question.renderedTable.showHeader && isWide) {\n                    const header: CompositeBrick = await this.generateOneRow(currPoint, rows[0],\n                        isWide, this.calculateColumnWidth(rows, colCount));\n                    let currYTop = currComposite.yBot;\n                    if(!header.isEmpty) {\n                        currYTop = header.yBot;\n                        rowsFlats.push(header);\n                    }\n                    currPoint.yTop = currYTop + FlatMatrixMultiple.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n                }\n            }\n        }\n        return rowsFlats;\n    }\n    private calculateIsWide(table: QuestionMatrixDropdownRenderedTable, colCount: number) {\n        const rows: QuestionMatrixDropdownRenderedRow[] = [];\n        if(table.showHeader) {\n            rows.push(table.headerRow);\n        }\n        rows.push(...this.visibleRows);\n        if(rows.length === 0) return true;\n        const columnWidthSum = this.calculateColumnWidth(rows, colCount).reduce((widthSum: number, width: number) => widthSum += width, 0);\n        return this.question.renderAs !== 'list' && this.controller.matrixRenderAs !== 'list' && Math.floor(columnWidthSum) <= Math.floor(this.getAvalableWidth(colCount));\n    }\n    private getRowsToRender(table: QuestionMatrixDropdownRenderedTable, isVertical: boolean, isWide: boolean) {\n        const rows: QuestionMatrixDropdownRenderedRow[] = [];\n        const renderedRows = this.visibleRows;\n        if (table.showHeader && isWide) rows.push(table.headerRow);\n        rows.push(...renderedRows);\n        if (table.hasRemoveRows && isVertical) rows.pop();\n        if (table.showFooter) rows.push(table.footerRow);\n        return rows;\n    }\n    private getColCount(table: QuestionMatrixDropdownRenderedTable, renderedRows: Array<QuestionMatrixDropdownRenderedRow>): number {\n        if (!!renderedRows[0]) {\n            return renderedRows[0].cells.filter((cell: QuestionMatrixDropdownRenderedCell, index: number) => !this.ignoreCell(cell, index)).length;\n        } else {\n            return table.showHeader && table.headerRow ? table.headerRow.cells.length :\n                table.showFooter && table.footerRow ? table.footerRow.cells.length : 0;\n        }\n    }\n\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        let table: QuestionMatrixDropdownRenderedTable = this.question.renderedTable;\n        let isVertical: boolean = this.question.columnLayout === 'vertical';\n        let colCount: number = this.getColCount(table, this.visibleRows);\n        if (colCount === 0 && !this.hasDetailPanel) {\n            return [new CompositeBrick(SurveyHelper.createRowlineFlat(point, this.controller))];\n        }\n        const isWide = this.calculateIsWide(table, colCount);\n        if(!isWide) {\n            this.question.isMobile = true;\n            isVertical = false;\n            table = this.question.renderedTable;\n            this.visibleRowsValue = undefined;\n            colCount = this.getColCount(table, this.visibleRows);\n        }\n        const rows = this.getRowsToRender(table, isVertical, isWide);\n        return await this.generateFlatsRows(point, rows, colCount, isWide);\n    }\n}\n\nSerializer.removeProperty('matrixdropdown', 'renderAs');\nSerializer.addProperty('matrixdropdown', {\n    name: 'renderAs',\n    default: 'auto',\n    visible: false,\n    choices: ['auto', 'list']\n});\nFlatRepository.getInstance().register('matrixdropdown', FlatMatrixMultiple);","import { IQuestion, QuestionMultipleTextModel, MultipleTextItemModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, DocController } from '../doc_controller';\nimport { FlatQuestion, IFlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\nimport { FlatTextbox } from './flat_textbox';\n\nexport class FlatMultipleText extends FlatQuestion {\n    public static readonly ROWS_GAP_SCALE: number = 0.195;\n    protected question: QuestionMultipleTextModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionMultipleTextModel>question;\n    }\n    private getVisibleRows() {\n        return this.question.getRows().filter(row => row.isVisible);\n    }\n    private async generateFlatItem(point: IPoint, row_index: number, col_index: number,\n        item: MultipleTextItemModel): Promise<IPdfBrick> {\n        const colWidth: number = SurveyHelper.getPageAvailableWidth(this.controller);\n        this.controller.pushMargins();\n        this.controller.margins.right = this.controller.paperWidth -\n            this.controller.margins.left - colWidth * SurveyHelper.MULTIPLETEXT_TEXT_PERS;\n        const compositeFlat: CompositeBrick = new CompositeBrick(await SurveyHelper.\n            createBoldTextFlat(point, this.question, this.controller, item.locTitle));\n        this.controller.popMargins();\n\n        const flatMultipleTextItemQuestion: IFlatQuestion = FlatRepository.getInstance().create(\n            this.survey, item.editor, this.controller, 'text');\n        const itemPoint: IPoint = SurveyHelper.createTextFieldRect({\n            xLeft: point.xLeft + colWidth * SurveyHelper.MULTIPLETEXT_TEXT_PERS, yTop: point.yTop },\n        this.controller);\n        compositeFlat.addBrick(...await (<FlatTextbox>flatMultipleTextItemQuestion).generateFlatsContent(itemPoint));\n\n        return compositeFlat;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const rowsFlats: CompositeBrick[] = [];\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        const rows = this.getVisibleRows();\n        for (let i: number = 0; i < rows.length; i++) {\n            rowsFlats.push(new CompositeBrick());\n            let yBot: number = currPoint.yTop;\n            this.controller.pushMargins();\n            for (let j: number = 0; j < rows[i].cells.length; j++) {\n                this.controller.pushMargins();\n                SurveyHelper.setColumnMargins(this.controller, this.question.colCount, j);\n                currPoint.xLeft = this.controller.margins.left;\n                const itemFlat: IPdfBrick = await this.generateFlatItem(\n                    currPoint, i, j, rows[i].cells[j].item);\n                rowsFlats[rowsFlats.length - 1].addBrick(itemFlat);\n                yBot = Math.max(yBot, itemFlat.yBot);\n                this.controller.popMargins();\n            }\n            this.controller.popMargins();\n            currPoint.xLeft = point.xLeft;\n            currPoint.yTop = yBot;\n            rowsFlats[rowsFlats.length - 1].addBrick(\n                SurveyHelper.createRowlineFlat(currPoint, this.controller));\n            currPoint.yTop += SurveyHelper.EPSILON;\n            currPoint.yTop += this.controller.unitHeight * FlatMultipleText.ROWS_GAP_SCALE;\n        }\n        return rowsFlats;\n    }\n}\n\nFlatRepository.getInstance().register('multipletext', FlatMultipleText);","import { IQuestion, QuestionPanelDynamicModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, DocController } from '../doc_controller';\nimport { FlatSurvey } from './flat_survey';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class FlatPanelDynamic extends FlatQuestion {\n    protected question: QuestionPanelDynamicModel;\n    public static readonly GAP_BETWEEN_PANELS: number = 0.75;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionPanelDynamicModel>question;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const flats: IPdfBrick[] = [];\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        for (const panel of this.question.panels) {\n            const panelFlats: IPdfBrick[] = await FlatSurvey.generateFlatsPanel(\n                this.survey, this.controller, panel, currPoint);\n            if (panelFlats.length !== 0) {\n                currPoint.yTop = SurveyHelper.mergeRects(...panelFlats).yBot;\n                currPoint.yTop += this.controller.unitHeight * FlatPanelDynamic.GAP_BETWEEN_PANELS;\n                flats.push(...panelFlats);\n            }\n        }\n        return flats;\n    }\n}\n\nFlatRepository.getInstance().register('paneldynamic', FlatPanelDynamic);","import { IQuestion, Question, LocalizableString, Serializer, settings } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, DocController } from '../doc_controller';\nimport { FlatSurvey } from './flat_survey';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\n\nexport interface IFlatQuestion {\n    generateFlatsContent(point: IPoint): Promise<IPdfBrick[]>;\n    generateFlats(point: IPoint): Promise<IPdfBrick[]>;\n}\nexport class FlatQuestion implements IFlatQuestion {\n    public static CONTENT_GAP_VERT_SCALE: number = 0.5;\n    public static CONTENT_GAP_HOR_SCALE: number = 1.0;\n    public static CONTENT_INDENT_SCALE: number = 1.0;\n    public static DESC_GAP_SCALE: number = 0.0625;\n    protected question: Question;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        this.question = <Question>question;\n    }\n    private async generateFlatTitle(point: IPoint): Promise<IPdfBrick> {\n        return await SurveyHelper.createTitleFlat(point,\n            this.question, this.controller);\n    }\n    private async generateFlatDescription(point: IPoint): Promise<IPdfBrick> {\n        return await SurveyHelper.createDescFlat(point, this.question, this.controller, this.question.locDescription);\n    }\n    private async generateFlatHeader(point: IPoint): Promise<CompositeBrick> {\n        const titleFlat: IPdfBrick = await this.generateFlatTitle(point);\n        const compositeFlat: CompositeBrick = new CompositeBrick(titleFlat);\n        if(this.question.hasDescriptionUnderTitle) {\n            const descPoint: IPoint = SurveyHelper.createPoint(titleFlat, true, false);\n            descPoint.yTop += FlatQuestion.DESC_GAP_SCALE * this.controller.unitHeight;\n            descPoint.xLeft += this.controller.unitWidth * FlatQuestion.CONTENT_INDENT_SCALE;\n            compositeFlat.addBrick(await this.generateFlatDescription(descPoint));\n        }\n        return compositeFlat;\n    }\n    private async generateFlatsComment(point: IPoint): Promise<IPdfBrick> {\n        const text: LocalizableString = this.question.locCommentText;\n        const otherTextFlat: IPdfBrick = await SurveyHelper.createTextFlat(\n            point, this.question, this.controller, text, TextBrick);\n        const otherPoint: IPoint = SurveyHelper.createPoint(otherTextFlat);\n        otherPoint.yTop += this.controller.unitHeight * SurveyHelper.GAP_BETWEEN_ROWS;\n        return new CompositeBrick(otherTextFlat, await SurveyHelper.createCommentFlat(\n            otherPoint, this.question, this.controller, {\n                fieldName: this.question.id + '_comment',\n                rows: SurveyHelper.OTHER_ROWS_COUNT,\n                value: this.question.comment !== undefined && this.question.comment !== null ? this.question.comment : '',\n                shouldRenderBorders: settings.readOnlyCommentRenderMode === 'textarea',\n                isReadOnly: this.question.isReadOnly,\n                isMultiline: true,\n                placeholder: ''\n            }));\n    }\n    public async generateFlatsComposite(point: IPoint): Promise<IPdfBrick[]> {\n        const contentPanel = (<any>this.question).contentPanel;\n        if (!!contentPanel) {\n            return await FlatSurvey.generateFlatsPanel(this.survey,\n                this.controller, contentPanel, point);\n        }\n        this.question = SurveyHelper.getContentQuestion(this.question);\n        return await this.generateFlatsContent(point);\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        return null;\n    }\n    public async generateFlatsContentWithOptionalElements(point: IPoint): Promise<IPdfBrick[]> {\n        const flats: Array<IPdfBrick> = [];\n        const contentFlats = await this.generateFlatsComposite(point);\n        flats.push(...contentFlats);\n        const getLatestPoint = (): IPoint => {\n            const res = SurveyHelper.clone(point);\n            if(contentFlats !== null && contentFlats.length !== 0) {\n                res.yTop = SurveyHelper.mergeRects(...flats).yBot + this.controller.unitHeight * SurveyHelper.GAP_BETWEEN_ROWS;\n            }\n            return res;\n        };\n        if (this.question.hasComment) {\n            flats.push(await this.generateFlatsComment(getLatestPoint()));\n        }\n        if (this.question.hasDescriptionUnderInput) {\n            flats.push(await this.generateFlatDescription(getLatestPoint()));\n        }\n\n        return flats;\n    }\n    public async generateFlats(point: IPoint): Promise<IPdfBrick[]> {\n        this.controller.pushMargins();\n        this.controller.margins.left += this.controller.measureText(this.question.indent).width;\n        const indentPoint: IPoint = {\n            xLeft: point.xLeft + this.controller.measureText(this.question.indent).width,\n            yTop: point.yTop\n        };\n        const flats: IPdfBrick[] = [];\n        let titleLocation: string = this.question.getTitleLocation();\n        titleLocation = this.question.hasTitle ? titleLocation : 'hidden';\n        switch (titleLocation) {\n            case 'top':\n            case 'default': {\n                const headerFlat = await this.generateFlatHeader(indentPoint);\n                let contentPoint: IPoint = SurveyHelper.createPoint(headerFlat);\n                contentPoint.xLeft += this.controller.unitWidth * FlatQuestion.CONTENT_INDENT_SCALE;\n                headerFlat.addBrick(SurveyHelper.createRowlineFlat(\n                    SurveyHelper.createPoint(headerFlat), this.controller));\n                contentPoint.yTop += this.controller.unitHeight *\n                    FlatQuestion.CONTENT_GAP_VERT_SCALE + SurveyHelper.EPSILON;\n                this.controller.pushMargins();\n                this.controller.margins.left += this.controller.unitWidth * FlatQuestion.CONTENT_INDENT_SCALE;\n                const contentFlats: IPdfBrick[] = await this.generateFlatsContentWithOptionalElements(contentPoint);\n                this.controller.popMargins();\n                if(contentFlats !== null && contentFlats.length !== 0) {\n                    headerFlat.addBrick(contentFlats.shift());\n                }\n                flats.push(headerFlat);\n                flats.push(...contentFlats);\n                break;\n            }\n            case 'bottom': {\n                const contentPoint: IPoint = SurveyHelper.clone(indentPoint);\n                this.controller.pushMargins();\n                contentPoint.xLeft += this.controller.unitWidth * FlatQuestion.CONTENT_INDENT_SCALE;\n                this.controller.margins.left += this.controller.unitWidth * FlatQuestion.CONTENT_INDENT_SCALE;\n                const contentFlats: IPdfBrick[] = await this.generateFlatsContentWithOptionalElements(contentPoint);\n                this.controller.popMargins();\n                flats.push(...contentFlats);\n                const titlePoint: IPoint = indentPoint;\n                if (flats.length !== 0) {\n                    titlePoint.yTop = flats[flats.length - 1].yBot;\n                }\n                titlePoint.yTop += this.controller.unitHeight * FlatQuestion.CONTENT_GAP_VERT_SCALE;\n                flats.push(await this.generateFlatHeader(titlePoint));\n                break;\n            }\n            case 'left': {\n                this.controller.pushMargins(this.controller.margins.left,\n                    this.controller.paperWidth - this.controller.margins.left -\n                        SurveyHelper.getPageAvailableWidth(this.controller) *\n                            SurveyHelper.MULTIPLETEXT_TEXT_PERS);\n                const headerFlat: CompositeBrick = await this.generateFlatHeader(indentPoint);\n                const contentPoint: IPoint = SurveyHelper.createPoint(headerFlat, false, true);\n                this.controller.popMargins();\n                contentPoint.xLeft += this.controller.unitWidth * FlatQuestion.CONTENT_GAP_HOR_SCALE;\n                this.controller.margins.left = contentPoint.xLeft;\n                const contentFlats: IPdfBrick[] = await this.generateFlatsContentWithOptionalElements(contentPoint);\n                if(contentFlats !== null && contentFlats.length !== 0) {\n                    headerFlat.addBrick(contentFlats.shift());\n                }\n                flats.push(headerFlat);\n                flats.push(...contentFlats);\n                break;\n            }\n            case 'hidden':\n            case SurveyHelper.TITLE_LOCATION_MATRIX:\n            default: {\n                const contentPoint: IPoint = SurveyHelper.clone(indentPoint);\n                this.controller.pushMargins();\n                if (titleLocation !== SurveyHelper.TITLE_LOCATION_MATRIX) {\n                    contentPoint.xLeft += this.controller.unitWidth * FlatQuestion.CONTENT_INDENT_SCALE;\n                    this.controller.margins.left += this.controller.unitWidth * FlatQuestion.CONTENT_INDENT_SCALE;\n                }\n                flats.push(...await this.generateFlatsContentWithOptionalElements(contentPoint));\n                this.controller.popMargins();\n                break;\n            }\n        }\n        this.controller.popMargins();\n        return flats;\n    }\n    protected get shouldRenderAsComment(): boolean {\n        return SurveyHelper.shouldRenderReadOnly(this.question, this.controller);\n    }\n}\n\nSerializer.addProperty('question', {\n    name: 'readonlyRenderAs',\n    default: 'auto',\n    choices: ['auto', 'text', 'acroform'],\n    visible: false\n});","import { IQuestion, ItemValue, QuestionRadiogroupModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IRect, DocController } from '../doc_controller';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { RadioGroupWrap, RadioItemBrick } from '../pdf_render/pdf_radioitem';\nimport { FlatSelectBase } from './flat_selectbase';\n\nexport class FlatRadiogroup extends FlatSelectBase {\n    protected question: QuestionRadiogroupModel;\n    private radioGroupWrap: RadioGroupWrap;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionRadiogroupModel>question;\n    }\n    protected isItemSelected(item: ItemValue, checked?: boolean): boolean {\n        return (typeof checked === 'undefined') ?\n            (item === this.question.otherItem ? this.question.isOtherSelected :\n                (item.value === this.question.value ||\n                    (typeof this.question.isItemSelected !== 'undefined' &&\n                        this.question.isItemSelected(item)))) : checked;\n    }\n    public generateFlatItem(rect: IRect, item: ItemValue,\n        index: number, key?: string, checked?: boolean, context: any = {}): IPdfBrick {\n        if (index === 0) {\n            this.radioGroupWrap = new RadioGroupWrap(this.question.id + ((typeof key === 'undefined') ? '' : key),\n                this.controller, { readOnly: this.question.isReadOnly, question: this.question, ...context });\n            (<any>this.question).pdfRadioGroupWrap = this.radioGroupWrap;\n        }\n        else if (typeof this.radioGroupWrap === 'undefined') {\n            this.radioGroupWrap = (<any>this.question).pdfRadioGroupWrap;\n        }\n        const isChecked: boolean = this.isItemSelected(item, checked);\n        return new RadioItemBrick(this.controller, rect,\n            { question: this.question, index: index, checked: isChecked, item: item }, this.radioGroupWrap);\n    }\n}\n\nFlatRepository.getInstance().register('radiogroup', FlatRadiogroup);\nFlatRepository.getInstance().register('buttongroup', FlatRadiogroup);","import { IQuestion, ItemValue, QuestionRankingModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, IRect, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { RankingItemBrick } from '../pdf_render/pdf_rankingitem';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\nimport { ColoredBrick } from '../pdf_render/pdf_coloredbrick';\n\nexport class FlatRanking extends FlatQuestion {\n    protected question: QuestionRankingModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionRankingModel>question;\n    }\n    protected async generateFlatComposite(point: IPoint, item: ItemValue, index: number, unrankedItem: boolean = false): Promise<IPdfBrick> {\n        const itemRect: IRect = SurveyHelper.createRect(point,\n            this.controller.unitWidth, this.controller.unitHeight);\n        const itemScaledRect: IRect = SurveyHelper.moveRect(SurveyHelper.scaleRect(\n            itemRect, SurveyHelper.SELECT_ITEM_FLAT_SCALE), point.xLeft);\n        const itemFlat: IPdfBrick = new RankingItemBrick(this.question, this.controller,\n            itemScaledRect, unrankedItem ? '-' : this.question.getNumberByIndex(index));\n        const textPoint: IPoint = SurveyHelper.clone(point);\n        textPoint.xLeft = itemFlat.xRight + this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_ITEM_TEXT;\n        const textFlat: IPdfBrick = await SurveyHelper.createTextFlat(\n            textPoint, this.question, this.controller, item.locText, TextBrick);\n        return new CompositeBrick(itemFlat, textFlat);\n    }\n    public async generateChoicesColumn(point: IPoint, choices: ItemValue[], unrankedChoices: boolean = false): Promise<IPdfBrick[]> {\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        const flats: IPdfBrick[] = [];\n        for (let i: number = 0; i < choices.length; i++) {\n            const itemFlat: IPdfBrick = await this.generateFlatComposite(currPoint, choices[i], i, unrankedChoices);\n            currPoint.yTop = itemFlat.yBot + SurveyHelper.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n            flats.push(itemFlat);\n        }\n        return flats;\n    }\n    public async generateSelectToRankItemsVertically(point: IPoint): Promise<IPdfBrick[]> {\n        const currPoint = SurveyHelper.clone(point);\n        const flats: IPdfBrick[] = [];\n        if(this.question.rankingChoices.length !== 0) {\n            flats.push(...await this.generateChoicesColumn(currPoint, this.question.rankingChoices));\n            currPoint.yTop = flats[flats.length - 1].yBot + 2 * (SurveyHelper.GAP_BETWEEN_ROWS * this.controller.unitHeight);\n        }\n        const separatorRect = SurveyHelper.createRect({\n            xLeft: currPoint.xLeft,\n            yTop: currPoint.yTop - (SurveyHelper.GAP_BETWEEN_ROWS * this.controller.unitHeight) - 0.5,\n        }, this.controller.paperWidth - this.controller.margins.right - currPoint.xLeft, 1);\n        flats.push(new ColoredBrick(this.controller, separatorRect, SurveyHelper.FORM_BORDER_COLOR));\n\n        flats.push(...await this.generateChoicesColumn(currPoint, this.question.unRankingChoices, true));\n        return flats;\n    }\n    public async generateSelectToRankItemsHorizontally(point: IPoint): Promise<IPdfBrick[]> {\n        const colCount = 2;\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        const flats: IPdfBrick[] = [];\n        const rowsCount = Math.max(this.question.unRankingChoices.length, this.question.rankingChoices.length);\n        let row: CompositeBrick = new CompositeBrick();\n        for (let i: number = 0; i < rowsCount; i++) {\n            let colIndex = 0;\n            for (let item of [this.question.unRankingChoices[i], this.question.rankingChoices[i]]) {\n                if(!!item) {\n                    this.controller.pushMargins(this.controller.margins.left, this.controller.margins.right);\n                    SurveyHelper.setColumnMargins(this.controller, colCount, colIndex);\n                    currPoint.xLeft = this.controller.margins.left;\n                    const itemFlat: IPdfBrick = await this.generateFlatComposite(\n                        currPoint, item, i, colIndex == 0);\n                    row.addBrick(itemFlat);\n                    this.controller.popMargins();\n                }\n                colIndex++;\n            }\n            const rowLineFlat: IPdfBrick = SurveyHelper.createRowlineFlat(\n                SurveyHelper.createPoint(row), this.controller);\n            flats.push(row, rowLineFlat);\n            const separatorRect = SurveyHelper.createRect({\n                xLeft: this.controller.margins.left + SurveyHelper.getPageAvailableWidth(this.controller) / 2 - 0.5,\n                yTop: currPoint.yTop,\n            }, 0, 0);\n            row.addBrick(new ColoredBrick(this.controller, separatorRect, SurveyHelper.FORM_BORDER_COLOR, 1, rowLineFlat.yBot - currPoint.yTop + (i !== rowsCount - 1 ?\n                SurveyHelper.GAP_BETWEEN_ROWS * this.controller.unitHeight : 0)));\n\n            currPoint.yTop = rowLineFlat.yBot +\n                SurveyHelper.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n            row = new CompositeBrick();\n        }\n        return flats;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        if(!this.question.selectToRankEnabled) {\n            return this.generateChoicesColumn(point, this.question.rankingChoices);\n        }\n        else if(this.question.selectToRankAreasLayout == 'vertical') {\n            return this.generateSelectToRankItemsVertically(point);\n        }\n        else {\n            return this.generateSelectToRankItemsHorizontally(point);\n        }\n    }\n}\n\nFlatRepository.getInstance().register('ranking', FlatRanking);","import { IQuestion, ItemValue, QuestionRatingModel, LocalizableString } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, IRect, DocController } from '../doc_controller';\nimport { FlatRadiogroup } from './flat_radiogroup';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class FlatRating extends FlatRadiogroup {\n    protected questionRating: QuestionRatingModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.questionRating = <QuestionRatingModel>question;\n    }\n    protected async generateFlatHorisontalComposite(point: IPoint, item: ItemValue, index: number): Promise<IPdfBrick> {\n        const itemText: LocalizableString = SurveyHelper.getRatingItemText(\n            this.questionRating, index, item.locText);\n        this.controller.pushMargins();\n        const halfWidth: number = this.controller.unitWidth / 2.0;\n        this.controller.margins.left += halfWidth;\n        this.controller.margins.right += halfWidth;\n        const textPoint: IPoint = SurveyHelper.clone(point);\n        textPoint.xLeft += halfWidth;\n        const compositeFlat: CompositeBrick = new CompositeBrick(await SurveyHelper.\n            createBoldTextFlat(textPoint, this.questionRating, this.controller, itemText));\n        this.controller.popMargins();\n        let textWidth: number = compositeFlat.width;\n        if (textWidth < SurveyHelper.getRatingMinWidth(this.controller)) {\n            compositeFlat.xLeft += (SurveyHelper.getRatingMinWidth(\n                this.controller) - textWidth) / 2.0 - halfWidth;\n            textWidth = SurveyHelper.getRatingMinWidth(this.controller);\n        }\n        else {\n            textWidth += this.controller.unitWidth;\n        }\n        const radioPoint: IPoint = SurveyHelper.createPoint(compositeFlat);\n        radioPoint.xLeft = point.xLeft;\n        compositeFlat.addBrick(this.generateFlatItem(SurveyHelper.createRect(\n            radioPoint, textWidth, this.controller.unitHeight), item, index, undefined, this.question.value == item.value));\n        return compositeFlat;\n    }\n    protected async generateFlatComposite(point: IPoint, item: ItemValue, index: number): Promise<IPdfBrick> {\n        const compositeFlat: CompositeBrick = new CompositeBrick();\n        const itemRect: IRect = SurveyHelper.createRect(point,\n            this.controller.unitHeight, this.controller.unitHeight);\n        const itemFlat: IPdfBrick = this.generateFlatItem(SurveyHelper.moveRect(\n            SurveyHelper.scaleRect(itemRect, SurveyHelper.SELECT_ITEM_FLAT_SCALE),\n            point.xLeft), item, index, undefined, this.question.value == item.value);\n        compositeFlat.addBrick(itemFlat);\n        const textPoint: IPoint = SurveyHelper.clone(point);\n        textPoint.xLeft = itemFlat.xRight + this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_ITEM_TEXT;\n        const itemText: LocalizableString = SurveyHelper.getRatingItemText(this.questionRating, index, item.locText);\n        itemText == null || compositeFlat.addBrick(await SurveyHelper.createTextFlat(\n            textPoint, this.question, this.controller, itemText, TextBrick));\n        return compositeFlat;\n    }\n    protected async generateHorisontallyItems(point: IPoint) {\n        const rowsFlats: CompositeBrick[] = [new CompositeBrick()];\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        for (let i: number = 0; i < this.questionRating.visibleRateValues.length; i++) {\n            const itemFlat: IPdfBrick = await this.generateFlatHorisontalComposite(currPoint,\n                this.questionRating.visibleRateValues[i], i);\n            rowsFlats[rowsFlats.length - 1].addBrick(itemFlat);\n            const leftWidth: number = this.controller.paperWidth -\n                this.controller.margins.right - itemFlat.xRight;\n            if (SurveyHelper.getRatingMinWidth(this.controller) <= leftWidth + SurveyHelper.EPSILON) {\n                currPoint.xLeft = itemFlat.xRight;\n            }\n            else {\n                currPoint.xLeft = point.xLeft;\n                currPoint.yTop = itemFlat.yBot;\n                if (i !== this.questionRating.visibleRateValues.length - 1) {\n                    rowsFlats[rowsFlats.length - 1].addBrick(\n                        SurveyHelper.createRowlineFlat(currPoint, this.controller));\n                    currPoint.yTop += SurveyHelper.EPSILON;\n                    rowsFlats.push(new CompositeBrick());\n                }\n            }\n        }\n        return rowsFlats;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        let isVertical: boolean = false;\n        for (let i: number = 0; i < this.questionRating.visibleRateValues.length; i++) {\n            const itemText: LocalizableString = SurveyHelper.getRatingItemText(\n                this.questionRating, i, this.questionRating.visibleRateValues[i].locText);\n            if (this.controller.measureText(itemText).width > this.controller.measureText(SurveyHelper.RATING_COLUMN_WIDTH).width) {\n                isVertical = true;\n            }\n        }\n        return isVertical ? this.generateVerticallyItems(point, this.questionRating.visibleRateValues) : this.generateHorisontallyItems(point);\n    }\n}\n\nFlatRepository.getInstance().register('rating', FlatRating);","import { IQuestion, Question } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { DocController } from '../doc_controller';\nimport { IFlatQuestion, FlatQuestion } from './flat_question';\nimport { FlatQuestionDefault } from './flat_default';\n\nexport type FlatConstructor = new (\n    survey: SurveyPDF,\n    question: IQuestion,\n    controller: DocController\n) => IFlatQuestion;\nexport class FlatRepository {\n    private questions: { [index: string]: FlatConstructor } = {};\n    private static instance: FlatRepository = new FlatRepository();\n    public static getInstance(): FlatRepository {\n        return FlatRepository.instance;\n    }\n    public register(modelType: string, rendererConstructor: FlatConstructor): void {\n        this.questions[modelType] = rendererConstructor;\n    }\n    public isTypeRegistered(type: string): boolean {\n        return !!this.questions[type];\n    }\n    public getRenderer(type: string): FlatConstructor {\n        return this.questions[type];\n    }\n    public create(survey: SurveyPDF, question: Question,\n        docController: DocController, type?: string): IFlatQuestion {\n        const questionType: string = typeof type === 'undefined' ? question.getType() : type;\n        let rendererConstructor = this.getRenderer(questionType);\n        if(!rendererConstructor) {\n            if(!!question.customWidget?.pdfRender) {\n                rendererConstructor = FlatQuestion;\n            } else {\n                rendererConstructor = FlatQuestionDefault;\n            }\n        }\n        return new rendererConstructor(survey, question, docController);\n    }\n    public static register(type: string, rendererConstructor: FlatConstructor): void {\n        this.getInstance().register(type, rendererConstructor);\n    }\n    public static getRenderer(type: string): FlatConstructor {\n        return this.getInstance().getRenderer(type);\n    }\n}","import { IQuestion, ItemValue, QuestionCheckboxBase, settings } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, IRect, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { TextBrick } from '../pdf_render/pdf_text';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { SurveyHelper } from '../helper_survey';\nimport { ChoiceItem } from 'survey-core/typings/src/question_baseselect';\n\nexport abstract class FlatSelectBase extends FlatQuestion {\n    protected question: QuestionCheckboxBase;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionCheckboxBase>question;\n    }\n    public abstract generateFlatItem(rect: IRect, item: ItemValue, index: number): IPdfBrick;\n    protected async generateItemComment(point: IPoint, item: ItemValue) {\n        const commentModel = this.question.getCommentTextAreaModel(item);\n        return await SurveyHelper.createCommentFlat(\n            point, this.question, this.controller, {\n                fieldName: commentModel.id,\n                rows: SurveyHelper.OTHER_ROWS_COUNT,\n                value: commentModel.getTextValue(),\n                shouldRenderBorders: settings.readOnlyCommentRenderMode === 'textarea',\n                isReadOnly: this.question.isReadOnly,\n                isMultiline: true,\n            });\n    }\n    protected async generateFlatComposite(point: IPoint, item: ItemValue | ChoiceItem, index: number): Promise<IPdfBrick> {\n        const compositeFlat: CompositeBrick = new CompositeBrick();\n        const itemRect: IRect = SurveyHelper.createRect(point,\n            this.controller.unitWidth, this.controller.unitHeight);\n        const itemFlat: IPdfBrick = this.generateFlatItem(SurveyHelper.moveRect(\n            SurveyHelper.scaleRect(itemRect, SurveyHelper.SELECT_ITEM_FLAT_SCALE),\n            point.xLeft), item, index);\n\n        compositeFlat.addBrick(itemFlat);\n        const textPoint: IPoint = SurveyHelper.clone(point);\n        textPoint.xLeft = itemFlat.xRight + this.controller.unitWidth * SurveyHelper.GAP_BETWEEN_ITEM_TEXT;\n        if (item.locText.renderedHtml !== null) {\n            compositeFlat.addBrick(await SurveyHelper.createTextFlat(\n                textPoint, this.question, this.controller, item.locText, TextBrick));\n        }\n        if(item.isCommentShowing) {\n            const otherPoint: IPoint = SurveyHelper.createPoint(compositeFlat, true, false);\n            otherPoint.yTop += this.controller.unitHeight * SurveyHelper.GAP_BETWEEN_ROWS;\n            compositeFlat.addBrick(await this.generateItemComment(otherPoint, item));\n        }\n        return compositeFlat;\n    }\n    protected getVisibleChoices(): Array<ItemValue> {\n        return this.question.visibleChoices;\n    }\n    protected getColCount(): number {\n        return this.question.colCount;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const colCount = this.getColCount();\n        const visibleChoices = this.getVisibleChoices();\n        let currentColCount: number = colCount;\n        if (colCount == 0) {\n            currentColCount = Math.floor(SurveyHelper.getPageAvailableWidth(this.controller)\n                / this.controller.measureText(SurveyHelper.MATRIX_COLUMN_WIDTH).width) || 1;\n            if (visibleChoices.length < currentColCount) {\n                currentColCount = visibleChoices.length;\n            }\n        }\n        else if (colCount > 1) {\n            currentColCount = (SurveyHelper.getColumnWidth(this.controller, colCount) <\n                this.controller.measureText(SurveyHelper.MATRIX_COLUMN_WIDTH).width) ? 1 : colCount;\n            if(currentColCount == colCount) {\n                return await this.generateColumns(point);\n            }\n        }\n        return (currentColCount == 1) ? await this.generateVerticallyItems(point, visibleChoices) :\n            await this.generateHorisontallyItems(point, currentColCount);\n\n    }\n\n    protected async generateRows(point: IPoint, rows: Array<Array<ItemValue>>) {\n        const visibleChoices = this.getVisibleChoices();\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        const colCount = (rows[0] ?? []).length;\n        const flats: IPdfBrick[] = [];\n        for (let row of rows) {\n            const rowFlat: CompositeBrick = new CompositeBrick();\n            for (let colIndex = 0; colIndex < row.length; colIndex ++) {\n                const item = row[colIndex];\n                this.controller.pushMargins();\n                SurveyHelper.setColumnMargins(this.controller, colCount, colIndex);\n                currPoint.xLeft = this.controller.margins.left;\n                const itemFlat: IPdfBrick = await this.generateFlatComposite(\n                    currPoint, item, visibleChoices.indexOf(item));\n                rowFlat.addBrick(itemFlat);\n                this.controller.popMargins();\n            }\n            const rowLineFlat: IPdfBrick = SurveyHelper.createRowlineFlat(\n                SurveyHelper.createPoint(rowFlat), this.controller);\n            currPoint.yTop = rowLineFlat.yBot +\n                    SurveyHelper.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n            flats.push(rowFlat, rowLineFlat);\n        }\n        return flats;\n    }\n\n    protected async generateVerticallyItems(point: IPoint, itemValues: ItemValue[]): Promise<IPdfBrick[]> {\n        const currPoint: IPoint = SurveyHelper.clone(point);\n        const flats: IPdfBrick[] = [];\n        for (let i: number = 0; i < itemValues.length; i++) {\n            const itemFlat: IPdfBrick = await this.generateFlatComposite(currPoint, itemValues[i], i);\n            currPoint.yTop = itemFlat.yBot + SurveyHelper.GAP_BETWEEN_ROWS * this.controller.unitHeight;\n            flats.push(itemFlat);\n        }\n        return flats;\n    }\n\n    protected async generateColumns(point: IPoint): Promise<IPdfBrick[]> {\n        const columns = this.question.columns;\n        const rowsCount = columns.reduce((max, column) => Math.max(max, column.length), 0);\n        const rows: Array<Array<ItemValue>> = [];\n        for (let i = 0; i < rowsCount; i++) {\n            const row = [];\n            for (let column of columns) {\n                if(column[i]) {\n                    row.push(column[i]);\n                }\n            }\n            rows.push(row);\n        }\n        return await this.generateRows(point, rows);\n    }\n    protected async generateHorisontallyItems(point: IPoint, colCount: number): Promise<IPdfBrick[]> {\n        const rows: Array<Array<ItemValue>> = [];\n        const visibleChoices = this.getVisibleChoices();\n        visibleChoices.forEach((item, index) => {\n            const rowIndex = Math.floor(index / colCount);\n            const colIndex = index % colCount;\n            if(!rows[rowIndex]) rows[rowIndex] = [];\n            rows[rowIndex][colIndex] = item;\n        });\n        return await this.generateRows(point, rows);\n    }\n}\n","import { IQuestion, QuestionSignaturePadModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPoint, DocController, IRect, ISize } from '../doc_controller';\nimport { IPdfBrick, PdfBrick } from '../pdf_render/pdf_brick';\nimport { IBorderDescription, SurveyHelper } from '../helper_survey';\nimport { EmptyBrick } from '../pdf_render/pdf_empty';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\n\nexport class FlatSignaturePad extends FlatQuestion {\n    protected question: QuestionSignaturePadModel;\n    public static BORDER_STYLE: 'dashed' | 'solid' | 'none' = 'dashed';\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionSignaturePadModel>question;\n    }\n\n    public async generateBackgroundImage(point: IPoint): Promise<IPdfBrick> {\n        return await SurveyHelper.createImageFlat(point, this.question, this.controller, { link: this.question.backgroundImage, width: SurveyHelper.pxToPt(<any>this.question.signatureWidth), height: SurveyHelper.pxToPt(<any>this.question.signatureHeight), objectFit: 'cover' }, true);\n    }\n    private getSignImageUrl() {\n        return this.question.storeDataAsText || !this.question.loadedData ? this.question.value : this.question.loadedData;\n    }\n    public async generateSign(point: IPoint): Promise<IPdfBrick> {\n        const width = SurveyHelper.pxToPt(<any>this.question.signatureWidth);\n        const height = SurveyHelper.pxToPt(<any>this.question.signatureHeight);\n        let brick: PdfBrick;\n        if(this.question.value) {\n            brick = await SurveyHelper.createImageFlat(point,\n                this.question, this.controller, { link: this.getSignImageUrl(),\n                    width: width,\n                    height: height }, false\n            ) as PdfBrick;\n        } else {\n            brick = new EmptyBrick(SurveyHelper.createRect(point, width, height));\n        }\n        if(FlatSignaturePad.BORDER_STYLE !== 'none') {\n            brick.afterRenderCallback = () => {\n                const borderOptions: IBorderDescription = {\n                    height: brick.width,\n                    width: brick.width,\n                    yTop: brick.yTop,\n                    yBot: brick.yBot,\n                    xLeft: brick.xLeft,\n                    xRight: brick.xRight,\n                    formBorderColor: brick.formBorderColor,\n                    rounded: false,\n                    outside: true,\n                    dashStyle: FlatSignaturePad.BORDER_STYLE == 'dashed' ? {\n                        dashArray: [5],\n                        dashPhase: 0\n                    } : undefined\n                };\n                SurveyHelper.renderFlatBorders(this.controller, borderOptions);\n            };\n        }\n\n        return brick;\n    }\n\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const compositeBrick = new CompositeBrick();\n        if(this.question.backgroundImage) {\n            compositeBrick.addBrick(await this.generateBackgroundImage(point));\n        }\n        compositeBrick.addBrick(await this.generateSign(point));\n        return [compositeBrick];\n    }\n}\n\nFlatRepository.getInstance().register('signaturepad', FlatSignaturePad);","import { IQuestion, QuestionSliderModel, QuestionTextModel, settings } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, IRect, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\nimport { ITextFieldBrickOptions, TextFieldBrick } from '../pdf_render/pdf_textfield';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\n\nexport class FlatSlider extends FlatQuestion {\n    protected question: QuestionSliderModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, protected controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionSliderModel>question;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        let currentPoint: IPoint = SurveyHelper.clone(point);\n\n        if (this.question.sliderType === 'single') {\n            const options = this.getOptionsByValue(this.question.value);\n            const inputBrick: IPdfBrick = await this.generateInputBrick(currentPoint, options);\n            return [inputBrick];\n        }\n\n        if (this.question.sliderType === 'range') {\n            const compositeBrick: CompositeBrick = new CompositeBrick();\n            for (let i = 0; i < this.question.value.length; i++) {\n                const valueItem = this.question.value[i];\n                const options = this.getOptionsByValue(valueItem);\n                const columnInput = await this.generateColumnInput(currentPoint, options, 2, i);\n                compositeBrick.addBrick(columnInput);\n            }\n            return [compositeBrick];\n        }\n    }\n    private getOptionsByValue(value: string):ITextFieldBrickOptions {\n        const { id, isReadOnly } = this.question;\n        return {\n            fieldName: id,\n            inputType: 'number',\n            value,\n            isReadOnly,\n            shouldRenderBorders: true,\n        };\n    }\n\n    private async generateInputBrick(point: IPoint, options:ITextFieldBrickOptions): Promise<IPdfBrick> {\n        if (!this.shouldRenderAsComment) {\n            const rect1: IRect = SurveyHelper.createTextFieldRect(point, this.controller);\n            return new TextFieldBrick(this.question, this.controller, rect1, { ...options });\n        }\n        else {\n            return await SurveyHelper.createCommentFlat(point, this.question, this.controller, { ...options });\n        }\n    }\n\n    private async generateColumnInput(point: IPoint, options:ITextFieldBrickOptions, colCount: number, colNumber: number): Promise<IPdfBrick> {\n        this.controller.pushMargins();\n        SurveyHelper.setColumnMargins(this.controller, colCount, colNumber);\n        const currentPoint = SurveyHelper.clone(point);\n        currentPoint.xLeft = this.controller.margins.left;\n        const inputBrick = await this.generateInputBrick(currentPoint, options);\n        this.controller.popMargins();\n        return inputBrick;\n    }\n}\n\nFlatRepository.getInstance().register('slider', FlatSlider);","import { IElement, Question, PanelModelBase, PanelModel } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, DocController } from '../doc_controller';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { CompositeBrick } from '../pdf_render/pdf_composite';\nimport { RowlineBrick } from '../pdf_render/pdf_rowline';\nimport { SurveyHelper } from '../helper_survey';\nimport { AdornersPanelOptions, AdornersPageOptions } from '../event_handler/adorners';\nimport { FlatRepository } from '../entries/pdf';\nimport * as SurveyPDFModule from '../entries/pdf';\n\nexport class FlatSurvey {\n    public static QUES_GAP_VERT_SCALE: number = 1.5;\n    public static PANEL_CONT_GAP_SCALE: number = 1.0;\n    public static PANEL_DESC_GAP_SCALE: number = 0.25;\n    public static async generateFlatsPanel(survey: SurveyPDF, controller: DocController,\n        panel: PanelModel, point: IPoint): Promise<IPdfBrick[]> {\n        const panelFlats: IPdfBrick[] = [];\n        const panelContentPoint: IPoint = SurveyHelper.clone(point);\n        controller.pushMargins();\n        controller.margins.left += controller.measureText(panel.innerIndent).width;\n        panelContentPoint.xLeft += controller.measureText(panel.innerIndent).width;\n        panelFlats.push(...await this.generateFlatsPagePanel(survey,\n            controller, panel, panelContentPoint));\n        controller.popMargins();\n        const adornersOptions: AdornersPanelOptions = new AdornersPanelOptions(point,\n            panelFlats, panel, controller, FlatRepository.getInstance(), SurveyPDFModule);\n        await survey.onRenderPanel.fire(survey, adornersOptions);\n        return [...adornersOptions.bricks];\n    }\n    private static async generateFlatsPagePanel(survey: SurveyPDF, controller: DocController,\n        pagePanel: PanelModelBase, point: IPoint): Promise<IPdfBrick[]> {\n        if (!pagePanel.isVisible) return;\n        pagePanel.onFirstRendering();\n        const pagePanelFlats: IPdfBrick[] = [];\n        let currPoint: IPoint = SurveyHelper.clone(point);\n        if (pagePanel.getType() !== 'page' || survey.showPageTitles) {\n            const compositeFlat: CompositeBrick = new CompositeBrick();\n            if (pagePanel.title) {\n                if (pagePanel instanceof PanelModel && pagePanel.no) {\n                    const noFlat: IPdfBrick = await SurveyHelper.createTitlePanelFlat(\n                        currPoint, controller, pagePanel.no, pagePanel.getType() === 'page');\n                    compositeFlat.addBrick(noFlat);\n                    currPoint.xLeft = noFlat.xRight + controller.measureText(' ').width;\n                }\n                const pagelPanelTitleFlat: IPdfBrick = await SurveyHelper.createTitlePanelFlat(\n                    currPoint, controller, pagePanel.locTitle, pagePanel.getType() === 'page');\n                compositeFlat.addBrick(pagelPanelTitleFlat);\n                currPoint = SurveyHelper.createPoint(pagelPanelTitleFlat);\n            }\n            if (pagePanel.description) {\n                if (pagePanel.title) {\n                    currPoint.yTop += controller.unitWidth * FlatSurvey.PANEL_DESC_GAP_SCALE;\n                }\n                const pagePanelDescFlat: IPdfBrick = await SurveyHelper.createDescFlat(\n                    currPoint, null, controller, pagePanel.locDescription);\n                compositeFlat.addBrick(pagePanelDescFlat);\n                currPoint = SurveyHelper.createPoint(pagePanelDescFlat);\n            }\n            if (!compositeFlat.isEmpty) {\n                const rowLinePoint: IPoint = SurveyHelper.createPoint(compositeFlat);\n                compositeFlat.addBrick(SurveyHelper.createRowlineFlat(rowLinePoint, controller));\n                pagePanelFlats.push(compositeFlat);\n                currPoint.yTop += controller.unitHeight * FlatSurvey.PANEL_CONT_GAP_SCALE + SurveyHelper.EPSILON;\n            }\n        }\n        for (const row of pagePanel.rows) {\n            if (!row.visible) continue;\n            controller.pushMargins();\n            const width: number = SurveyHelper.getPageAvailableWidth(controller);\n            let nextMarginLeft: number = controller.margins.left;\n            const rowFlats: IPdfBrick[] = [];\n            const visibleElements = row.elements.filter(el => el.isVisible);\n            for (let i: number = 0; i < visibleElements.length; i++) {\n                let element: IElement = visibleElements[i];\n                if (!element.isVisible) continue;\n                const persWidth: number = SurveyHelper.parseWidth(element.renderWidth,\n                    width - (visibleElements.length - 1) * controller.unitWidth,\n                    visibleElements.length);\n                controller.margins.left = nextMarginLeft + ((i !== 0) ? controller.unitWidth : 0);\n                controller.margins.right = controller.paperWidth - controller.margins.left - persWidth;\n                currPoint.xLeft = controller.margins.left;\n                nextMarginLeft = controller.margins.left + persWidth;\n                if (element instanceof PanelModel) {\n                    rowFlats.push(...await this.generateFlatsPanel(\n                        survey, controller, element, currPoint));\n                }\n                else {\n                    await (<Question>element).waitForQuestionIsReady();\n                    rowFlats.push(...await SurveyHelper.generateQuestionFlats(survey,\n                        controller, <Question>element, currPoint));\n                }\n            }\n            controller.popMargins();\n            currPoint.xLeft = controller.margins.left;\n            if (rowFlats.length !== 0) {\n                currPoint.yTop = SurveyHelper.mergeRects(...rowFlats).yBot;\n                currPoint.xLeft = point.xLeft;\n                currPoint.yTop += controller.unitHeight * FlatSurvey.QUES_GAP_VERT_SCALE;\n                pagePanelFlats.push(...rowFlats);\n                pagePanelFlats.push(SurveyHelper.createRowlineFlat(currPoint, controller));\n                currPoint.yTop += SurveyHelper.EPSILON;\n            }\n        }\n        return pagePanelFlats;\n    }\n    private static popRowlines(flats: IPdfBrick[]) {\n        while (flats.length > 0 && flats[flats.length - 1] instanceof RowlineBrick) {\n            flats.pop();\n        }\n    }\n    private static async generateFlatTitle(survey: SurveyPDF, controller: DocController,\n        point: IPoint): Promise<CompositeBrick> {\n        const compositeFlat: CompositeBrick = new CompositeBrick();\n        if (survey.showTitle) {\n            if (survey.title) {\n                const surveyTitleFlat: IPdfBrick = await SurveyHelper.createTitleSurveyFlat(\n                    point, controller, survey.locTitle);\n                compositeFlat.addBrick(surveyTitleFlat);\n                point = SurveyHelper.createPoint(surveyTitleFlat);\n            }\n            if (survey.description) {\n                if (survey.title) {\n                    point.yTop += controller.unitWidth * FlatSurvey.PANEL_DESC_GAP_SCALE;\n                }\n                compositeFlat.addBrick(await SurveyHelper.createDescFlat(\n                    point, null, controller, survey.locDescription));\n            }\n        }\n        return compositeFlat;\n    }\n    private static async generateFlatLogoImage(survey: SurveyPDF, controller: DocController,\n        point: IPoint): Promise<IPdfBrick> {\n        const logoUrl = SurveyHelper.getLocString(survey.locLogo);\n        const logoSize = await SurveyHelper.getCorrectedImageSize(controller, { imageLink: logoUrl, imageHeight: survey.logoHeight, imageWidth: survey.logoWidth, defaultImageWidth: '300px', defaultImageHeight: '200px' });\n        const logoFlat: IPdfBrick = await SurveyHelper.createImageFlat(\n            point, null, controller, { link: logoUrl,\n                width: logoSize.width, height: logoSize.height });\n        let shift: number = 0;\n        if (survey.logoPosition === 'right') {\n            shift = SurveyHelper.getPageAvailableWidth(controller) - logoFlat.width;\n        }\n        else if (survey.logoPosition !== 'left') {\n            shift = SurveyHelper.getPageAvailableWidth(controller) / 2.0 - logoFlat.width / 2.0;\n        }\n        logoFlat.xLeft += shift;\n        logoFlat.xRight += shift;\n        return logoFlat;\n    }\n    public static async generateFlats(survey: SurveyPDF, controller: DocController): Promise<IPdfBrick[][]> {\n        const flats: IPdfBrick[][] = [];\n        if (!survey.hasLogo) {\n            const titleFlat: CompositeBrick = await this.generateFlatTitle(\n                survey, controller, controller.leftTopPoint);\n            if (!titleFlat.isEmpty) flats.push([titleFlat]);\n        }\n        else if (survey.isLogoBefore) {\n            const logoFlat: IPdfBrick = await this.generateFlatLogoImage(\n                survey, controller, controller.leftTopPoint);\n            flats.push([logoFlat]);\n            const titlePoint: IPoint = SurveyHelper.createPoint(logoFlat,\n                survey.logoPosition === 'top', survey.logoPosition !== 'top');\n            if (survey.logoPosition !== 'top') {\n                controller.pushMargins();\n                titlePoint.xLeft += controller.unitWidth;\n                controller.margins.left += logoFlat.width + controller.unitWidth;\n            }\n            else {\n                titlePoint.xLeft = controller.leftTopPoint.xLeft;\n                titlePoint.yTop += controller.unitHeight / 2.0;\n            }\n            const titleFlat: CompositeBrick = await this.generateFlatTitle(\n                survey, controller, titlePoint);\n            if (survey.logoPosition !== 'top') controller.popMargins();\n            if (!titleFlat.isEmpty) flats[0].push(titleFlat);\n        }\n        else {\n            if (survey.logoPosition === 'right') {\n                const logoFlat: IPdfBrick = await this.generateFlatLogoImage(\n                    survey, controller, controller.leftTopPoint);\n                flats.push([logoFlat]);\n                controller.pushMargins();\n                controller.margins.right += logoFlat.width + controller.unitWidth;\n                const titleFlat: CompositeBrick = await this.generateFlatTitle(\n                    survey, controller, controller.leftTopPoint);\n                if (!titleFlat.isEmpty) flats[0].unshift(titleFlat);\n                controller.popMargins();\n            }\n            else {\n                const titleFlat: CompositeBrick = await this.generateFlatTitle(\n                    survey, controller, controller.leftTopPoint);\n                let logoPoint: IPoint = controller.leftTopPoint;\n                if (!titleFlat.isEmpty) {\n                    flats.push([titleFlat]);\n                    logoPoint = SurveyHelper.createPoint(titleFlat);\n                    logoPoint.yTop += controller.unitHeight / 2.0;\n                }\n                const logoFlat: IPdfBrick = await this.generateFlatLogoImage(\n                    survey, controller, logoPoint);\n                if (flats.length !== 0) flats[0].push(logoFlat);\n                else flats.push([logoFlat]);\n            }\n        }\n        let point: IPoint = controller.leftTopPoint;\n        if (flats.length !== 0) {\n            point.yTop = SurveyHelper.createPoint(SurveyHelper.mergeRects(...flats[0])).yTop;\n            flats[0].push(SurveyHelper.createRowlineFlat(point, controller));\n            point.yTop += controller.unitHeight * FlatSurvey.PANEL_CONT_GAP_SCALE + SurveyHelper.EPSILON;\n        }\n        for (let i: number = 0; i < survey.visiblePages.length; i++) {\n            survey.currentPage = survey.visiblePages[i];\n            let pageFlats: IPdfBrick[] = [];\n            pageFlats.push(...await this.generateFlatsPagePanel(\n                survey, controller, survey.visiblePages[i], point));\n            const adornersOptions: AdornersPageOptions = new AdornersPageOptions(point,\n                pageFlats, survey.visiblePages[i], controller, FlatRepository.getInstance(), SurveyPDFModule);\n            await survey.onRenderPage.fire(survey, adornersOptions);\n            pageFlats = [...adornersOptions.bricks];\n            if (i === 0 && flats.length !== 0) {\n                flats[0].push(...pageFlats);\n            }\n            else flats.push(pageFlats);\n            this.popRowlines(flats[flats.length - 1]);\n            point.yTop = controller.leftTopPoint.yTop;\n        }\n        return flats;\n    }\n}","import { IQuestion, QuestionTextModel, settings } from 'survey-core';\nimport { SurveyPDF } from '../survey';\nimport { IPoint, IRect, DocController } from '../doc_controller';\nimport { FlatQuestion } from './flat_question';\nimport { FlatRepository } from './flat_repository';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\nimport { ITextFieldBrickOptions, TextFieldBrick } from '../pdf_render/pdf_textfield';\n\nexport class FlatTextbox extends FlatQuestion {\n    public static readonly MULTILINE_TEXT_ROWS_COUNT: number = 1;\n    protected question: QuestionTextModel;\n    public constructor(protected survey: SurveyPDF,\n        question: IQuestion, controller: DocController) {\n        super(survey, question, controller);\n        this.question = <QuestionTextModel>question;\n    }\n    public async generateFlatsContent(point: IPoint): Promise<IPdfBrick[]> {\n        const options: Omit<ITextFieldBrickOptions, 'isMultiline'> = {\n            fieldName: this.question.id,\n            inputType: this.question.inputType,\n            value: this.question.inputValue,\n            isReadOnly: this.question.isReadOnly,\n            shouldRenderBorders: settings.readOnlyTextRenderMode === 'input',\n            placeholder: SurveyHelper.getLocString(this.question.locPlaceHolder)\n        };\n        if (!this.shouldRenderAsComment) {\n            const rect: IRect = SurveyHelper.createTextFieldRect(point, this.controller);\n            return [new TextFieldBrick(this.question, this.controller, rect, { ...options })];\n        }\n        return [await SurveyHelper.createCommentFlat(point, this.question,\n            this.controller, { rows: FlatTextbox.MULTILINE_TEXT_ROWS_COUNT, isMultiline: true, ...options })];\n    }\n}\n\nFlatRepository.getInstance().register('text', FlatTextbox);","import { IQuestion, Question, QuestionRatingModel, QuestionFileModel, LocalizableString, QuestionSelectBase, QuestionDropdownModel, settings } from 'survey-core';\nimport * as SurveyPDFModule from './entries/pdf';\nimport { SurveyPDF } from './survey';\nimport { IPoint, IRect, ISize, DocController } from './doc_controller';\nimport { FlatRepository } from './flat_layout/flat_repository';\nimport { IFlatQuestion } from './flat_layout/flat_question';\nimport { IHTMLRenderType } from './flat_layout/flat_html';\nimport { IPdfBrick, PdfBrick } from './pdf_render/pdf_brick';\nimport { TextBrick } from './pdf_render/pdf_text';\nimport { TextBoldBrick } from './pdf_render/pdf_textbold';\nimport { TitlePanelBrick } from './pdf_render/pdf_titlepanel';\nimport { DescriptionBrick } from './pdf_render/pdf_description';\nimport { LinkBrick } from './pdf_render/pdf_link';\nimport { HTMLBrick } from './pdf_render/pdf_html';\nimport { ImageBrick } from './pdf_render/pdf_image';\nimport { EmptyBrick } from './pdf_render/pdf_empty';\nimport { RowlineBrick } from './pdf_render/pdf_rowline';\nimport { CompositeBrick } from './pdf_render/pdf_composite';\nimport { AdornersOptions } from './event_handler/adorners';\nimport { ITextFieldBrickOptions, TextFieldBrick } from './pdf_render/pdf_textfield';\n\nexport type IBorderDescription = IRect & ISize & Pick<PdfBrick, 'formBorderColor'> & { rounded?: boolean, dashStyle?: { dashArray: [number, number] | [number], dashPhase: number }, outside?: boolean };\n\nexport class SurveyHelper {\n    public static EPSILON: number = 2.2204460492503130808472633361816e-15;\n    public static TITLE_SURVEY_FONT_SIZE_SCALE: number = 1.7;\n    public static TITLE_PAGE_FONT_SIZE_SCALE: number = 1.3;\n    public static TITLE_PANEL_FONT_SIZE_SCALE: number = 1.3;\n    public static DESCRIPTION_FONT_SIZE_SCALE: number = 2.0 / 3.0;\n    public static OTHER_ROWS_COUNT: number = 2;\n    public static RATING_MIN_WIDTH: number = 3;\n    public static RATING_MIN_HEIGHT: number = 2;\n    public static RATING_COLUMN_WIDTH: number = 5;\n    public static MATRIX_COLUMN_WIDTH: number = 5;\n    public static IMAGEPICKER_COUNT: number = 4;\n    public static IMAGEPICKER_RATIO: number = 4.0 / 3.0;\n    public static MULTIPLETEXT_TEXT_PERS: number = Math.E / 10.0;\n    public static HTML_TAIL_TEXT_SCALE: number = 0.24;\n    public static SELECT_ITEM_FLAT_SCALE: number = 0.95;\n    public static GAP_BETWEEN_ROWS: number = 0.25;\n    public static GAP_BETWEEN_COLUMNS: number = 1.5;\n    public static GAP_BETWEEN_ITEM_TEXT: number = 0.25;\n    public static FORM_BORDER_VISIBLE: boolean = true;\n    public static BORDER_SCALE: number = 0.1;\n    public static VISIBLE_BORDER_SCALE: number = 0.8;\n    public static UNVISIBLE_BORDER_SCALE: number = 0.2;\n    public static RADIUS_SCALE: number = 3.0;\n    public static TITLE_FONT_SCALE: number = 1.1;\n    public static VALUE_READONLY_PADDING_SCALE: number = 0.3;\n    public static HTML_TO_IMAGE_QUALITY: number = 1.0;\n    public static FORM_BORDER_COLOR: string = '#9f9f9f';\n    public static TEXT_COLOR: string = '#404040';\n    public static BACKGROUND_COLOR: string = '#FFFFFF';\n    public static TITLE_LOCATION_MATRIX: string = 'matrix';\n    public static STANDARD_FONT: string = 'helvetica';\n    public static CUSTOM_FONT_ENCODING: string = 'Identity-H';\n\n    public static parseWidth(width: string, maxWidth: number,\n        columnsCount: number = 1, defaultUnit?: string): number {\n        if (width.indexOf('calc') === 0) {\n            return maxWidth / columnsCount;\n        }\n        const value: number = parseFloat(width);\n        const unit: string = width.replace(/[^A-Za-z%]/g, '') || defaultUnit;\n        let k: number;\n        switch (unit) {\n            case 'pt':\n                k = 1.0;\n                break;\n            case 'mm':\n                k = 72.0 / 25.4;\n                break;\n            case 'cm':\n                k = 72.0 / 2.54;\n                break;\n            case 'in':\n                k = 72.0;\n                break;\n            case 'px':\n                k = 72.0 / 96.0;\n                break;\n            case 'pc':\n                k = 12.0;\n                break;\n            case 'em':\n                k = 12.0;\n                break;\n            case 'ex':\n                k = 6.0;\n                break;\n            default:\n            case '%':\n                k = maxWidth / 100.0;\n                break;\n        }\n        return Math.min(value * k, maxWidth);\n    }\n    public static pxToPt(value: number | string) {\n        if (typeof value === 'string') {\n            if(!isNaN(Number(value))) {\n                value += 'px';\n            }\n            return SurveyHelper.parseWidth(value, Number.MAX_VALUE);\n        }\n        return value * 72.0 / 96.0;\n    }\n    public static mergeRects(...rects: IRect[]): IRect {\n        const resultRect: IRect = {\n            xLeft: rects[0].xLeft,\n            xRight: rects[0].xRight,\n            yTop: rects[0].yTop,\n            yBot: rects[0].yBot\n        };\n        rects.forEach((rect: IRect) => {\n            resultRect.xLeft = Math.min(resultRect.xLeft, rect.xLeft),\n            resultRect.xRight = Math.max(resultRect.xRight, rect.xRight),\n            resultRect.yTop = Math.min(resultRect.yTop, rect.yTop),\n            resultRect.yBot = Math.max(resultRect.yBot, rect.yBot);\n        });\n        return resultRect;\n    }\n    public static createPoint(rect: IRect, isLeft: boolean = true, isTop: boolean = false): IPoint {\n        return {\n            xLeft: isLeft ? rect.xLeft : rect.xRight,\n            yTop: isTop ? rect.yTop : rect.yBot\n        };\n    }\n    public static createRect(point: IPoint, width: number, height: number): IRect {\n        return {\n            xLeft: point.xLeft,\n            xRight: point.xLeft + width,\n            yTop: point.yTop,\n            yBot: point.yTop + height\n        };\n    }\n    public static createHeaderRect(controller: DocController): IRect {\n        return {\n            xLeft: 0.0,\n            xRight: controller.paperWidth,\n            yTop: 0.0,\n            yBot: controller.margins.top\n        };\n    }\n    public static createFooterRect(controller: DocController): IRect {\n        return {\n            xLeft: 0.0,\n            xRight: controller.paperWidth,\n            yTop: controller.paperHeight - controller.margins.bot,\n            yBot: controller.paperHeight\n        };\n    }\n    public static chooseHtmlFont(controller: DocController): string {\n        return controller.useCustomFontInHtml ? controller.fontName : this.STANDARD_FONT;\n    }\n    public static generateCssTextRule(fontSize: number, fontStyle: string, fontName: string): string {\n        return `\"font-size: ${fontSize}pt; font-weight: ${fontStyle}; font-family: ${fontName}; color: ${this.TEXT_COLOR};\"`;\n    }\n    public static createHtmlContainerBlock(html: string, controller: DocController, renderAs: IHTMLRenderType): string {\n        const font = this.chooseHtmlFont(controller);\n        return `<div class=\"__surveypdf_html\" style=${this.generateCssTextRule(\n            controller.fontSize, controller.fontStyle, font)}>` +\n            `<style>.__surveypdf_html p { margin: 0; line-height: ${controller.fontSize}pt } body { margin: 0; }</style>${html}</div>`;\n    }\n    public static splitHtmlRect(controller: DocController, htmlBrick: IPdfBrick): IPdfBrick {\n        const bricks: IPdfBrick[] = [];\n        const htmlHeight: number = htmlBrick.height;\n        const minHeight: number = controller.doc.getFontSize();\n        htmlBrick.yBot = htmlBrick.yTop + minHeight;\n        const emptyBrickCount: number = Math.floor(htmlHeight / minHeight) - 1;\n        bricks.push(htmlBrick);\n        const currPoint: IPoint = this.createPoint(htmlBrick);\n        for (let i: number = 0; i < emptyBrickCount; i++) {\n            bricks.push(new EmptyBrick(this.createRect(currPoint, htmlBrick.width, minHeight)));\n            currPoint.yTop += minHeight;\n        }\n        const remainingHeight: number = htmlHeight - (emptyBrickCount + 1) * minHeight;\n        if (remainingHeight > 0) {\n            bricks.push(new EmptyBrick(this.createRect(currPoint, htmlBrick.width, remainingHeight)));\n        }\n        return new CompositeBrick(...bricks);\n    }\n    public static createPlainTextFlat<T extends IPdfBrick>(point: IPoint, question: IQuestion,\n        controller: DocController, text: string, fabric: new (question: IQuestion,\n            controller: DocController, rect: IRect, text: string) => T): CompositeBrick {\n        const lines: string[] = controller.doc.splitTextToSize(text,\n            controller.paperWidth - controller.margins.right - point.xLeft);\n        const currPoint: IPoint = this.clone(point);\n        const composite: CompositeBrick = new CompositeBrick();\n        lines.forEach((line: string) => {\n            const size: ISize = controller.measureText(line);\n            composite.addBrick(new fabric(question, controller,\n                this.createRect(currPoint, size.width, size.height), line));\n            currPoint.yTop += size.height;\n        });\n        return composite;\n    }\n    public static async createTextFlat<T extends IPdfBrick>(point: IPoint, question: IQuestion,\n        controller: DocController, text: string | LocalizableString, fabric: new (question: IQuestion,\n            controller: DocController, rect: IRect, text: string) => T): Promise<IPdfBrick> {\n        if (typeof text === 'string' || !this.hasHtml(text)) {\n            return this.createPlainTextFlat(point, question, controller, typeof text === 'string' ?\n                text : this.getLocString(<LocalizableString>text), fabric);\n        }\n        else {\n            return this.splitHtmlRect(controller, await this.createHTMLFlat(point, <Question>question, controller,\n                this.createHtmlContainerBlock(this.getLocString(text), controller, 'standard')));\n        }\n    }\n    private static hasHtml(text: LocalizableString): boolean {\n        const pattern: RegExp = /<\\/?[a-z][\\s\\S]*>/i;\n        return text.hasHtml && (pattern.test((<any>text).renderedText) || pattern.test(text.renderedHtml));\n    }\n    private static getHtmlMargins(controller: DocController, point: IPoint): { top: number, bottom: number, width: number } {\n        const width: number = controller.paperWidth - point.xLeft - controller.margins.right;\n        return {\n            top: controller.margins.top,\n            bottom: controller.margins.bot,\n            width: width > controller.unitWidth ? width : controller.unitWidth\n        };\n    }\n\n    public static createHTMLRect(point: IPoint, controller: DocController,\n        margins: { top: number, bottom: number, width: number }, resultY: number): IRect {\n        const availablePageHeight: number = controller.paperHeight - controller.margins.bot - controller.margins.top;\n        const height: number = (controller.helperDoc.getNumberOfPages() - 1) *\n            (controller.fontSize * Math.floor(availablePageHeight / controller.fontSize))\n            + resultY - margins.top + SurveyHelper.HTML_TAIL_TEXT_SCALE * controller.fontSize;\n        const numberOfPages: number = controller.helperDoc.getNumberOfPages();\n        controller.helperDoc.addPage();\n        for (let i: number = 0; i < numberOfPages; i++) {\n            controller.helperDoc.deletePage(1);\n        }\n        return SurveyHelper.createRect(point, margins.width, height);\n    }\n\n    public static async createHTMLFlat(point: IPoint, question: Question, controller: DocController, html: string): Promise<IPdfBrick> {\n        const margins: { top: number, bottom: number, width: number } = this.getHtmlMargins(controller, point);\n        return await new Promise<IPdfBrick>((resolve) => {\n            controller.helperDoc.fromHTML(html, point.xLeft, margins.top, {\n                pagesplit: true, width: margins.width\n            }, function (result: any) {\n                const rect: IRect = SurveyHelper.createHTMLRect(point, controller, margins, result.y);\n                resolve(new HTMLBrick(question, controller, rect, html));\n            }, margins);\n        });\n    }\n    public static generateFontFace(fontName: string, fontBase64: string, fontWeight: string) {\n        return `@font-face { font-family: ${fontName}; ` +\n            `src: url(data:application/font-woff;charset=utf-8;base64,${fontBase64}) format('woff'); ` +\n            `font-weight: ${fontWeight}; }`;\n    }\n    public static generateFontFaceWithItalicStyle(fontName: string, fontBase64: string, fontWeight: string) {\n        return `@font-face { font-family: ${fontName}; ` +\n            `src: url(data:application/font-woff;charset=utf-8;base64,${fontBase64}) format('woff'); ` +\n            `font-weight: ${fontWeight}; font-style: italic}`;\n    }\n    public static htmlToXml(html: string): string {\n        const htmlDoc: Document = document.implementation.createHTMLDocument('');\n        htmlDoc.write(html.replace(/\\#/g, '%23'));\n        htmlDoc.documentElement.setAttribute('xmlns', htmlDoc.documentElement.namespaceURI);\n        htmlDoc.body.style.margin = 'unset';\n        return (new XMLSerializer()).serializeToString(htmlDoc.body).replace(/%23/g, '#');\n    }\n    public static createSvgContent(html: string, width: number, controller: DocController) {\n        const style: HTMLStyleElement = document.createElement('style');\n        style.innerHTML = '.__surveypdf_html p { margin: unset; line-height: 22px; } body { margin: unset; }';\n        document.body.appendChild(style);\n        const div: HTMLDivElement = document.createElement('div');\n        div.className = '__surveypdf_html';\n        div.style.display = 'block';\n        div.style.position = 'fixed';\n        div.style.top = '-10000px';\n        div.style.left = '-10000px';\n        div.style.width = (width / 72.0 * 96.0) + 'px';\n        div.style.boxSizing = 'initial';\n        div.style.color = 'initial';\n        div.style.fontFamily = 'initial';\n        div.style.font = 'initial';\n        div.style.lineHeight = 'initial';\n        div.insertAdjacentHTML('beforeend', html);\n        document.body.appendChild(div);\n        const divWidth: number = div.offsetWidth;\n        const divHeight: number = div.offsetHeight;\n        div.remove();\n        style.remove();\n        let defs: string = '';\n        if (controller.useCustomFontInHtml) {\n            defs = `<defs><style>${this.generateFontFace(controller.fontName, controller.base64Normal, 'normal')}` +\n                ` ${this.generateFontFace(controller.fontName, controller.base64Bold, 'bold')}</style></defs>`;\n        } else {\n            Object.keys(DocController.customFonts).forEach(fontName => {\n                const font = DocController.customFonts[fontName];\n                Object.keys(font).forEach((fontStyle: 'normal' | 'bold' | 'italic' | 'bolditalic') => {\n                    if (fontStyle === 'normal' || fontStyle === 'bold') {\n                        defs += `${this.generateFontFace(fontName, font[fontStyle], fontStyle)}`;\n                    } else {\n                        defs += `${this.generateFontFaceWithItalicStyle(fontName, font[fontStyle], fontStyle === 'italic' ? 'normal' : 'bold')}`;\n                    }\n                });\n                defs = '<defs><style>' + defs + '</style></defs>';\n            });\n        }\n        const svg: string = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${divWidth}px\" height=\"${divHeight}px\">` + defs +\n            '<style>.__surveypdf_html p { margin: unset; line-height: 22px; }</style>' +\n            `<foreignObject width=\"${divWidth}px\" height=\"${divHeight}px\">` +\n            this.htmlToXml(html) + '</foreignObject></svg>';\n        return { svg, divWidth, divHeight };\n    }\n    private static setCanvas(canvas: HTMLCanvasElement, divWidth: number, divHeight: number, img: HTMLImageElement): void {\n        canvas.width = divWidth * SurveyHelper.HTML_TO_IMAGE_QUALITY;\n        canvas.height = divHeight * SurveyHelper.HTML_TO_IMAGE_QUALITY;\n        const context: CanvasRenderingContext2D = canvas.getContext('2d');\n        context.scale(SurveyHelper.HTML_TO_IMAGE_QUALITY, SurveyHelper.HTML_TO_IMAGE_QUALITY);\n        context.fillStyle = SurveyHelper.BACKGROUND_COLOR;\n        context.fillRect(0, 0, divWidth, divHeight);\n        context.drawImage(img, 0, 0);\n    }\n    public static async htmlToImage(html: string, width: number, controller: DocController): Promise<{ url: string, aspect: number }> {\n        const { svg, divWidth, divHeight } = SurveyHelper.createSvgContent(html, width, controller);\n        const data: string = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svg)));\n        const img: HTMLImageElement = new Image();\n        img.crossOrigin='anonymous';\n        img.src = data;\n        return new Promise((resolve) => {\n            img.onload = function () {\n                const canvas: HTMLCanvasElement = document.createElement('canvas');\n                SurveyHelper.setCanvas(canvas, divWidth, divHeight, img);\n                const url: string = canvas.toDataURL('image/jpeg', SurveyHelper.HTML_TO_IMAGE_QUALITY);\n                canvas.remove();\n                resolve({ url: url, aspect: divWidth / divHeight });\n            };\n            img.onerror = function () {\n                resolve({ url: 'data:,', aspect: width / this.EPSILON });\n            };\n        });\n    }\n    public static async createBoldTextFlat(point: IPoint, question: Question,\n        controller: DocController, text: string | LocalizableString): Promise<IPdfBrick> {\n        controller.fontStyle = 'bold';\n        const composite: IPdfBrick = await this.createTextFlat(\n            point, question, controller, text, TextBoldBrick);\n        controller.fontStyle = 'normal';\n        return composite;\n    }\n    public static async createTitleFlat(point: IPoint, question: Question, controller: DocController): Promise<IPdfBrick> {\n        const composite: CompositeBrick = new CompositeBrick();\n        let currPoint: IPoint = this.clone(point);\n        const oldFontSize: number = controller.fontSize;\n        controller.fontSize *= this.TITLE_FONT_SCALE;\n        if (question.no) {\n            const noText: string = question.no + ' ';\n            let noFlat: IPdfBrick;\n            if (this.hasHtml(question.locTitle)) {\n                controller.fontStyle = 'bold';\n                controller.pushMargins();\n                controller.margins.right = controller.paperWidth -\n                    controller.margins.left - controller.measureText(noText, 'bold').width;\n                noFlat = await this.createHTMLFlat(currPoint, question, controller,\n                    this.createHtmlContainerBlock(noText, controller, 'standard'));\n                controller.popMargins();\n                controller.fontStyle = 'normal';\n            }\n            else {\n                noFlat = await this.createBoldTextFlat(currPoint,\n                    question, controller, noText);\n            }\n            composite.addBrick(noFlat);\n            currPoint.xLeft = noFlat.xRight;\n        }\n        controller.pushMargins();\n        controller.margins.left = currPoint.xLeft;\n        const textFlat: CompositeBrick = <CompositeBrick>await this.createBoldTextFlat(\n            currPoint, question, controller, question.locTitle);\n        composite.addBrick(textFlat);\n        controller.popMargins();\n        if (question.isRequired) {\n            const requiredText: string = question.requiredText;\n            if (this.hasHtml(question.locTitle)) {\n                currPoint = this.createPoint(textFlat.unfold()[0], false, false);\n                controller.fontStyle = 'bold';\n                controller.pushMargins();\n                controller.margins.right = controller.paperWidth -\n                    controller.margins.left - controller.measureText(requiredText, 'bold').width;\n                composite.addBrick(await this.createHTMLFlat(currPoint, question, controller,\n                    this.createHtmlContainerBlock(requiredText, controller, 'standard')));\n                controller.popMargins();\n                controller.fontStyle = 'normal';\n            }\n            else {\n                currPoint = this.createPoint(textFlat.unfold().pop(), false, true);\n                composite.addBrick(await this.createBoldTextFlat(currPoint,\n                    question, controller, requiredText));\n            }\n        }\n        controller.fontSize = oldFontSize;\n        return composite;\n    }\n    private static async createTitleSurveyPanelFlat(point: IPoint, controller: DocController,\n        text: string | LocalizableString, fontSizeScale: number): Promise<IPdfBrick> {\n        const oldFontSize: number = controller.fontSize;\n        controller.fontSize = oldFontSize * fontSizeScale;\n        controller.fontStyle = 'bold';\n        const titleFlat: IPdfBrick = await this.createTextFlat(point, null, controller, text, TitlePanelBrick);\n        controller.fontStyle = 'normal';\n        controller.fontSize = oldFontSize;\n        return titleFlat;\n    }\n    public static async createTitleSurveyFlat(point: IPoint, controller: DocController,\n        text: string | LocalizableString): Promise<IPdfBrick> {\n        return await this.createTitleSurveyPanelFlat(point, controller, text, this.TITLE_SURVEY_FONT_SIZE_SCALE);\n    }\n    public static async createTitlePanelFlat(point: IPoint, controller: DocController,\n        text: string | LocalizableString, isPage: boolean = false): Promise<IPdfBrick> {\n        return await this.createTitleSurveyPanelFlat(point, controller, text,\n            isPage ? this.TITLE_PAGE_FONT_SIZE_SCALE : this.TITLE_PANEL_FONT_SIZE_SCALE);\n    }\n    public static async createDescFlat(point: IPoint, question: IQuestion,\n        controller: DocController, text: string | LocalizableString): Promise<IPdfBrick> {\n        const oldFontSize: number = controller.fontSize;\n        controller.fontSize = oldFontSize * this.DESCRIPTION_FONT_SIZE_SCALE;\n        const composite: IPdfBrick = await this.createTextFlat(\n            point, question, controller, text, DescriptionBrick);\n        controller.fontSize = oldFontSize;\n        return composite;\n    }\n    public static getReadonlyRenderAs(question: Question, controller: DocController): 'auto' | 'text' | 'acroform' {\n        return (<any>question).readonlyRenderAs === 'auto' ? controller.readonlyRenderAs : (<any>question).readonlyRenderAs;\n    }\n    public static async createCommentFlat(point: IPoint, question: Question,\n        controller: DocController, options: { rows?: number } & ITextFieldBrickOptions): Promise<IPdfBrick> {\n        options.rows = options.rows ?? 1;\n        options.value = options.value ?? '';\n        const rect: IRect = this.createTextFieldRect(point, controller, options.rows);\n        let textFlat;\n        if (SurveyHelper.shouldRenderReadOnly(question, controller, options.isReadOnly)) {\n            textFlat = await this.createReadOnlyTextFieldTextFlat(\n                point, controller, question, options.value);\n            const padding: number = controller.unitHeight * this.VALUE_READONLY_PADDING_SCALE;\n            if (textFlat.yBot + padding > rect.yBot) rect.yBot = textFlat.yBot + padding;\n        }\n        const comment = new TextFieldBrick(question, controller, rect, options);\n        if(textFlat) {\n            comment.textBrick = textFlat;\n        }\n        return comment;\n    }\n    public static inBrowser = typeof Image === 'function';\n\n    public static get hasDocument(): boolean {\n        return typeof document !== 'undefined';\n    }\n\n    public static async getImageBase64(imageLink: string): Promise<string> {\n        const image = new Image();\n        image.crossOrigin='anonymous';\n        return new Promise((resolve) => {\n            image.onload = () => {\n                const canvas = document.createElement('canvas');\n                const ctx = canvas.getContext('2d');\n                canvas.height = image.naturalHeight;\n                canvas.width = image.naturalWidth;\n                ctx.drawImage(image, 0, 0);\n                const dataUrl = canvas.toDataURL();\n                resolve(dataUrl);\n            };\n            image.onerror = () => {\n                resolve('');\n            };\n            image.src = imageLink;\n        });\n    }\n    public static shouldConvertImageToPng = true;\n    public static async getImageLink(controller: DocController, imageOptions: { link: string, width: number, height: number, objectFit?: string }, applyImageFit: boolean): Promise<string> {\n        const ptToPx: number = 96.0 / 72.0;\n        let url = this.shouldConvertImageToPng ? await SurveyHelper.getImageBase64(imageOptions.link) : imageOptions.link;\n        if(typeof XMLSerializer === 'function' && applyImageFit) {\n            const canvasHtml: string =\n               `<div style='overflow: hidden; width: ${imageOptions.width * ptToPx}px; height: ${imageOptions.height * ptToPx}px;'>\n                   <img src='${url}' style='object-fit: ${imageOptions.objectFit}; width: 100%; height: 100%;'/>\n               </div>`;\n            url = (await SurveyHelper.htmlToImage(canvasHtml, imageOptions.width, controller)).url;\n        }\n        return url;\n    }\n    public static async createImageFlat(point: IPoint, question: any,\n        controller: DocController, imageOptions: { link: string, width: number, height: number, objectFit?: string }, applyImageFit?: boolean): Promise<IPdfBrick> {\n        if (SurveyHelper.inBrowser) {\n            imageOptions.objectFit = !!question && !!question.imageFit ? question.imageFit : (imageOptions.objectFit || 'contain');\n            if (applyImageFit ?? controller.applyImageFit) {\n                if (imageOptions.width > controller.paperWidth - controller.margins.left - controller.margins.right) {\n                    const newWidth: number = controller.paperWidth - controller.margins.left - controller.margins.right;\n                    imageOptions.height *= newWidth / imageOptions.width;\n                    imageOptions.width = newWidth;\n                }\n            }\n            const html: string = `<img src='${await SurveyHelper.getImageLink(controller, imageOptions, applyImageFit ?? controller.applyImageFit)}' width='${imageOptions.width}' height='${imageOptions.height}'/>`;\n            return new HTMLBrick(question, controller, this.createRect(point, imageOptions.width, imageOptions.height), html, true);\n        }\n        return new ImageBrick(question, controller, imageOptions.link, point, imageOptions.width, imageOptions.height);\n    }\n    public static canPreviewImage(question: QuestionFileModel, item: { name: string, type: string, content: string }, url: string): boolean {\n        return question.canPreviewImage(item);\n        //  &&  await this.getImageSize(url) !== null;\n    }\n    public static async getImageSize(url: string): Promise<ISize> {\n        if (!SurveyHelper.inBrowser) {\n            return await new Promise((resolve) => {\n                return resolve({ width: undefined, height: undefined });\n            });\n        }\n        return await new Promise((resolve) => {\n            const image: any = new Image();\n            image.src = url;\n            image.onload = function () {\n                return resolve({ width: image.width, height: image.height });\n            };\n            image.onerror = function () { return resolve(null); };\n        });\n    }\n    public static createRowlineFlat(point: IPoint, controller: DocController,\n        width?: number, color?: string): IPdfBrick {\n        let xRight: number = typeof width === 'undefined' ?\n            controller.paperWidth - controller.margins.right :\n            point.xLeft + width;\n        xRight = xRight > point.xLeft ? xRight : point.xLeft + this.EPSILON;\n        return new RowlineBrick(controller, {\n            xLeft: point.xLeft,\n            xRight: xRight,\n            yTop: point.yTop + this.EPSILON,\n            yBot: point.yTop + this.EPSILON\n        }, typeof color === 'undefined' ? null : color);\n    }\n    public static async createLinkFlat(point: IPoint, question: Question,\n        controller: DocController, text: string, link: string): Promise<IPdfBrick> {\n        const compositeText: CompositeBrick = <CompositeBrick>await this.\n            createTextFlat(point, question, controller, text, TextBrick);\n        const compositeLink: CompositeBrick = new CompositeBrick();\n        compositeText.unfold().forEach((text: TextBrick) => {\n            compositeLink.addBrick(new LinkBrick(text, link));\n            const linePoint: IPoint = this.createPoint(compositeLink);\n            compositeLink.addBrick(this.createRowlineFlat(linePoint,\n                controller, compositeLink.width, LinkBrick.COLOR));\n        });\n        return compositeLink;\n    }\n    public static createAcroformRect(rect: IRect): number[] {\n        return [\n            rect.xLeft,\n            rect.yTop,\n            rect.xRight - rect.xLeft,\n            rect.yBot - rect.yTop\n        ];\n    }\n    public static createTextFieldRect(point: IPoint, controller: DocController, lines: number = 1): IRect {\n        let width: number = controller.paperWidth - point.xLeft - controller.margins.right;\n        width = Math.max(width, controller.unitWidth);\n        const height: number = controller.unitHeight * lines;\n        return this.createRect(point, width, height);\n    }\n    public static async createReadOnlyTextFieldTextFlat(point: IPoint,\n        controller: DocController, question: Question, value: string): Promise<IPdfBrick> {\n        const padding: number = controller.unitWidth * this.VALUE_READONLY_PADDING_SCALE;\n        point.yTop += padding;\n        point.xLeft += padding;\n        controller.pushMargins(point.xLeft, controller.margins.right + padding);\n        const textFlat: IPdfBrick = await this.createTextFlat(\n            point, question, controller, value.toString(), TextBrick);\n        controller.popMargins();\n        return textFlat;\n    }\n    public static renderFlatBorders(controller: DocController, borderOptions: IBorderDescription): void {\n        if (!this.FORM_BORDER_VISIBLE) return;\n        borderOptions.rounded = borderOptions.rounded ?? true;\n        borderOptions.outside = borderOptions.outside ?? false;\n        const minSide: number = Math.min(borderOptions.width, borderOptions.height);\n        const borderWidth = this.getBorderWidth(controller);\n        const visibleWidth: number = controller.unitHeight * this.VISIBLE_BORDER_SCALE * this.BORDER_SCALE;\n        const visibleScale: number = borderOptions.outside ? (minSide + borderWidth) / minSide - visibleWidth / minSide : (minSide - borderWidth) / minSide + visibleWidth / minSide;\n        const oldDrawColor: string = controller.doc.getDrawColor();\n        controller.doc.setDrawColor(borderOptions.formBorderColor);\n        controller.doc.setLineWidth(visibleWidth);\n        const scaledRect = this.scaleRect(borderOptions, visibleScale);\n        if(borderOptions.dashStyle) {\n            const dashStyle = borderOptions.dashStyle;\n            const borderLength = (Math.abs(scaledRect.yTop - scaledRect.yBot) + Math.abs(scaledRect.xLeft - scaledRect.xRight)) * 2;\n            const dashWithSpaceSize = dashStyle.dashArray[0] + (dashStyle.dashArray[1] ?? dashStyle.dashArray[0]);\n            const dashSize = dashStyle.dashArray[0] + (borderLength % dashWithSpaceSize) / Math.floor(borderLength / dashWithSpaceSize);\n\n            controller.doc.setLineDashPattern(\n                [dashSize, dashStyle.dashArray[1] ?? dashStyle.dashArray[0]],\n                dashStyle.dashPhase\n            );\n        }\n\n        controller.doc.rect(...this.createAcroformRect(scaledRect));\n        if(borderOptions.rounded) {\n            const unvisibleWidth: number = controller.unitHeight * this.UNVISIBLE_BORDER_SCALE * this.BORDER_SCALE;\n            const unvisibleScale: number = 1.0 - unvisibleWidth / minSide;\n            const unvisibleRadius: number = this.RADIUS_SCALE * unvisibleWidth;\n            controller.doc.setDrawColor(this.BACKGROUND_COLOR);\n            controller.doc.setLineWidth(unvisibleWidth);\n            controller.doc.roundedRect(...this.createAcroformRect(\n                this.scaleRect(borderOptions, unvisibleScale)), unvisibleRadius, unvisibleRadius);\n        }\n        if(borderOptions.dashStyle) {\n            controller.doc.setLineDashPattern([]);\n        }\n        controller.doc.setDrawColor(oldDrawColor);\n    }\n    public static getLocString(text: LocalizableString): string {\n        if (this.hasHtml(text)) return text.renderedHtml;\n        return (<any>text).renderedText || text.renderedHtml;\n    }\n    public static getContentQuestion(question: Question): Question {\n        return !!(<any>question).contentQuestion ? (<any>question).contentQuestion : question;\n    }\n    public static getContentQuestionTypeRenderAs(question: Question, survey: SurveyPDF): string {\n        let renderAs = question.renderAs;\n        if(question.getType() === 'boolean' && survey.options.useLegacyBooleanRendering) {\n            renderAs = 'checkbox';\n        }\n        if(renderAs !== 'default') {\n            const type = `${question.getType()}-${renderAs}`;\n            if(FlatRepository.getInstance().isTypeRegistered(type)) return type;\n        }\n        return question.getType();\n    }\n    public static getContentQuestionType(question: Question, survey: SurveyPDF): string {\n        if(!!question.customWidget) return question.customWidget.pdfQuestionType;\n        return !!(<any>question).contentQuestion ? 'custom_model' : this.getContentQuestionTypeRenderAs(question, survey);\n    }\n    public static getRatingMinWidth(controller: DocController): number {\n        return controller.measureText(this.RATING_MIN_WIDTH).width;\n    }\n    public static getRatingItemText(question: QuestionRatingModel,\n        index: number, locText: LocalizableString): LocalizableString {\n        const ratingItemLocText: LocalizableString = new LocalizableString(locText.owner, locText.useMarkdown);\n        ratingItemLocText.text = this.getLocString(locText);\n        if (index === 0 && question.minRateDescription) {\n            ratingItemLocText.text = question.locMinRateDescription.text + ' ' + this.getLocString(locText);\n        }\n        else if (index === question.visibleRateValues.length - 1 && question.maxRateDescription) {\n            ratingItemLocText.text = this.getLocString(locText) + ' ' + question.locMaxRateDescription.text;\n        }\n        return ratingItemLocText;\n    }\n    public static getPageAvailableWidth(controller: DocController): number {\n        return controller.paperWidth - controller.margins.left - controller.margins.right;\n    }\n    public static getImagePickerAvailableWidth(controller: DocController): number {\n        const width: number = (this.getPageAvailableWidth(controller) -\n            (this.IMAGEPICKER_COUNT - 1) * controller.unitHeight);\n        return width > 0 ? width : controller.unitHeight;\n    }\n    public static getColumnWidth(controller: DocController, colCount: number) {\n        return (this.getPageAvailableWidth(controller) - (colCount - 1) *\n            controller.unitWidth * this.GAP_BETWEEN_COLUMNS) / colCount;\n    }\n    public static setColumnMargins(controller: DocController, colCount: number, column: number) {\n        const cellWidth: number = this.getColumnWidth(controller, colCount);\n        controller.margins.left = controller.margins.left + column *\n            (cellWidth + controller.unitWidth * this.GAP_BETWEEN_COLUMNS);\n        controller.margins.right = controller.margins.right + (colCount - column - 1) *\n            (cellWidth + controller.unitWidth * this.GAP_BETWEEN_COLUMNS);\n    }\n    public static moveRect(rect: IRect, left: number = rect.xLeft, top: number = rect.yTop): IRect {\n        return {\n            xLeft: left,\n            yTop: top,\n            xRight: left + rect.xRight - rect.xLeft,\n            yBot: top + rect.yBot - rect.yTop\n        };\n    }\n    public static scaleRect(rect: IRect, scale: number): IRect {\n        const scaleWidth: number = Math.min(rect.xRight - rect.xLeft, rect.yBot - rect.yTop) * (1.0 - scale) / 2.0;\n        return {\n            xLeft: rect.xLeft + scaleWidth,\n            yTop: rect.yTop + scaleWidth,\n            xRight: rect.xRight - scaleWidth,\n            yBot: rect.yBot - scaleWidth\n        };\n    }\n    public static getBorderWidth(controller: DocController) {\n        return 2.0 * controller.unitWidth * this.BORDER_SCALE;\n    }\n    public static formScale(controller: DocController, flat: ISize): number {\n        const minSide: number = Math.min(flat.width, flat.height);\n        return (minSide - this.getBorderWidth(controller)) / minSide;\n    }\n    public static async generateQuestionFlats(survey: SurveyPDF,\n        controller: DocController, question: Question, point: IPoint): Promise<IPdfBrick[]> {\n        const questionType: string = this.getContentQuestionType(question, survey);\n        const flatQuestion: IFlatQuestion = FlatRepository.getInstance().\n            create(survey, question, controller, questionType);\n        const questionFlats: IPdfBrick[] = await flatQuestion.generateFlats(point);\n        const adornersOptions: AdornersOptions = new AdornersOptions(point,\n            questionFlats, question, controller, FlatRepository.getInstance(), SurveyPDFModule);\n        if (question.customWidget && question.customWidget.isFit(question) &&\n            question.customWidget.pdfRender) {\n            survey.onRenderQuestion.unshift(question.customWidget.pdfRender);\n        }\n        await survey.onRenderQuestion.fire(survey, adornersOptions);\n        return [...adornersOptions.bricks];\n    }\n    public static isFontExist(controller: DocController, fontName: string): boolean {\n        return controller.doc.internal.getFont(fontName).fontName === fontName;\n    }\n    public static isCustomFont(controller: DocController, fontName: string): boolean {\n        return controller.doc.internal.getFont(fontName).encoding === this.CUSTOM_FONT_ENCODING;\n    }\n    public static fixFont(controller: DocController): void {\n        if (this.isCustomFont(controller, controller.fontName)) {\n            controller.doc.text('load font', 0, 0);\n            controller.doc.deletePage(1);\n            controller.addPage();\n        }\n    }\n    public static clone(src: any): any {\n        const target: any = {};\n        for (const prop in src) {\n            if (src.hasOwnProperty(prop)) {\n                target[prop] = src[prop];\n            }\n        }\n        return target;\n    }\n    public static shouldRenderReadOnly(question: IQuestion, controller: DocController, readOnly?: boolean): boolean {\n        return ((!!question && question.isReadOnly || readOnly) && SurveyHelper.getReadonlyRenderAs(\n            <Question>question, controller) !== 'acroform') || controller?.compress;\n    }\n    public static isSizeEmpty(val: any): boolean {\n        return !val || val === 'auto';\n    }\n    public static isHeightEmpty(val: any): boolean {\n        return this.isSizeEmpty(val) || val == '100%';\n    }\n    public static async getCorrectedImageSize(controller: DocController, imageOptions: { imageWidth?: any, imageHeight?: any, imageLink: string, defaultImageWidth?: any, defaultImageHeight?: any }): Promise<ISize> {\n        let { imageWidth, imageLink, imageHeight, defaultImageWidth, defaultImageHeight } = imageOptions;\n        imageWidth = typeof imageWidth === 'number' ? imageWidth.toString() : imageWidth;\n        imageHeight = typeof imageHeight === 'number' ? imageHeight.toString() : imageHeight;\n        let widthPt: number = imageWidth && SurveyHelper.parseWidth(imageWidth, SurveyHelper.getPageAvailableWidth(controller), 1, 'px');\n        let heightPt: number = imageHeight && SurveyHelper.parseWidth(imageHeight, SurveyHelper.getPageAvailableWidth(controller), 1, 'px');\n        defaultImageWidth = typeof defaultImageWidth === 'number' ? defaultImageWidth.toString() : defaultImageWidth;\n        defaultImageHeight = typeof defaultImageHeight === 'number' ? defaultImageHeight.toString() : defaultImageHeight;\n        let defaultWidthPt: number = defaultImageWidth && SurveyHelper.parseWidth(defaultImageWidth, SurveyHelper.getPageAvailableWidth(controller), 1, 'px');\n        let defaultHeightPt: number = defaultImageHeight && SurveyHelper.parseWidth(defaultImageHeight, SurveyHelper.getPageAvailableWidth(controller), 1, 'px');\n\n        if(SurveyHelper.isSizeEmpty(imageWidth) || SurveyHelper.isHeightEmpty(imageHeight)) {\n            const imageSize = await SurveyHelper.getImageSize(imageLink);\n            if(!SurveyHelper.isSizeEmpty(imageWidth)) {\n                if(imageSize && imageSize.width) {\n                    heightPt = imageSize.height * widthPt / imageSize.width;\n                }\n            }\n            else if(!SurveyHelper.isHeightEmpty(imageHeight)) {\n                if(imageSize && imageSize.height) {\n                    widthPt = imageSize.width * heightPt / imageSize.height;\n                }\n            }\n            else if(imageSize && imageSize.height && imageSize.width) {\n                heightPt = SurveyHelper.parseWidth(imageSize.height.toString(), SurveyHelper.getPageAvailableWidth(controller), 1, 'px');\n                widthPt = SurveyHelper.parseWidth(imageSize.width.toString(), SurveyHelper.getPageAvailableWidth(controller), 1, 'px');\n            }\n        }\n        return { width: widthPt || defaultWidthPt || 0, height: heightPt || defaultHeightPt || 0 };\n    }\n}","/* global jsPDF */\n/**\n * @license\n * Copyright (c) 2016 Alexander Weidt,\n * https://github.com/BiggA94\n * \n * Licensed under the MIT License. http://opensource.org/licenses/mit-license\n */\n\n/** \n* jsPDF AcroForm Plugin\n* @module AcroForm\n*/\nimport { jsPDF } from \"jspdf\";\n\n(function (jsPDF, globalObj) {\n    'use strict';\n\n    var jsPDFAPI = jsPDF.API;\n    var scope;\n    var scaleFactor = 1;\n    function toUnicode(str) {\n        var unicodeString = '';\n        for (var i = 0; i < str.length; i++) {\n            var theUnicode = str.charCodeAt(i).toString(16).toUpperCase();\n            while (theUnicode.length < 4) {\n                theUnicode = '0' + theUnicode;\n            };\n            unicodeString += theUnicode;\n        }\n        return '<FEFF' + unicodeString + '>';\n    }\n    var pdfEscape = function (value) { return value.replace(/\\\\/g, '\\\\\\\\').replace(/\\(/g, '\\\\(').replace(/\\)/g, '\\\\)') };\n    var pdfUnescape = function (value) { return value.replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\(/g, '(').replace(/\\\\\\)/g, ')'); };\n    function arrayToPdfUnicodeArray(value) {\n        var result = '[ ';\n        for (var i = 0; i < value.length; i++) {\n            result += toUnicode(value[i]);\n        }\n        result += ' ]'\n        return result;\n    }\n    var f2 = function (number) {\n        return number.toFixed(2); // Ie, %.2f\n    };\n\n    var f5 = function (number) {\n        return number.toFixed(5); // Ie, %.2f\n    };\n\n    jsPDFAPI.__acroform__ = {};\n    var inherit = function (child, parent) {\n        child.prototype = Object.create(parent.prototype);\n        child.prototype.constructor = child;\n    };\n\n    var scale = function (x) {\n        return (x * scaleFactor);\n    };\n    var antiScale = function (x) {\n        return (x / scaleFactor);\n    };\n\n    var createFormXObject = function (formObject) {\n        var xobj = new AcroFormXObject();\n        var height = AcroFormAppearance.internal.getHeight(formObject) || 0;\n        var width = AcroFormAppearance.internal.getWidth(formObject) || 0;\n        xobj.BBox = [0, 0, Number(f2(width)), Number(f2(height))];\n        return xobj;\n    };\n\n    /**\n    * Bit-Operations\n    */\n    var setBit = jsPDFAPI.__acroform__.setBit = function (number, bitPosition) {\n        number = number || 0;\n        bitPosition = bitPosition || 0;\n\n        if (isNaN(number) || isNaN(bitPosition)) {\n            throw new Error('Invalid arguments passed to jsPDF.API.__acroform__.setBit');\n        }\n        var bitMask = 1 << bitPosition;\n\n        number |= bitMask;\n\n        return number;\n    };\n\n    var clearBit = jsPDFAPI.__acroform__.clearBit = function (number, bitPosition) {\n        number = number || 0;\n        bitPosition = bitPosition || 0;\n\n        if (isNaN(number) || isNaN(bitPosition)) {\n            throw new Error('Invalid arguments passed to jsPDF.API.__acroform__.clearBit');\n        }\n        var bitMask = 1 << bitPosition;\n\n        number &= ~bitMask;\n\n        return number;\n    };\n\n    var getBit = jsPDFAPI.__acroform__.getBit = function (number, bitPosition) {\n        if (isNaN(number) || isNaN(bitPosition)) {\n            throw new Error('Invalid arguments passed to jsPDF.API.__acroform__.getBit');\n        }\n        return (number & (1 << bitPosition)) === 0 ? 0 : 1;\n    };\n\n    /*\n    * Ff starts counting the bit position at 1 and not like javascript at 0\n    */\n    var getBitForPdf = jsPDFAPI.__acroform__.getBitForPdf = function (number, bitPosition) {\n        if (isNaN(number) || isNaN(bitPosition)) {\n            throw new Error('Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf');\n        }\n        return getBit(number, bitPosition - 1);\n    };\n\n    var setBitForPdf = jsPDFAPI.__acroform__.setBitForPdf = function (number, bitPosition) {\n        if (isNaN(number) || isNaN(bitPosition)) {\n            throw new Error('Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf');\n        }\n        return setBit(number, bitPosition - 1);\n    };\n\n    var clearBitForPdf = jsPDFAPI.__acroform__.clearBitForPdf = function (number, bitPosition) {\n        if (isNaN(number) || isNaN(bitPosition)) {\n            throw new Error('Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf');\n        }\n        return clearBit(number, bitPosition - 1);\n    };\n\n    var calculateCoordinates = jsPDFAPI.__acroform__.calculateCoordinates = function (args) {\n        var getHorizontalCoordinate = this.internal.getHorizontalCoordinate;\n        var getVerticalCoordinate = this.internal.getVerticalCoordinate;\n        var x = args[0];\n        var y = args[1];\n        var w = args[2];\n        var h = args[3];\n\n        var coordinates = {};\n\n        coordinates.lowerLeft_X = getHorizontalCoordinate(x) || 0;\n        coordinates.lowerLeft_Y = getVerticalCoordinate(y + h) || 0;\n        coordinates.upperRight_X = getHorizontalCoordinate(x + w) || 0;\n        coordinates.upperRight_Y = getVerticalCoordinate(y) || 0;\n\n        return [Number(f2(coordinates.lowerLeft_X)), Number(f2(coordinates.lowerLeft_Y)), Number(f2(coordinates.upperRight_X)), Number(f2(coordinates.upperRight_Y))];\n    };\n\n    var calculateAppearanceStream = function (formObject) {\n        if (formObject.appearanceStreamContent) {\n            return formObject.appearanceStreamContent;\n        }\n\n        if (!formObject.V && !formObject.DV) {\n            return;\n        }\n\n        // else calculate it\n\n        var stream = [];\n        var text = formObject.V || formObject.DV;\n        var calcRes = calculateX(formObject, text);\n        var fontKey = scope.internal.getFont(formObject.fontName, formObject.fontStyle).id;\n\n        //PDF 32000-1:2008, page 444\n        stream.push('/Tx BMC');\n        stream.push('q');\n        stream.push('BT'); // Begin Text\n        stream.push(scope.__private__.encodeColorString(formObject.color));\n        stream.push('/' + fontKey + ' ' + f2(calcRes.fontSize) + ' Tf');\n        stream.push('1 0 0 1 0 0 Tm');// Transformation Matrix\n        stream.push(calcRes.text);\n        stream.push('ET'); // End Text    \n        stream.push('Q');\n        stream.push('EMC');\n\n        var appearanceStreamContent = new createFormXObject(formObject);\n        appearanceStreamContent.stream = stream.join(\"\\n\");\n        return appearanceStreamContent;\n    };\n\n    var calculateX = function (formObject, text) {\n        if (formObject.isUnicode) text = formObject.trueValue;\n         var maxFontSize =\n            formObject.fontSize === 0 ? formObject.maxFontSize : formObject.fontSize;\n        var returnValue = {\n            text: \"\",\n            fontSize: \"\"\n        };\n        // Remove Brackets\n        text = text.substr(0, 1) == \"(\" ? text.substr(1) : text;\n        text =\n            text.substr(text.length - 1) == \")\"\n            ? text.substr(0, text.length - 1)\n            : text;\n        // split into array of words\n        var textSplit = text.split(\" \");\n        textSplit = textSplit.map(function (word) {\n            return word.split(\"\\n\");\n        });\n        if (!formObject.multiline) {\n            textSplit = textSplit.map(function (arr) {\n                return [arr.join(\" \")]\n            });\n        }\n\n        var fontSize = maxFontSize; // The Starting fontSize (The Maximum)\n        var lineSpacing = 2;\n        var borderPadding = 2;\n\n        var height = AcroFormAppearance.internal.getHeight(formObject) || 0;\n        height = height < 0 ? -height : height;\n        var width = AcroFormAppearance.internal.getWidth(formObject) || 0;\n        width = width < 0 ? -width : width;\n\n        var isSmallerThanWidth = function(i, lastLine, fontSize) {\n            if (i + 1 < textSplit.length) {\n            var tmp = lastLine + \" \" + textSplit[i + 1][0];\n            var TextWidth = calculateFontSpace(tmp, formObject, fontSize).width;\n            var FieldWidth = width - 2 * borderPadding;\n            return TextWidth <= FieldWidth;\n            } else {\n            return false;\n            }\n        };\n\n        fontSize++;\n        FontSize: while (fontSize > 0) {\n            text = \"\";\n            fontSize--;\n            var textHeight = calculateFontSpace(\"3\", formObject, fontSize).height;\n            var startY = formObject.multiline\n            ? height - fontSize\n            : (height - textHeight) / 2;\n            startY += lineSpacing;\n            var startX;\n\n            var lastY = startY;\n            var firstWordInLine = 0,\n            lastWordInLine = 0;\n            var lastLength;\n            var currWord = 0;\n\n            if (fontSize <= 0) {\n            // In case, the Text doesn't fit at all\n            fontSize = 12;\n            text = \"(...) Tj\\n\";\n            text +=\n                \"% Width of Text: \" +\n                calculateFontSpace(text, formObject, fontSize).width +\n                \", FieldWidth:\" +\n                width +\n                \"\\n\";\n            break;\n            }\n\n            var lastLine = \"\";\n            var lineCount = 0;\n            Line: for (var i = 0; i < textSplit.length; i++) {\n            if (textSplit.hasOwnProperty(i)) {\n                var isWithNewLine = false;\n                if (textSplit[i].length !== 1 && currWord !== textSplit[i].length - 1) {\n                if (\n                    (textHeight + lineSpacing) * (lineCount + 2) + lineSpacing >\n                    height\n                ) {\n                    continue FontSize;\n                }\n\n                lastLine += textSplit[i][currWord];\n                isWithNewLine = true;\n                lastWordInLine = i;\n                i--;\n                } else {\n                lastLine += textSplit[i][currWord] + \" \";\n                lastLine =\n                    lastLine.substr(lastLine.length - 1) == \" \"\n                    ? lastLine.substr(0, lastLine.length - 1)\n                    : lastLine;\n                var key = parseInt(i);\n                var nextLineIsSmaller = isSmallerThanWidth(key, lastLine, fontSize);\n                var isLastWord = i >= textSplit.length - 1;\n\n                if (nextLineIsSmaller && !isLastWord) {\n                    lastLine += \" \";\n                    currWord = 0;\n                    continue; // Line\n                } else if (!nextLineIsSmaller && !isLastWord) {\n                    if (!formObject.multiline) {\n                    continue FontSize;\n                    } else {\n                    if (\n                        (textHeight + lineSpacing) * (lineCount + 2) + lineSpacing >\n                        height\n                    ) {\n                        // If the Text is higher than the\n                        // FieldObject\n                        continue FontSize;\n                    }\n                    lastWordInLine = key;\n                    // go on\n                    }\n                } else if (isLastWord) {\n                    lastWordInLine = key;\n                } else {\n                    if (\n                    formObject.multiline &&\n                    (textHeight + lineSpacing) * (lineCount + 2) + lineSpacing >\n                        height\n                    ) {\n                    // If the Text is higher than the FieldObject\n                    continue FontSize;\n                    }\n                }\n                }\n                // Remove last blank\n\n                var line = \"\";\n\n                for (var x = firstWordInLine; x <= lastWordInLine; x++) {\n                    var currLine = textSplit[x];\n                    if (formObject.multiline) {\n                        if (x === lastWordInLine) {\n                        line += currLine[currWord] + \" \";\n                        currWord = (currWord + 1) % currLine.length;\n                        continue;\n                        }\n                        if (x === firstWordInLine) {\n                        line += currLine[currLine.length - 1] + \" \";\n                        continue;\n                        }\n                    }\n                    line += currLine[0] + \" \";\n                }\n\n                // Remove last blank\n                line =\n                line.substr(line.length - 1) == \" \"\n                    ? line.substr(0, line.length - 1)\n                    : line;\n                // lastLength -= blankSpace.width;\n                lastLength = calculateFontSpace(line, formObject, fontSize).width;\n\n                // Calculate startX\n                switch (formObject.textAlign) {\n                case \"right\":\n                    startX = width - lastLength - borderPadding;\n                    break;\n                case \"center\":\n                    startX = (width - lastLength) / 2;\n                    break;\n                case \"left\":\n                default:\n                    startX = borderPadding;\n                    break;\n                }\n                text += f2(startX) + \" \" + f2(lastY) + \" Td\\n\";\n\n                if (formObject.isUnicode) {\n                    var fontList = {};\n                    fontList[scope.internal.getFont().id] = scope.internal.getFont();\n                    var payload = {\n                        text: line,\n                        x: null,\n                        y: null,\n                        options: {\n                            lang: null\n                        },\n                        mutex: {\n                            pdfEscape: pdfEscape,\n                            activeFontKey: scope.internal.getFont().id,\n                            fonts: fontList,\n                            activeFontSize: formObject.fontSize\n                        }\n                    };\n                    scope.internal.events.publish('postProcessText', payload);\n                    text += '<' + payload.text + '> Tj\\n';\n                }\n                else {\n                    text += '(' + pdfEscape(line) + ') Tj\\n';\n                }\n                // reset X in PDF\n                text += -f2(startX) + \" 0 Td\\n\";\n\n                // After a Line, adjust y position\n                lastY = -(fontSize + lineSpacing);\n\n                // Reset for next iteration step\n                lastLength = 0;\n                firstWordInLine = isWithNewLine ? lastWordInLine : lastWordInLine + 1;\n                lineCount++;\n\n                lastLine = \"\";\n                continue Line;\n            }\n            }\n            break;\n        }\n\n        returnValue.text = text;\n        returnValue.fontSize = fontSize;\n\n        return returnValue;\n    };\n\n    /**\n    * Small workaround for calculating the TextMetric approximately.\n    * \n    * @param text\n    * @param fontsize\n    * @returns {TextMetrics} (Has Height and Width)\n    */\n    var calculateFontSpace = function (text, formObject, fontSize) {\n        var font = scope.internal.getFont(formObject.fontName, formObject.fontStyle);\n        var width = scope.getStringUnitWidth(text, { font: font, fontSize: parseFloat(fontSize), charSpace: 0 }) * parseFloat(fontSize);\n        var height = scope.getStringUnitWidth(\"3\", { font: font, fontSize: parseFloat(fontSize), charSpace: 0 }) * parseFloat(fontSize) * 1.5;\n        return { height: height, width: width };\n    };\n\n    var acroformPluginTemplate = {\n        fields: [],\n        xForms: [],\n        /**\n        * acroFormDictionaryRoot contains information about the AcroForm\n        * Dictionary 0: The Event-Token, the AcroFormDictionaryCallback has\n        * 1: The Object ID of the Root\n        */\n        acroFormDictionaryRoot: null,\n        /**\n        * After the PDF gets evaluated, the reference to the root has to be\n        * reset, this indicates, whether the root has already been printed\n        * out\n        */\n        printedOut: false,\n        internal: null,\n        isInitialized: false\n    };\n\n    var annotReferenceCallback = function () {\n        //set objId to undefined and force it to get a new objId on buildDocument\n        scope.internal.acroformPlugin.acroFormDictionaryRoot.objId = undefined;\n        var fields = scope.internal.acroformPlugin.acroFormDictionaryRoot.Fields;\n        for (var i in fields) {\n            if (fields.hasOwnProperty(i)) {\n                var formObject = fields[i];\n                //set objId to undefined and force it to get a new objId on buildDocument\n                formObject.objId = undefined;\n                // add Annot Reference!\n                if (formObject.hasAnnotation) {\n                    // If theres an Annotation Widget in the Form Object, put the\n                    // Reference in the /Annot array\n                    createAnnotationReference.call(scope, formObject);\n                }\n            }\n        }\n    };\n\n    var putForm = function (formObject) {\n        if (scope.internal.acroformPlugin.printedOut) {\n            scope.internal.acroformPlugin.printedOut = false;\n            scope.internal.acroformPlugin.acroFormDictionaryRoot = null;\n        }\n        if (!scope.internal.acroformPlugin.acroFormDictionaryRoot) {\n            initializeAcroForm.call(scope);\n        }\n        scope.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(formObject);\n    };\n    /**\n    * Create the Reference to the widgetAnnotation, so that it gets referenced\n    * in the Annot[] int the+ (Requires the Annotation Plugin)\n    */\n    var createAnnotationReference = function (object) {\n        var options = {\n            type: 'reference',\n            object: object\n        };\n        var findEntry = function (entry) { return (entry.type === options.type && entry.object === options.object); };\n        if (scope.internal.getPageInfo(object.page).pageContext.annotations.find(findEntry) === undefined) {\n            scope.internal.getPageInfo(object.page).pageContext.annotations.push(options);\n        }\n    };\n\n    // Callbacks\n\n    var putCatalogCallback = function () {\n        // Put reference to AcroForm to DocumentCatalog\n        if (typeof scope.internal.acroformPlugin.acroFormDictionaryRoot != 'undefined') {\n            // for safety, shouldn't normally be the case\n            scope.internal.write('/AcroForm ' + scope.internal.acroformPlugin.acroFormDictionaryRoot.objId + ' ' + 0 + ' R');\n        } else {\n            throw new Error('putCatalogCallback: Root missing.');\n        }\n    };\n\n    /**\n    * Adds /Acroform X 0 R to Document Catalog, and creates the AcroForm\n    * Dictionary\n    */\n    var AcroFormDictionaryCallback = function () {\n        // Remove event\n        scope.internal.events.unsubscribe(scope.internal.acroformPlugin.acroFormDictionaryRoot._eventID);\n        delete scope.internal.acroformPlugin.acroFormDictionaryRoot._eventID;\n        scope.internal.acroformPlugin.printedOut = true;\n    };\n\n    /**\n    * Creates the single Fields and writes them into the Document\n    * \n    * If fieldArray is set, use the fields that are inside it instead of the\n    * fields from the AcroRoot (for the FormXObjects...)\n    */\n    var createFieldCallback = function (fieldArray) {\n        var standardFields = (!fieldArray);\n\n        if (!fieldArray) {\n            // in case there is no fieldArray specified, we want to print out\n            // the Fields of the AcroForm\n            // Print out Root\n            scope.internal.newObjectDeferredBegin(scope.internal.acroformPlugin.acroFormDictionaryRoot.objId, true);\n            scope.internal.acroformPlugin.acroFormDictionaryRoot.putStream();\n        }\n\n        fieldArray = fieldArray || scope.internal.acroformPlugin.acroFormDictionaryRoot.Kids;\n\n        for (var i in fieldArray) {\n            if (fieldArray.hasOwnProperty(i)) {\n                var fieldObject = fieldArray[i];\n                var keyValueList = [];\n                var oldRect = fieldObject.Rect;\n\n                if (fieldObject.Rect) {\n                    fieldObject.Rect = calculateCoordinates.call(this, fieldObject.Rect);\n                }\n\n                // Start Writing the Object\n                scope.internal.newObjectDeferredBegin(fieldObject.objId, true);\n\n                fieldObject.DA = AcroFormAppearance.createDefaultAppearanceStream(fieldObject);\n\n                if (typeof fieldObject === \"object\" && typeof fieldObject.getKeyValueListForStream === \"function\") {\n                    keyValueList = fieldObject.getKeyValueListForStream();\n                }\n\n                fieldObject.Rect = oldRect;\n\n                if (fieldObject.hasAppearanceStream && !fieldObject.appearanceStreamContent) {\n                    // Calculate Appearance\n                    var appearance = calculateAppearanceStream.call(this, fieldObject);\n                    keyValueList.push({ key: 'AP', value: \"<</N \" + appearance + \">>\" });\n\n                    scope.internal.acroformPlugin.xForms.push(appearance);\n                }\n\n                // Assume AppearanceStreamContent is a Array with N,R,D (at least\n                // one of them!)\n                if (fieldObject.appearanceStreamContent) {\n                    var appearanceStreamString = \"\";\n                    // Iterate over N,R and D\n                    for (var k in fieldObject.appearanceStreamContent) {\n                        if (fieldObject.appearanceStreamContent.hasOwnProperty(k)) {\n                            var value = fieldObject.appearanceStreamContent[k];\n                            appearanceStreamString += (\"/\" + k + \" \");\n                            appearanceStreamString += \"<<\";\n                            if (Object.keys(value).length >= 1 || Array.isArray(value)) {\n                                // appearanceStream is an Array or Object!\n                                for (var i in value) {\n                                    if (value.hasOwnProperty(i)) {\n                                        var obj = value[i];\n                                        if (typeof obj === 'function') {\n                                            // if Function is referenced, call it in order\n                                            // to get the FormXObject\n                                            obj = obj.call(this, fieldObject);\n                                        }\n                                        appearanceStreamString += (\"/\" + i + \" \" + obj + \" \");\n\n                                        // In case the XForm is already used, e.g. OffState\n                                        // of CheckBoxes, don't add it\n                                        if (!(scope.internal.acroformPlugin.xForms.indexOf(obj) >= 0))\n                                            scope.internal.acroformPlugin.xForms.push(obj);\n\n                                    }\n                                }\n                            } else {\n                                obj = value;\n                                if (typeof obj === 'function') {\n                                    // if Function is referenced, call it in order to\n                                    // get the FormXObject\n                                    obj = obj.call(this, fieldObject);\n                                }\n                                appearanceStreamString += (\"/\" + i + \" \" + obj);\n                                if (!(scope.internal.acroformPlugin.xForms.indexOf(obj) >= 0))\n                                    scope.internal.acroformPlugin.xForms.push(obj);\n                            }\n                            appearanceStreamString += \">>\";\n                        }\n                    }\n\n                    // appearance stream is a normal Object..\n                    keyValueList.push({ key: 'AP', value: \"<<\\n\" + appearanceStreamString + \">>\" });\n                }\n\n                scope.internal.putStream({ additionalKeyValues: keyValueList });\n\n                scope.internal.out(\"endobj\");\n\n            }\n        }\n        if (standardFields) {\n            createXFormObjectCallback.call(this, scope.internal.acroformPlugin.xForms);\n        }\n    };\n\n    var createXFormObjectCallback = function (fieldArray) {\n        for (var i in fieldArray) {\n            if (fieldArray.hasOwnProperty(i)) {\n                var key = i;\n                var fieldObject = fieldArray[i];\n                // Start Writing the Object\n                scope.internal.newObjectDeferredBegin(fieldObject && fieldObject.objId, true);\n\n                if (typeof fieldObject === \"object\" && typeof fieldObject.putStream === \"function\") {\n                    fieldObject.putStream();\n                }\n                delete fieldArray[key];\n            }\n        }\n    };\n\n    var initializeAcroForm = function () {\n        if (this.internal !== undefined && (this.internal.acroformPlugin === undefined || this.internal.acroformPlugin.isInitialized === false)) {\n\n            scope = this;\n\n            AcroFormField.FieldNum = 0;\n            this.internal.acroformPlugin = JSON.parse(JSON.stringify(acroformPluginTemplate));\n            if (this.internal.acroformPlugin.acroFormDictionaryRoot) {\n                throw new Error(\"Exception while creating AcroformDictionary\");\n            }\n            scaleFactor = scope.internal.scaleFactor;\n            // The Object Number of the AcroForm Dictionary\n            scope.internal.acroformPlugin.acroFormDictionaryRoot = new AcroFormDictionary();\n\n            // add Callback for creating the AcroForm Dictionary\n            scope.internal.acroformPlugin.acroFormDictionaryRoot._eventID = scope.internal.events.subscribe('postPutResources', AcroFormDictionaryCallback);\n\n            scope.internal.events.subscribe('buildDocument', annotReferenceCallback); // buildDocument\n\n            // Register event, that is triggered when the DocumentCatalog is\n            // written, in order to add /AcroForm\n            scope.internal.events.subscribe('putCatalog', putCatalogCallback);\n\n            // Register event, that creates all Fields\n            scope.internal.events.subscribe('postPutPages', createFieldCallback);\n\n            scope.internal.acroformPlugin.isInitialized = true;\n        }\n    };\n\n    //PDF 32000-1:2008, page 26, 7.3.6\n    var arrayToPdfArray = jsPDFAPI.__acroform__.arrayToPdfArray = function (array) {\n        if (Array.isArray(array)) {\n            var content = '[';\n            for (var i = 0; i < array.length; i++) {\n                if (i !== 0) {\n                    content += ' ';\n                }\n                switch (typeof array[i]) {\n                    case 'boolean':\n                    case 'number':\n                    case 'object':\n                        content += array[i].toString();\n                        break;\n                    case 'string':\n                        if (array[i].substr(0, 1) !== '/') {\n                            content += '(' + pdfEscape(array[i].toString()) + ')';\n                        } else {\n                            content += array[i].toString();\n                        }\n                        break;\n                }\n            }\n            content += ']';\n            return content;\n        }\n        throw new Error('Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray');\n    };\n    function getMatches(string, regex, index) {\n        index || (index = 1); // default to the first capturing group\n        var matches = [];\n        var match;\n        while (match = regex.exec(string)) {\n            matches.push(match[index]);\n        }\n        return matches;\n    }\n    var pdfArrayToStringArray = function (array) {\n        var result = [];\n        if (typeof array === \"string\") {\n            result = getMatches(array, /\\((.*?)\\)/g);\n        }\n        return result;\n    };\n\n    var toPdfString = function (string) {\n        string = string || \"\";\n        string.toString();\n        string = '(' + pdfEscape(string) + ')';\n        return string;\n    };\n\n    // ##########################\n    // Classes\n    // ##########################\n\n    /**\n    * @class AcroFormPDFObject\n    * @classdesc A AcroFormPDFObject\n    */\n    var AcroFormPDFObject = function () {\n        var _objId;\n\n        /**\n        * @name AcroFormPDFObject#objId\n        * @type {any}\n        */\n        Object.defineProperty(this, 'objId', {\n            configurable: true,\n            get: function () {\n                if (!_objId) {\n                    _objId = scope.internal.newObjectDeferred();\n                }\n                return _objId\n            },\n            set: function (value) {\n                _objId = value;\n            }\n        });\n    };\n\n    /**\n    * @function AcroFormPDFObject.toString\n    */\n    AcroFormPDFObject.prototype.toString = function () {\n        return this.objId + \" 0 R\";\n    };\n\n    AcroFormPDFObject.prototype.putStream = function () {\n        var keyValueList = this.getKeyValueListForStream();\n        scope.internal.putStream({ data: this.stream, additionalKeyValues: keyValueList });\n        scope.internal.out(\"endobj\");\n    };\n\n    /**\n    * Returns an key-value-List of all non-configurable Variables from the Object\n    * \n    * @name getKeyValueListForStream\n    * @returns {string}\n    */\n    AcroFormPDFObject.prototype.getKeyValueListForStream = function () {\n        var createKeyValueListFromFieldObject = function (fieldObject) {\n            var keyValueList = [];\n            var keys = Object.getOwnPropertyNames(fieldObject).filter(function (key) {\n                return (key != 'content' && key != 'appearanceStreamContent' && key.substring(0, 1) != \"_\");\n            });\n\n            for (var i in keys) {\n                var propertyDescriptor = Object.getOwnPropertyDescriptor(fieldObject, keys[i]);\n                if (propertyDescriptor && propertyDescriptor.configurable === false) {\n                    var key = keys[i];\n                    var value = fieldObject[key];\n                    if (value) {\n                        if (Array.isArray(value)) {\n                            keyValueList.push({ key: key, value: arrayToPdfArray(value) });\n                        } else if (value instanceof AcroFormPDFObject) {\n                            // In case it is a reference to another PDFObject,\n                            // take the reference number\n                            keyValueList.push({ key: key, value: value.objId + \" 0 R\" });\n                        } else if (typeof value !== \"function\") {\n                            keyValueList.push({ key: key, value: value });\n                        }\n                    }\n                }\n            }\n            return keyValueList;\n        };\n\n        return createKeyValueListFromFieldObject(this);\n    };\n\n    var AcroFormXObject = function () {\n        AcroFormPDFObject.call(this);\n\n\n        Object.defineProperty(this, 'Type', {\n            value: \"/XObject\",\n            configurable: false,\n            writeable: true\n        });\n\n        Object.defineProperty(this, 'Subtype', {\n            value: \"/Form\",\n            configurable: false,\n            writeable: true\n        });\n\n        Object.defineProperty(this, 'FormType', {\n            value: 1,\n            configurable: false,\n            writeable: true\n        });\n\n        var _BBox = [];\n        Object.defineProperty(this, 'BBox', {\n            configurable: false,\n            writeable: true,\n            get: function () {\n                return _BBox;\n            },\n            set: function (value) {\n                _BBox = value;\n            }\n        });\n\n        Object.defineProperty(this, 'Resources', {\n            value: \"2 0 R\",\n            configurable: false,\n            writeable: true\n        });\n\n        var _stream;\n        Object.defineProperty(this, 'stream', {\n            enumerable: false,\n            configurable: true,\n            set: function (value) {\n                _stream = value.trim();\n            },\n            get: function () {\n                if (_stream) {\n                    return _stream;\n                } else {\n                    return null;\n                }\n            }\n        });\n    };\n\n    inherit(AcroFormXObject, AcroFormPDFObject);\n\n    var AcroFormDictionary = function () {\n        AcroFormPDFObject.call(this);\n\n        var _Kids = [];\n\n        Object.defineProperty(this, 'Kids', {\n            enumerable: false,\n            configurable: true,\n            get: function () {\n                if (_Kids.length > 0) {\n                    return _Kids;\n                } else {\n                    return undefined;\n                }\n            }\n        });\n        Object.defineProperty(this, 'Fields', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                return _Kids;\n            }\n        });\n\n        // Default Appearance\n        var _DA;\n        Object.defineProperty(this, 'DA', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                if (!_DA) {\n                    return undefined;\n                }\n                return '(' + _DA + ')'\n            },\n            set: function (value) {\n                _DA = value;\n            }\n        });\n    };\n\n    inherit(AcroFormDictionary, AcroFormPDFObject);\n\n    /**\n    * The Field Object contains the Variables, that every Field needs\n    * \n    * @class AcroFormField\n    * @classdesc An AcroForm FieldObject\n    */\n    var AcroFormField = function () {\n        AcroFormPDFObject.call(this);\n\n        //Annotation-Flag See Table 165\n        var _F = 4;\n        this.isUnicode = false;\n        this.trueValue = '';\n        Object.defineProperty(this, 'F', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                return _F;\n            },\n            set: function (value) {\n                if (!isNaN(value)) {\n                    _F = value;\n                } else {\n                    throw new Error('Invalid value \"' + value + '\" for attribute F supplied.');\n                }\n            }\n        });\n\n        /**\n        * (PDF 1.2) If set, print the annotation when the page is printed. If clear, never print the annotation, regardless of wether is is displayed on the screen. \n        * NOTE 2 This can be useful for annotations representing interactive pushbuttons, which would serve no meaningful purpose on the printed page.\n        *\n        * @name AcroFormField#showWhenPrinted\n        * @default true\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'showWhenPrinted', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(_F, 3));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.F = setBitForPdf(_F, 3);\n                } else {\n                    this.F = clearBitForPdf(_F, 3);\n                }\n            }\n        });\n\n        var _Ff = 0;\n        Object.defineProperty(this, 'Ff', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                return _Ff;\n            },\n            set: function (value) {\n                if (!isNaN(value)) {\n                    _Ff = value;\n                } else {\n                    throw new Error('Invalid value \"' + value + '\" for attribute Ff supplied.');\n                }\n            }\n        });\n\n        var _Rect = [];\n        Object.defineProperty(this, 'Rect', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                if (_Rect.length === 0) {\n                    return undefined;\n                }\n                return _Rect;\n            },\n            set: function (value) {\n                if (typeof value !== \"undefined\") {\n                    _Rect = value;\n                } else {\n                    _Rect = [];\n                }\n            }\n        });\n\n        /**\n        * The x-position of the field.\n        *\n        * @name AcroFormField#x\n        * @default null\n        * @type {number}\n        */\n        Object.defineProperty(this, 'x', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                if (!_Rect || isNaN(_Rect[0])) {\n                    return 0;\n                }\n                return antiScale(_Rect[0]);\n            },\n            set: function (value) {\n                _Rect[0] = scale(value);\n            }\n        });\n\n        /**\n        * The y-position of the field.\n        *\n        * @name AcroFormField#y\n        * @default null\n        * @type {number}\n        */\n        Object.defineProperty(this, 'y', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                if (!_Rect || isNaN(_Rect[1])) {\n                    return 0;\n                }\n                return antiScale(_Rect[1]);\n            },\n            set: function (value) {\n                _Rect[1] = scale(value);\n            }\n        });\n\n        /**\n        * The width of the field.\n        *\n        * @name AcroFormField#width\n        * @default null\n        * @type {number}\n        */\n        Object.defineProperty(this, 'width', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                if (!_Rect || isNaN(_Rect[2])) {\n                    return 0;\n                }\n                return antiScale(_Rect[2]);\n            },\n            set: function (value) {\n                _Rect[2] = scale(value);\n            }\n        });\n\n        /**\n        * The height of the field.\n        *\n        * @name AcroFormField#height\n        * @default null\n        * @type {number}\n        */\n        Object.defineProperty(this, 'height', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                if (!_Rect || isNaN(_Rect[3])) {\n                    return 0;\n                }\n                return antiScale(_Rect[3]);\n            },\n            set: function (value) {\n                _Rect[3] = scale(value);\n            }\n        });\n\n        var _FT = \"\";\n        Object.defineProperty(this, 'FT', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                return _FT\n            },\n            set: function (value) {\n                switch (value) {\n                    case '/Btn':\n                    case '/Tx':\n                    case '/Ch':\n                    case '/Sig':\n                        _FT = value;\n                        break;\n                    default:\n                        throw new Error('Invalid value \"' + value + '\" for attribute FT supplied.');\n                }\n            }\n        });\n\n        var _T = null;\n\n        Object.defineProperty(this, 'T', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                if (!_T || _T.length < 1) {\n                    // In case of a Child from a Radio´Group, you don't need a FieldName\n                    if (this instanceof AcroFormChildClass) {\n                        return undefined;\n                    }\n                    _T = \"FieldObject\" + (AcroFormField.FieldNum++);\n                }\n                return '(' + pdfEscape(_T) + ')';\n            },\n            set: function (value) {\n                _T = value.toString();\n            }\n        });\n\n        /**\n        * (Optional) The partial field name (see 12.7.3.2, “Field Names”).\n        *\n        * @name AcroFormField#fieldName\n        * @default null\n        * @type {string}\n        */\n        Object.defineProperty(this, 'fieldName', {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return _T;\n            },\n            set: function (value) {\n                _T = value;\n            }\n        });\n\n        var _fontName = 'helvetica';\n        /**\n        * The fontName of the font to be used.\n        *\n        * @name AcroFormField#fontName\n        * @default 'helvetica'\n        * @type {string}\n        */\n        Object.defineProperty(this, 'fontName', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return _fontName;\n            },\n            set: function (value) {\n                _fontName = value;\n            }\n        });\n\n        var _fontStyle = 'normal';\n        /**\n        * The fontStyle of the font to be used.\n        *\n        * @name AcroFormField#fontStyle\n        * @default 'normal'\n        * @type {string}\n        */\n        Object.defineProperty(this, 'fontStyle', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return _fontStyle;\n            },\n            set: function (value) {\n                _fontStyle = value;\n            }\n        });\n\n        var _fontSize = 0;\n        /**\n        * The fontSize of the font to be used.\n        *\n        * @name AcroFormField#fontSize\n        * @default 0 (for auto)\n        * @type {number}\n        */\n        Object.defineProperty(this, 'fontSize', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return antiScale(_fontSize);\n            },\n            set: function (value) {\n                _fontSize = scale(value);\n            }\n        });\n\n        var _maxFontSize = 50;\n        /**\n        * The maximum fontSize of the font to be used.\n        *\n        * @name AcroFormField#maxFontSize\n        * @default 0 (for auto)\n        * @type {number}\n        */\n        Object.defineProperty(this, 'maxFontSize', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return antiScale(_maxFontSize);\n            },\n            set: function (value) {\n                _maxFontSize = scale(value);\n            }\n        });\n\n        var _color = 'black';\n        /**\n        * The color of the text\n        *\n        * @name AcroFormField#color\n        * @default 'black'\n        * @type {string|rgba}\n        */\n        Object.defineProperty(this, 'color', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return _color;\n            },\n            set: function (value) {\n                _color = value;\n            }\n        });\n\n        var _DA = '/F1 0 Tf 0 g';\n        // Defines the default appearance (Needed for variable Text)\n        Object.defineProperty(this, 'DA', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                if (!_DA\n                    || this instanceof AcroFormChildClass\n                    || this instanceof AcroFormTextField) {\n                    return undefined;\n                }\n                return toPdfString(_DA);\n            },\n            set: function (value) {\n                value = value.toString();\n                _DA = value;\n            }\n        });\n\n\n        var _DV = null;\n        Object.defineProperty(this, 'DV', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                if (!_DV) {\n                    return undefined;\n                }\n                if ((this instanceof AcroFormButton === false)) {\n                    return toPdfString(_DV);\n                }\n                return _DV;\n            },\n            set: function (value) {\n                value = value.toString();\n                if ((this instanceof AcroFormButton === false)) {\n                    if (value.substr(0, 1) === '(') {\n                        _DV = pdfUnescape(value.substr(1, value.length - 2));\n                    } else {\n                        _DV = pdfUnescape(value);\n                    }\n                } else {\n                    _DV = value;\n                }\n            }\n        });\n\n        /**\n        * (Optional; inheritable) The default value to which the field reverts when a reset-form action is executed (see 12.7.5.3, “Reset-Form Action”). The format of this value is the same as that of value. \n        *\n        * @name AcroFormField#defaultValue\n        * @default null\n        * @type {any}\n        */\n        Object.defineProperty(this, 'defaultValue', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                if ((this instanceof AcroFormButton === true)) {\n                    return pdfUnescape(_DV.substr(1, _DV.length - 1));\n                } else {\n                    return _DV;\n                }\n            },\n            set: function (value) {\n                value = value.toString();\n                if ((this instanceof AcroFormButton === true)) {\n                    _DV = '/' + value;\n                } else {\n                    _DV = value;\n                }\n            }\n        });\n\n        var _V = null;\n        Object.defineProperty(this, 'V', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                if (this.isUnicode) {\n                    return _V;\n                }\n                if (!_V) {\n                    return undefined;\n                }\n                if ((this instanceof AcroFormButton === false)) {\n                    return toPdfString(_V);\n                }\n                return _V;\n            },\n            set: function (value) {\n                value = value.toString();\n                if (this.isUnicode) {\n                    _V = toUnicode(value);\n                    this.trueValue = value;\n                }\n                else {\n                    if ((this instanceof AcroFormButton === false)) {\n                        if (value.substr(0, 1) === '(') {\n                            _V = pdfUnescape(value.substr(1, value.length - 2));\n                        } else {\n                            _V = pdfUnescape(value);\n                        }\n                    } else {\n                        _V = value;\n                    }\n                }\n            }\n        });\n\n        /**\n        * (Optional; inheritable) The field’s value, whose format varies depending on the field type. See the descriptions of individual field types for further information. \n        *\n        * @name AcroFormField#value\n        * @default null\n        * @type {any}\n        */\n        Object.defineProperty(this, 'value', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                if ((this instanceof AcroFormButton === true)) {\n                    return pdfUnescape(_V.substr(1, _V.length - 1));\n                } else {\n                    return _V;\n                }\n            },\n            set: function (value) {\n                value = value.toString();\n                if ((this instanceof AcroFormButton === true)) {\n                    _V = '/' + value;\n                } else {\n                    _V = value;\n                }\n            }\n        });\n\n        /**\n        * Check if field has annotations\n        *\n        * @name AcroFormField#hasAnnotation\n        * @readonly\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'hasAnnotation', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return (this.Rect);\n            }\n        });\n\n        Object.defineProperty(this, 'Type', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                return (this.hasAnnotation) ? \"/Annot\" : null;\n            }\n        });\n\n        Object.defineProperty(this, 'Subtype', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                return (this.hasAnnotation) ? \"/Widget\" : null;\n            }\n        });\n\n        var _hasAppearanceStream = false;\n        /**\n        * true if field has an appearanceStream\n        *\n        * @name AcroFormField#hasAppearanceStream\n        * @readonly\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'hasAppearanceStream', {\n            enumerable: true,\n            configurable: true,\n            writeable: true,\n            get: function () {\n                return _hasAppearanceStream;\n            },\n            set: function (value) {\n                value = Boolean(value);\n                _hasAppearanceStream = value;\n            }\n        });\n\n        /**\n        * The page on which the AcroFormField is placed\n        *\n        * @name AcroFormField#page\n        * @type {number}\n        */\n        var _page;\n        Object.defineProperty(this, 'page', {\n            enumerable: true,\n            configurable: true,\n            writeable: true,\n            get: function () {\n                if (!_page) {\n                    return undefined;\n                }\n                return _page\n            },\n            set: function (value) {\n                _page = value;\n            }\n        });\n\n        /**\n        * If set, the user may not change the value of the field. Any associated widget annotations will not interact with the user; that is, they will not respond to mouse clicks or change their appearance in response to mouse motions. This flag is useful for fields whose values are computed or imported from a database. \n        *\n        * @name AcroFormField#readOnly\n        * @default false\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'readOnly', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 1));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 1);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 1);\n                }\n            }\n        });\n\n        /**\n        * If set, the field shall have a value at the time it is exported by a submitform action (see 12.7.5.2, “Submit-Form Action”). \n        *\n        * @name AcroFormField#required\n        * @default false\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'required', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 2));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 2);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 2);\n                }\n            }\n        });\n\n        /**\n        * If set, the field shall not be exported by a submit-form action (see 12.7.5.2, “Submit-Form Action”)\n        *\n        * @name AcroFormField#noExport\n        * @default false\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'noExport', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 3));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 3);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 3);\n                }\n            }\n        });\n\n\n        var _Q = null;\n        Object.defineProperty(this, 'Q', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                if (_Q === null) {\n                    return undefined;\n                }\n                return _Q;\n            },\n            set: function (value) {\n                if ([0, 1, 2].indexOf(value) !== -1) {\n                    _Q = value;\n                } else {\n                    throw new Error('Invalid value \"' + value + '\" for attribute Q supplied.');\n                }\n            }\n        });\n\n        /**\n        * (Optional; inheritable) A code specifying the form of quadding (justification) that shall be used in displaying the text:\n        * 'left', 'center', 'right'\n        *\n        * @name AcroFormField#textAlign\n        * @default 'left'\n        * @type {string}\n        */\n        Object.defineProperty(this, 'textAlign', {\n            get: function () {\n                var result;\n                switch (_Q) {\n                    case 0:\n                    default:\n                        result = 'left';\n                        break;\n                    case 1:\n                        result = 'center';\n                        break;\n                    case 2:\n                        result = 'right';\n                        break;\n                }\n                return result;\n            },\n            configurable: true,\n            enumerable: true,\n            set: function (value) {\n                switch (value) {\n                    case 'right':\n                    case 2:\n                        _Q = 2;\n                        break;\n                    case 'center':\n                    case 1:\n                        _Q = 1;\n                        break;\n                    case 'left':\n                    case 0:\n                    default:\n                        _Q = 0;\n                }\n            }\n        });\n\n    };\n\n    inherit(AcroFormField, AcroFormPDFObject);\n\n    /**\n    * @class AcroFormChoiceField\n    * @extends AcroFormField\n    */\n    var AcroFormChoiceField = function () {\n        AcroFormField.call(this);\n        // Field Type = Choice Field\n        this.FT = \"/Ch\";\n        // options\n        this.V = '()';\n\n        this.fontName = 'zapfdingbats';\n        // Top Index\n        var _TI = 0;\n\n        Object.defineProperty(this, 'TI', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                return _TI;\n            },\n            set: function (value) {\n                _TI = value;\n            }\n        });\n\n        // MK fix for Acrobat\n        var _MK = '<< /BG [ 0.975 0.975 0.975 ]  >>';\n        Object.defineProperty(this, 'MK', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                return _MK;\n            },\n            set: function (value) {\n                _MK = value;\n            }\n        });\n\n        /**\n        * (Optional) For scrollable list boxes, the top index (the index in the Opt array of the first option visible in the list). Default value: 0.\n        * \n        * @name AcroFormChoiceField#topIndex\n        * @default 0\n        * @type {number}\n        */\n        Object.defineProperty(this, 'topIndex', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return _TI;\n            },\n            set: function (value) {\n                _TI = value;\n            }\n        });\n\n        var _Opt = [];\n        Object.defineProperty(this, 'Opt', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                if (this.isUnicode) {\n                    return arrayToPdfUnicodeArray(_Opt);\n                }\n                return arrayToPdfArray(_Opt);\n            },\n            set: function (value) {\n                _Opt = pdfArrayToStringArray(value);\n            }\n        });\n\n\n        /**\n        * @memberof AcroFormChoiceField\n        * @name getOptions\n        * @function\n        * @instance\n        * @returns {array} array of Options\n        */\n        this.getOptions = function () {\n            return _Opt;\n        }\n\n        /**\n        * @memberof AcroFormChoiceField\n        * @name setOptions\n        * @function\n        * @instance\n        * @param {array} value\n        */\n        this.setOptions = function (value) {\n            _Opt = value;\n            if (this.sort) {\n                _Opt.sort();\n            }\n        }\n\n        /**\n        * @memberof AcroFormChoiceField\n        * @name addOption\n        * @function\n        * @instance\n        * @param {string} value\n        */\n        this.addOption = function (value) {\n            value = value || \"\";\n            value = value.toString();\n            _Opt.push(value);\n            if (this.sort) {\n                _Opt.sort();\n            }\n        }\n\n        /**\n        * @memberof AcroFormChoiceField\n        * @name removeOption\n        * @function\n        * @instance\n        * @param {string} value\n        * @param {boolean} allEntries (default: false)\n        */\n        this.removeOption = function (value, allEntries) {\n            allEntries = allEntries || false\n            value = value || \"\";\n            value = value.toString();\n\n            while (_Opt.indexOf(value) !== -1) {\n                _Opt.splice(_Opt.indexOf(value), 1);\n                if (allEntries === false) {\n                    break;\n                }\n            }\n        };\n\n        /**\n        * If set, the field is a combo box; if clear, the field is a list box. \n        *\n        * @name AcroFormChoiceField#combo\n        * @default false\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'combo', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 18));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 18);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 18);\n                }\n            }\n        });\n\n        /**\n        * If set, the combo box shall include an editable text box as well as a drop-down list; if clear, it shall include only a drop-down list. This flag shall be used only if the Combo flag is set. \n        *\n        * @name AcroFormChoiceField#edit\n        * @default false\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'edit', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 19));\n            },\n            set: function (value) {\n                //PDF 32000-1:2008, page 444\n                if (this.combo === true) {\n                    if (Boolean(value) === true) {\n                        this.Ff = setBitForPdf(this.Ff, 19);\n                    } else {\n                        this.Ff = clearBitForPdf(this.Ff, 19);\n                    }\n                }\n            }\n        });\n\n        /**\n        * If set, the field’s option items shall be sorted alphabetically. This flag is intended for use by writers, not by readers. Conforming readers shall display the options in the order in which they occur in the Opt array (see Table 231). \n        *\n        * @name AcroFormChoiceField#sort\n        * @default false\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'sort', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 20));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 20);\n                    _Opt.sort();\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 20);\n                }\n            }\n        });\n\n        /**\n        * (PDF 1.4) If set, more than one of the field’s option items may be selected simultaneously; if clear, at most one item shall be selected \n        *\n        * @name AcroFormChoiceField#multiSelect\n        * @default false\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'multiSelect', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 22));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 22);\n\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 22);\n                }\n            }\n        });\n\n        /**\n        * (PDF 1.4) If set, text entered in the field shall not be spellchecked. This flag shall not be used unless the Combo and Edit flags are both set. \n        *\n        * @name AcroFormChoiceField#doNotSpellCheck\n        * @default false\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'doNotSpellCheck', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 23));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 23);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 23);\n                }\n            }\n        });\n\n        /**\n        * (PDF 1.5) If set, the new value shall be committed as soon as a selection is made (commonly with the pointing device). In this case, supplying a value for a field involves three actions: selecting the field for fill-in, selecting a choice for the fill-in value, and leaving that field, which finalizes or “commits” the data choice and triggers any actions associated with the entry or changing of this data. If this flag is on, then processing does not wait for leaving the field action to occur, but immediately proceeds to the third step.\n        * This option enables applications to perform an action once a selection is made, without requiring the user to exit the field. If clear, the new value is not committed until the user exits the field.\n        *\n        * @name AcroFormChoiceField#commitOnSelChange\n        * @default false\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'commitOnSelChange', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 27));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 27);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 27);\n                }\n            }\n        });\n\n\n        this.hasAppearanceStream = false;\n    };\n    inherit(AcroFormChoiceField, AcroFormField);\n\n    /**\n    * @class AcroFormListBox\n    * @extends AcroFormChoiceField\n    * @extends AcroFormField\n    */\n    var AcroFormListBox = function () {\n        AcroFormChoiceField.call(this);\n        this.fontName = 'helvetica';\n\n        //PDF 32000-1:2008, page 444\n        this.combo = false;\n    };\n    inherit(AcroFormListBox, AcroFormChoiceField);\n\n    /**\n    * @class AcroFormComboBox \n    * @extends AcroFormListBox\n    * @extends AcroFormChoiceField\n    * @extends AcroFormField\n    */\n    var AcroFormComboBox = function () {\n        AcroFormListBox.call(this);\n        this.combo = true;\n    };\n    inherit(AcroFormComboBox, AcroFormListBox);\n\n    /**\n    * @class AcroFormEditBox \n    * @extends AcroFormComboBox\n    * @extends AcroFormListBox\n    * @extends AcroFormChoiceField\n    * @extends AcroFormField\n    */\n    var AcroFormEditBox = function () {\n        AcroFormComboBox.call(this);\n        this.edit = true;\n    };\n    inherit(AcroFormEditBox, AcroFormComboBox);\n\n    /**\n    * @class AcroFormButton\n    * @extends AcroFormField\n    */\n    var AcroFormButton = function () {\n        AcroFormField.call(this);\n        this.FT = \"/Btn\";\n\n        /**\n        * (Radio buttons only) If set, exactly one radio button shall be selected at all times; selecting the currently selected button has no effect. If clear, clicking the selected button deselects it, leaving no button selected.\n        * \n        * @name AcroFormButton#noToggleToOff\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'noToggleToOff', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 15));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 15);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 15);\n                }\n            }\n        });\n\n        /**\n        * If set, the field is a set of radio buttons; if clear, the field is a checkbox. This flag may be set only if the Pushbutton flag is clear. \n        * \n        * @name AcroFormButton#radio\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'radio', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 16));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 16);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 16);\n                }\n            }\n        });\n\n        /**\n        * If set, the field is a pushbutton that does not retain a permanent value. \n        *\n        * @name AcroFormButton#pushButton\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'pushButton', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 17));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 17);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 17);\n                }\n            }\n        });\n\n        /**\n        * (PDF 1.5) If set, a group of radio buttons within a radio button field that use the same value for the on state will turn on and off in unison; that is if one is checked, they are all checked. If clear, the buttons are mutually exclusive (the same behavior as HTML radio buttons).\n        *\n        * @name AcroFormButton#radioIsUnison\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'radioIsUnison', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 26));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 26);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 26);\n                }\n            }\n        });\n\n        var _MK = {};\n        Object.defineProperty(this, 'MK', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                if (Object.keys(_MK).length !== 0) {\n                    var result = [];\n                    result.push('<<');\n                    var key;\n                    for (key in _MK) {\n                        result.push('/' + key + ' (' + _MK[key] + ')');\n                    }\n                    result.push('>>');\n                    return result.join('\\n');\n                }\n                return undefined;\n            },\n            set: function (value) {\n                if (typeof value === \"object\") {\n                    _MK = value\n                }\n            }\n        });\n\n        /**\n        * From the PDF reference:\n        * (Optional, button fields only) The widget annotation's normal caption which shall be displayed when it is not interacting with the user. \n        * Unlike the remaining entries listed in this Table which apply only to widget annotations associated with pushbutton fields (see Pushbuttons in 12.7.4.2, \"Button Fields\"), the CA entry may be used with any type of button field, including check boxes (see Check Boxes in 12.7.4.2, \"Button Fields\") and radio buttons (Radio Buttons in 12.7.4.2, \"Button Fields\").\n        *\n        * - '8' = Cross, \n        * - 'l' =  Circle,\n        * - '' = nothing\n        * @name AcroFormButton#caption\n        * @type {string}\n        */\n        Object.defineProperty(this, 'caption', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return _MK.CA || '';\n            },\n            set: function (value) {\n                if (typeof value === \"string\") {\n                    _MK.CA = value;\n                }\n            }\n        });\n\n        var _AS;\n        Object.defineProperty(this, 'AS', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                return _AS;\n            },\n            set: function (value) {\n                _AS = value;\n            }\n        });\n\n\n        /**\n        * (Required if the appearance dictionary AP contains one or more subdictionaries; PDF 1.2) The annotation's appearance state, which selects the applicable appearance stream from an appearance subdictionary (see Section 12.5.5, \"Appearance Streams\")\n        *\n        * @name AcroFormButton#appearanceState\n        * @type {any}\n        */\n        Object.defineProperty(this, 'appearanceState', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return _AS.substr(1, _AS.length - 1);\n            },\n            set: function (value) {\n                _AS = '/' + value;\n            }\n        });\n\n    };\n    inherit(AcroFormButton, AcroFormField);\n\n    /**\n    * @class AcroFormPushButton\n    * @extends AcroFormButton\n    * @extends AcroFormField\n    */\n    var AcroFormPushButton = function () {\n        AcroFormButton.call(this);\n        this.pushButton = true;\n    };\n    inherit(AcroFormPushButton, AcroFormButton);\n\n    /**\n    * @class AcroFormRadioButton\n    * @extends AcroFormButton\n    * @extends AcroFormField\n    */\n    var AcroFormRadioButton = function () {\n        AcroFormButton.call(this);\n        this.radio = true;\n        this.pushButton = false;\n\n        var _Kids = [];\n        Object.defineProperty(this, 'Kids', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                return _Kids;\n            },\n            set: function (value) {\n                if (typeof value !== \"undefined\") {\n                    _Kids = value;\n                } else {\n                    _Kids = [];\n                }\n            }\n        });\n    };\n    inherit(AcroFormRadioButton, AcroFormButton);\n\n    /**\n    * The Child class of a RadioButton (the radioGroup) -> The single Buttons\n    * \n    * @class AcroFormChildClass\n    * @extends AcroFormField\n    * @ignore\n    */\n    var AcroFormChildClass = function () {\n        AcroFormField.call(this);\n\n        var _parent;\n        Object.defineProperty(this, 'Parent', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                return _parent;\n            },\n            set: function (value) {\n                _parent = value;\n            }\n        });\n\n        var _optionName;\n        Object.defineProperty(this, 'optionName', {\n            enumerable: false,\n            configurable: true,\n            get: function () {\n                return _optionName;\n            },\n            set: function (value) {\n                _optionName = value;\n            }\n        });\n\n        var _MK = {};\n        Object.defineProperty(this, 'MK', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                var result = [];\n                result.push('<<');\n                var key;\n                for (key in _MK) {\n                    result.push('/' + key + ' (' + _MK[key] + ')');\n                }\n                result.push('>>');\n                return result.join('\\n');\n            },\n            set: function (value) {\n                if (typeof value === \"object\") {\n                    _MK = value\n                }\n            }\n        });\n\n        /**\n        * From the PDF reference:\n        * (Optional, button fields only) The widget annotation's normal caption which shall be displayed when it is not interacting with the user. \n        * Unlike the remaining entries listed in this Table which apply only to widget annotations associated with pushbutton fields (see Pushbuttons in 12.7.4.2, \"Button Fields\"), the CA entry may be used with any type of button field, including check boxes (see Check Boxes in 12.7.4.2, \"Button Fields\") and radio buttons (Radio Buttons in 12.7.4.2, \"Button Fields\").\n        *\n        * - '8' = Cross, \n        * - 'l' =  Circle,\n        * - '' = nothing\n        * @name AcroFormButton#caption\n        * @type {string}\n        */\n        Object.defineProperty(this, 'caption', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return _MK.CA || '';\n            },\n            set: function (value) {\n                if (typeof value === \"string\") {\n                    _MK.CA = value;\n                }\n            }\n        });\n\n        var _AS;\n        Object.defineProperty(this, 'AS', {\n            enumerable: false,\n            configurable: false,\n            get: function () {\n                return _AS;\n            },\n            set: function (value) {\n                _AS = value;\n            }\n        });\n\n        /**\n        * (Required if the appearance dictionary AP contains one or more subdictionaries; PDF 1.2) The annotation's appearance state, which selects the applicable appearance stream from an appearance subdictionary (see Section 12.5.5, \"Appearance Streams\")\n        *\n        * @name AcroFormButton#appearanceState\n        * @type {any}\n        */\n        Object.defineProperty(this, 'appearanceState', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return _AS.substr(1, _AS.length - 1);\n            },\n            set: function (value) {\n                _AS = '/' + value;\n            }\n        });\n        this.caption = 'l';\n        this.appearanceState = 'Off';\n        // todo: set AppearanceType as variable that can be set from the\n        // outside...\n        this._AppearanceType = AcroFormAppearance.RadioButton.Circle;\n        // The Default appearanceType is the Circle\n        this.appearanceStreamContent = this._AppearanceType.createAppearanceStream(this.optionName);\n    };\n    inherit(AcroFormChildClass, AcroFormField);\n\n    AcroFormRadioButton.prototype.setAppearance = function (appearance) {\n        if (!('createAppearanceStream' in appearance && 'getCA' in appearance)) {\n            throw new Error(\"Couldn't assign Appearance to RadioButton. Appearance was Invalid!\");\n        }\n        for (var objId in this.Kids) {\n            if (this.Kids.hasOwnProperty(objId)) {\n                var child = this.Kids[objId];\n                child.appearanceStreamContent = appearance.createAppearanceStream(child.optionName);\n                child.caption = appearance.getCA();\n            }\n        }\n    };\n\n    AcroFormRadioButton.prototype.createOption = function (name) {\n        // Create new Child for RadioGroup\n        var child = new AcroFormChildClass();\n        child.Parent = this;\n        child.optionName = name;\n        // Add to Parent\n        this.Kids.push(child);\n\n        addField.call(this, child);\n\n        return child;\n    };\n\n    /**\n    * @class AcroFormCheckBox\n    * @extends AcroFormButton\n    * @extends AcroFormField\n    */\n    var AcroFormCheckBox = function () {\n        AcroFormButton.call(this);\n\n        this.fontName = 'zapfdingbats';\n        this.caption = '3';\n        this.appearanceState = 'On';\n        this.value = \"On\";\n        this.textAlign = 'center';\n        this.appearanceStreamContent = AcroFormAppearance.CheckBox.createAppearanceStream();\n    };\n    inherit(AcroFormCheckBox, AcroFormButton);\n\n    /**\n    * @class AcroFormTextField\n    * @extends AcroFormField\n    */\n    var AcroFormTextField = function () {\n        AcroFormField.call(this);\n        this.FT = '/Tx';\n\n        /**\n        * If set, the field may contain multiple lines of text; if clear, the field’s text shall be restricted to a single line. \n        *\n        * @name AcroFormTextField#multiline\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'multiline', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 13));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 13);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 13);\n                }\n            }\n        });\n\n        /**\n        * (PDF 1.4) If set, the text entered in the field represents the pathname of a file whose contents shall be submitted as the value of the field. \n        * \n        * @name AcroFormTextField#fileSelect\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'fileSelect', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 21));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 21);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 21);\n                }\n            }\n        });\n\n        /**\n        * (PDF 1.4) If set, text entered in the field shall not be spell-checked. \n        *\n        * @name AcroFormTextField#doNotSpellCheck\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'doNotSpellCheck', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 23));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 23);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 23);\n                }\n            }\n        });\n\n        /**\n        * (PDF 1.4) If set, the field shall not scroll (horizontally for single-line fields, vertically for multiple-line fields) to accommodate more text than fits within its annotation rectangle. Once the field is full, no further text shall be accepted for interactive form filling; for noninteractive form filling, the filler should take care not to add more character than will visibly fit in the defined area. \n        * \n        * @name AcroFormTextField#doNotScroll\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'doNotScroll', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 24));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 24);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 24);\n                }\n            }\n        });\n\n        /**\n        * (PDF 1.5) May be set only if the MaxLen entry is present in the text field dictionary (see Table 229) and if the Multiline, Password, and FileSelect flags are clear. If set, the field shall be automatically divided into as many equally spaced positions, or combs, as the value of MaxLen, and the text is laid out into those combs.\n        * \n        * @name AcroFormTextField#comb\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'comb', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 25));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 25);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 25);\n                }\n            }\n        });\n\n        /**\n        * (PDF 1.5) If set, the value of this field shall be a rich text string (see 12.7.3.4, “Rich Text Strings”). If the field has a value, the RV entry of the field dictionary (Table 222) shall specify the rich text string.\n        * \n        * @name AcroFormTextField#richText\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'richText', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 26));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 26);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 26);\n                }\n            }\n        });\n\n        var _MaxLen = null;\n        Object.defineProperty(this, 'MaxLen', {\n            enumerable: true,\n            configurable: false,\n            get: function () {\n                return _MaxLen;\n            },\n            set: function (value) {\n                _MaxLen = value;\n            }\n        });\n\n        /**\n        * (Optional; inheritable) The maximum length of the field’s text, in characters. \n        *\n        * @name AcroFormTextField#maxLength\n        * @type {number}\n        */\n        Object.defineProperty(this, 'maxLength', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return _MaxLen;\n            },\n            set: function (value) {\n                if (Number.isInteger(value)) {\n                    _MaxLen = value;\n                }\n            }\n        });\n\n\n        Object.defineProperty(this, 'hasAppearanceStream', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return (this.V || this.DV);\n            }\n        });\n\n    };\n    inherit(AcroFormTextField, AcroFormField);\n\n    /**\n    * @class AcroFormPasswordField\n    * @extends AcroFormTextField\n    * @extends AcroFormField\n    */\n    var AcroFormPasswordField = function () {\n        AcroFormTextField.call(this);\n\n        /**\n        * If set, the field is intended for entering a secure password that should not be echoed visibly to the screen. Characters typed from the keyboard shall instead be echoed in some unreadable form, such as asterisks or bullet characters.\n        * NOTE To protect password confidentiality, readers should never store the value of the text field in the PDF file if this flag is set. \n        *\n        * @name AcroFormTextField#password\n        * @type {boolean}\n        */\n        Object.defineProperty(this, 'password', {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return Boolean(getBitForPdf(this.Ff, 14));\n            },\n            set: function (value) {\n                if (Boolean(value) === true) {\n                    this.Ff = setBitForPdf(this.Ff, 14);\n                } else {\n                    this.Ff = clearBitForPdf(this.Ff, 14);\n                }\n            }\n        });\n        this.password = true;\n    };\n    inherit(AcroFormPasswordField, AcroFormTextField);\n\n\n    // Contains Methods for creating standard appearances\n    var AcroFormAppearance = {\n        CheckBox: {\n            createAppearanceStream: function () {\n                var appearance = {\n                    N: {\n                        On: AcroFormAppearance.CheckBox.YesNormal\n                    },\n                    D: {\n                        On: AcroFormAppearance.CheckBox.YesPushDown,\n                        Off: AcroFormAppearance.CheckBox.OffPushDown\n                    }\n                };\n\n                return appearance;\n            },\n            /**\n              * Returns the standard On Appearance for a CheckBox\n              * \n              * @returns {AcroFormXObject}\n              */\n            YesPushDown: function (formObject) {\n                var xobj = new createFormXObject(formObject);\n                var stream = [];\n                var fontKey = scope.internal.getFont(formObject.fontName, formObject.fontStyle).id;\n                var encodedColor = scope.__private__.encodeColorString(formObject.color);\n                var calcRes = calculateX(formObject, formObject.caption);\n                stream.push(\"0.749023 g\");\n                stream.push(\"0 0 \" + f2(AcroFormAppearance.internal.getWidth(formObject)) + \" \" + f2(AcroFormAppearance.internal.getHeight(formObject)) + \" re\");\n                stream.push(\"f\");\n                stream.push(\"BMC\");\n                stream.push(\"q\");\n                stream.push(\"0 0 1 rg\");\n                stream.push(\"/\" + fontKey + \" \" + f2(calcRes.fontSize) + \" Tf \" + encodedColor);\n                stream.push(\"BT\");\n                stream.push(calcRes.text);\n                stream.push(\"ET\");\n                stream.push(\"Q\");\n                stream.push(\"EMC\");\n                xobj.stream = stream.join(\"\\n\");\n                return xobj;\n            },\n\n            YesNormal: function (formObject) {\n                var xobj = new createFormXObject(formObject);\n                var fontKey = scope.internal.getFont(formObject.fontName, formObject.fontStyle).id;\n                var encodedColor = scope.__private__.encodeColorString(formObject.color);\n                var stream = [];\n                var height = AcroFormAppearance.internal.getHeight(formObject);\n                var width = AcroFormAppearance.internal.getWidth(formObject);\n                var calcRes = calculateX(formObject, formObject.caption);\n                stream.push(\"1 g\");\n                stream.push(\"0 0 \" + f2(width) + \" \" + f2(height) + \" re\");\n                stream.push(\"f\");\n                stream.push(\"q\");\n                stream.push(\"0 0 1 rg\");\n                stream.push(\"0 0 \" + f2(width - 1) + \" \" + f2(height - 1) + \" re\");\n                stream.push(\"W\");\n                stream.push(\"n\");\n                stream.push(\"0 g\");\n                stream.push(\"BT\");\n                stream.push(\"/\" + fontKey + \" \" + f2(calcRes.fontSize) + \" Tf \" + encodedColor);\n                stream.push(calcRes.text);\n                stream.push(\"ET\");\n                stream.push(\"Q\");\n                xobj.stream = stream.join(\"\\n\");\n                return xobj;\n            },\n\n            /**\n              * Returns the standard Off Appearance for a CheckBox\n              * \n              * @returns {AcroFormXObject}\n              */\n            OffPushDown: function (formObject) {\n                var xobj = new createFormXObject(formObject);\n                var stream = [];\n                stream.push(\"0.749023 g\");\n                stream.push(\"0 0 \" + f2(AcroFormAppearance.internal.getWidth(formObject)) + \" \" + f2(AcroFormAppearance.internal.getHeight(formObject)) + \" re\");\n                stream.push(\"f\");\n                xobj.stream = stream.join(\"\\n\");\n                return xobj;\n            }\n        },\n\n        RadioButton: {\n            Circle: {\n                createAppearanceStream: function (name) {\n                    var appearanceStreamContent = {\n                        D: {\n                            'Off': AcroFormAppearance.RadioButton.Circle.OffPushDown\n                        },\n                        N: {}\n                    };\n                    appearanceStreamContent.N[name] = AcroFormAppearance.RadioButton.Circle.YesNormal;\n                    appearanceStreamContent.D[name] = AcroFormAppearance.RadioButton.Circle.YesPushDown;\n                    return appearanceStreamContent;\n                },\n                getCA: function () {\n                    return 'l';\n                },\n\n                YesNormal: function (formObject) {\n                    var xobj = new createFormXObject(formObject);\n                    var stream = [];\n                    // Make the Radius of the Circle relative to min(height, width) of formObject\n                    var DotRadius = (AcroFormAppearance.internal.getWidth(formObject) <= AcroFormAppearance.internal.getHeight(formObject)) ? AcroFormAppearance.internal.getWidth(formObject) / 4 : AcroFormAppearance.internal.getHeight(formObject) / 4;\n                    // The Borderpadding...\n                    DotRadius = Number((DotRadius * 0.9).toFixed(5));\n                    var c = AcroFormAppearance.internal.Bezier_C;\n                    var DotRadiusBezier = Number((DotRadius * c).toFixed(5));\n                    /*\n                      * The Following is a Circle created with Bezier-Curves.\n                      */\n                    stream.push(\"q\");\n                    stream.push(\"1 0 0 1 \" + f5(AcroFormAppearance.internal.getWidth(formObject) / 2) + \" \" + f5(AcroFormAppearance.internal.getHeight(formObject) / 2) + \" cm\");\n                    stream.push(DotRadius + \" 0 m\");\n                    stream.push(DotRadius + \" \" + DotRadiusBezier + \" \" + DotRadiusBezier + \" \" + DotRadius + \" 0 \" + DotRadius + \" c\");\n                    stream.push(\"-\" + DotRadiusBezier + \" \" + DotRadius + \" -\" + DotRadius + \" \" + DotRadiusBezier + \" -\" + DotRadius + \" 0 c\");\n                    stream.push(\"-\" + DotRadius + \" -\" + DotRadiusBezier + \" -\" + DotRadiusBezier + \" -\" + DotRadius + \" 0 -\" + DotRadius + \" c\");\n                    stream.push(DotRadiusBezier + \" -\" + DotRadius + \" \" + DotRadius + \" -\" + DotRadiusBezier + \" \" + DotRadius + \" 0 c\");\n                    stream.push(\"f\");\n                    stream.push(\"Q\");\n                    xobj.stream = stream.join(\"\\n\");\n                    return xobj;\n                },\n                YesPushDown: function (formObject) {\n                    var xobj = new createFormXObject(formObject);\n                    var stream = [];\n                    var DotRadius = (AcroFormAppearance.internal.getWidth(formObject) <= AcroFormAppearance.internal.getHeight(formObject)) ?\n                        AcroFormAppearance.internal.getWidth(formObject) / 4 : AcroFormAppearance.internal.getHeight(formObject) / 4;\n                    // The Borderpadding...\n                    var DotRadius = Number((DotRadius * 0.9).toFixed(5));\n                    // Save results for later use; no need to waste\n                    // processor ticks on doing math\n                    var k = Number((DotRadius * 2).toFixed(5));\n                    var kc = Number((k * AcroFormAppearance.internal.Bezier_C).toFixed(5));\n                    var dc = Number((DotRadius * AcroFormAppearance.internal.Bezier_C).toFixed(5));\n\n                    stream.push(\"0.749023 g\");\n                    stream.push(\"q\");\n                    stream.push(\"1 0 0 1 \" + f5(AcroFormAppearance.internal.getWidth(formObject) / 2) + \" \" + f5(AcroFormAppearance.internal.getHeight(formObject) / 2) + \" cm\");\n                    stream.push(k + \" 0 m\");\n                    stream.push(k + \" \" + kc + \" \" + kc + \" \" + k + \" 0 \" + k + \" c\");\n                    stream.push(\"-\" + kc + \" \" + k + \" -\" + k + \" \" + kc + \" -\" + k + \" 0 c\");\n                    stream.push(\"-\" + k + \" -\" + kc + \" -\" + kc + \" -\" + k + \" 0 -\" + k + \" c\");\n                    stream.push(kc + \" -\" + k + \" \" + k + \" -\" + kc + \" \" + k + \" 0 c\");\n                    stream.push(\"f\");\n                    stream.push(\"Q\");\n                    stream.push(\"0 g\");\n                    stream.push(\"q\");\n                    stream.push(\"1 0 0 1 \" + f5(AcroFormAppearance.internal.getWidth(formObject) / 2) + \" \" + f5(AcroFormAppearance.internal.getHeight(formObject) / 2) + \" cm\");\n                    stream.push(DotRadius + \" 0 m\");\n                    stream.push(\"\" + DotRadius + \" \" + dc + \" \" + dc + \" \" + DotRadius + \" 0 \" + DotRadius + \" c\");\n                    stream.push(\"-\" + dc + \" \" + DotRadius + \" -\" + DotRadius + \" \" + dc + \" -\" + DotRadius + \" 0 c\");\n                    stream.push(\"-\" + DotRadius + \" -\" + dc + \" -\" + dc + \" -\" + DotRadius + \" 0 -\" + DotRadius + \" c\");\n                    stream.push(dc + \" -\" + DotRadius + \" \" + DotRadius + \" -\" + dc + \" \" + DotRadius + \" 0 c\");\n                    stream.push(\"f\");\n                    stream.push(\"Q\");\n                    xobj.stream = stream.join(\"\\n\");\n                    return xobj;\n                },\n                OffPushDown: function (formObject) {\n                    var xobj = new createFormXObject(formObject);\n                    var stream = [];\n                    var DotRadius = (AcroFormAppearance.internal.getWidth(formObject) <= AcroFormAppearance.internal.getHeight(formObject)) ?\n                        AcroFormAppearance.internal.getWidth(formObject) / 4 : AcroFormAppearance.internal.getHeight(formObject) / 4;\n                    // The Borderpadding...\n                    DotRadius = Number((DotRadius * 0.9).toFixed(5));\n                    // Save results for later use; no need to waste\n                    // processor ticks on doing math\n                    var k = Number((DotRadius * 2).toFixed(5));\n                    var kc = Number((k * AcroFormAppearance.internal.Bezier_C).toFixed(5));\n\n                    stream.push(\"0.749023 g\");\n                    stream.push(\"q\");\n                    stream.push(\"1 0 0 1 \" + f5(AcroFormAppearance.internal.getWidth(formObject) / 2) + \" \" + f5(AcroFormAppearance.internal.getHeight(formObject) / 2) + \" cm\");\n                    stream.push(k + \" 0 m\");\n                    stream.push(k + \" \" + kc + \" \" + kc + \" \" + k + \" 0 \" + k + \" c\");\n                    stream.push(\"-\" + kc + \" \" + k + \" -\" + k + \" \" + kc + \" -\" + k + \" 0 c\");\n                    stream.push(\"-\" + k + \" -\" + kc + \" -\" + kc + \" -\" + k + \" 0 -\" + k + \" c\");\n                    stream.push(kc + \" -\" + k + \" \" + k + \" -\" + kc + \" \" + k + \" 0 c\");\n                    stream.push(\"f\");\n                    stream.push(\"Q\");\n                    xobj.stream = stream.join(\"\\n\");\n                    return xobj;\n                },\n            },\n\n            Cross: {\n                /**\n                  * Creates the Actual AppearanceDictionary-References\n                  * \n                  * @param {string} name\n                  * @returns {Object}\n                  * @ignore\n                  */\n                createAppearanceStream: function (name) {\n                    var appearanceStreamContent = {\n                        D: {\n                            'Off': AcroFormAppearance.RadioButton.Cross.OffPushDown\n                        },\n                        N: {}\n                    };\n                    appearanceStreamContent.N[name] = AcroFormAppearance.RadioButton.Cross.YesNormal;\n                    appearanceStreamContent.D[name] = AcroFormAppearance.RadioButton.Cross.YesPushDown;\n                    return appearanceStreamContent;\n                },\n                getCA: function () {\n                    return '8'\n                },\n\n\n                YesNormal: function (formObject) {\n                    var xobj = new createFormXObject(formObject);\n                    var stream = [];\n                    var cross = AcroFormAppearance.internal.calculateCross(formObject);\n                    stream.push(\"q\");\n                    stream.push(\"1 1 \" + f2(AcroFormAppearance.internal.getWidth(formObject) - 2) + \" \" + f2(AcroFormAppearance.internal.getHeight(formObject) - 2) + \" re\");\n                    stream.push(\"W\");\n                    stream.push(\"n\");\n                    stream.push(f2(cross.x1.x) + \" \" + f2(cross.x1.y) + \" m\");\n                    stream.push(f2(cross.x2.x) + \" \" + f2(cross.x2.y) + \" l\");\n                    stream.push(f2(cross.x4.x) + \" \" + f2(cross.x4.y) + \" m\");\n                    stream.push(f2(cross.x3.x) + \" \" + f2(cross.x3.y) + \" l\");\n                    stream.push(\"s\");\n                    stream.push(\"Q\");\n                    xobj.stream = stream.join(\"\\n\");\n                    return xobj;\n                },\n                YesPushDown: function (formObject) {\n                    var xobj = new createFormXObject(formObject);\n                    var cross = AcroFormAppearance.internal.calculateCross(formObject);\n                    var stream = [];\n                    stream.push(\"0.749023 g\");\n                    stream.push(\"0 0 \" + f2(AcroFormAppearance.internal.getWidth(formObject)) + \" \" + f2(AcroFormAppearance.internal.getHeight(formObject)) + \" re\");\n                    stream.push(\"f\");\n                    stream.push(\"q\");\n                    stream.push(\"1 1 \" + f2(AcroFormAppearance.internal.getWidth(formObject) - 2) + \" \" + f2(AcroFormAppearance.internal.getHeight(formObject) - 2) + \" re\");\n                    stream.push(\"W\");\n                    stream.push(\"n\");\n                    stream.push(f2(cross.x1.x) + \" \" + f2(cross.x1.y) + \" m\");\n                    stream.push(f2(cross.x2.x) + \" \" + f2(cross.x2.y) + \" l\");\n                    stream.push(f2(cross.x4.x) + \" \" + f2(cross.x4.y) + \" m\");\n                    stream.push(f2(cross.x3.x) + \" \" + f2(cross.x3.y) + \" l\");\n                    stream.push(\"s\");\n                    stream.push(\"Q\");\n                    xobj.stream = stream.join(\"\\n\");\n                    return xobj;\n                },\n                OffPushDown: function (formObject) {\n                    var xobj = new createFormXObject(formObject);\n                    var stream = [];\n                    stream.push(\"0.749023 g\");\n                    stream.push(\"0 0 \" + f2(AcroFormAppearance.internal.getWidth(formObject)) + \" \" + f2(AcroFormAppearance.internal.getHeight(formObject)) + \" re\");\n                    stream.push(\"f\");\n                    xobj.stream = stream.join(\"\\n\");\n                    return xobj;\n                }\n            },\n        },\n\n        /**\n          * Returns the standard Appearance\n          * \n          * @returns {AcroFormXObject}\n          */\n        createDefaultAppearanceStream: function (formObject) {\n            // Set Helvetica to Standard Font (size: auto)\n            // Color: Black\n            var fontKey = scope.internal.getFont(formObject.fontName, formObject.fontStyle).id;\n            var encodedColor = scope.__private__.encodeColorString(formObject.color);\n            var fontSize = formObject.fontSize;\n            var result = '/' + fontKey + ' ' + fontSize + ' Tf ' + encodedColor;\n            return result;\n        }\n    };\n\n    AcroFormAppearance.internal = {\n        Bezier_C: 0.551915024494,\n\n        calculateCross: function (formObject) {\n\n            var width = AcroFormAppearance.internal.getWidth(formObject);\n            var height = AcroFormAppearance.internal.getHeight(formObject);\n            var a = Math.min(width, height);\n\n            var cross = {\n                x1: { // upperLeft\n                    x: (width - a) / 2,\n                    y: ((height - a) / 2) + a,// height - borderPadding\n                },\n                x2: { // lowerRight\n                    x: ((width - a) / 2) + a,\n                    y: ((height - a) / 2)// borderPadding\n                },\n                x3: { // lowerLeft\n                    x: (width - a) / 2,\n                    y: ((height - a) / 2)// borderPadding\n                },\n                x4: { // upperRight\n                    x: ((width - a) / 2) + a,\n                    y: ((height - a) / 2) + a,// height - borderPadding\n                }\n            };\n\n            return cross;\n        },\n    };\n    AcroFormAppearance.internal.getWidth = function (formObject) {\n        var result = 0;\n        if (typeof formObject === \"object\") {\n            result = scale(formObject.Rect[2]);\n        }\n        return result;\n    };\n    AcroFormAppearance.internal.getHeight = function (formObject) {\n        var result = 0;\n        if (typeof formObject === \"object\") {\n            result = scale(formObject.Rect[3]);\n        }\n        return result;\n    };\n\n    // Public:\n\n    /**\n    * Add an AcroForm-Field to the jsPDF-instance\n    *\n    * @name addField\n    * @function \n    * @instance\n    * @param {Object} fieldObject\n    * @returns {jsPDF}\n    */\n    var addField = jsPDFAPI.addField = function (fieldObject) {\n        initializeAcroForm.call(this);\n\n        if (fieldObject instanceof AcroFormField) {\n            putForm.call(this, fieldObject);\n        } else {\n            throw new Error('Invalid argument passed to jsPDF.addField.');\n        }\n        fieldObject.page = scope.internal.getCurrentPageInfo().pageNumber;\n        return this;\n    };\n\n    /**\n    * @name addButton\n    * @function\n    * @instance\n    * @param {AcroFormButton} options\n    * @returns {jsPDF}\n    * @deprecated\n    */\n    jsPDFAPI.addButton = function (button) {\n        if (button instanceof AcroFormButton === false) {\n            throw new Error('Invalid argument passed to jsPDF.addButton.');\n        }\n        return addField.call(this, button);\n    };\n\n    /**\n    * @name addTextField\n    * @function\n    * @instance\n    * @param {AcroFormTextField} textField\n    * @returns {jsPDF}\n    * @deprecated\n    */\n    jsPDFAPI.addTextField = function (textField) {\n        if (textField instanceof AcroFormTextField === false) {\n            throw new Error('Invalid argument passed to jsPDF.addTextField.');\n        }\n        return addField.call(this, textField);\n    };\n\n    /**\n    * @name addChoiceField\n    * @function\n    * @instance\n    * @param {AcroFormChoiceField} \n    * @returns {jsPDF}\n    * @deprecated\n    */\n    jsPDFAPI.addChoiceField = function (choiceField) {\n        if (choiceField instanceof AcroFormChoiceField === false) {\n            throw new Error('Invalid argument passed to jsPDF.addChoiceField.');\n        }\n        return addField.call(this, choiceField);\n    };\n\n    if (typeof globalObj == \"object\" &&\n        typeof (globalObj[\"ChoiceField\"]) === \"undefined\" &&\n        typeof (globalObj[\"ListBox\"]) === \"undefined\" &&\n        typeof (globalObj[\"ComboBox\"]) === \"undefined\" &&\n        typeof (globalObj[\"EditBox\"]) === \"undefined\" &&\n        typeof (globalObj[\"Button\"]) === \"undefined\" &&\n        typeof (globalObj[\"PushButton\"]) === \"undefined\" &&\n        typeof (globalObj[\"RadioButton\"]) === \"undefined\" &&\n        typeof (globalObj[\"CheckBox\"]) === \"undefined\" &&\n        typeof (globalObj[\"TextField\"]) === \"undefined\" &&\n        typeof (globalObj[\"PasswordField\"]) === \"undefined\"\n    ) {\n        globalObj[\"ChoiceField\"] = AcroFormChoiceField;\n        globalObj[\"ListBox\"] = AcroFormListBox;\n        globalObj[\"ComboBox\"] = AcroFormComboBox;\n        globalObj[\"EditBox\"] = AcroFormEditBox;\n        globalObj[\"Button\"] = AcroFormButton;\n        globalObj[\"PushButton\"] = AcroFormPushButton;\n        globalObj[\"RadioButton\"] = AcroFormRadioButton;\n        globalObj[\"CheckBox\"] = AcroFormCheckBox;\n        globalObj[\"TextField\"] = AcroFormTextField;\n        globalObj[\"PasswordField\"] = AcroFormPasswordField;\n\n        // backwardsCompatibility\n        globalObj[\"AcroForm\"] = { Appearance: AcroFormAppearance };\n    } else {\n        // eslint-disable-next-line no-console\n        // console.warn(\"AcroForm-Classes are not populated into global-namespace, because the class-Names exist already. This avoids conflicts with the already used framework.\");\n    }\n\n    jsPDFAPI.AcroFormChoiceField = AcroFormChoiceField;\n    jsPDFAPI.AcroFormListBox = AcroFormListBox;\n    jsPDFAPI.AcroFormComboBox = AcroFormComboBox;\n    jsPDFAPI.AcroFormEditBox = AcroFormEditBox;\n    jsPDFAPI.AcroFormButton = AcroFormButton;\n    jsPDFAPI.AcroFormPushButton = AcroFormPushButton;\n    jsPDFAPI.AcroFormRadioButton = AcroFormRadioButton;\n    jsPDFAPI.AcroFormCheckBox = AcroFormCheckBox;\n    jsPDFAPI.AcroFormTextField = AcroFormTextField;\n    jsPDFAPI.AcroFormPasswordField = AcroFormPasswordField;\n    jsPDFAPI.AcroFormAppearance = AcroFormAppearance;\n\n    jsPDFAPI.AcroForm = {\n        ChoiceField: AcroFormChoiceField,\n        ListBox: AcroFormListBox,\n        ComboBox: AcroFormComboBox,\n        EditBox: AcroFormEditBox,\n        Button: AcroFormButton,\n        PushButton: AcroFormPushButton,\n        RadioButton: AcroFormRadioButton,\n        CheckBox: AcroFormCheckBox,\n        TextField: AcroFormTextField,\n        PasswordField: AcroFormPasswordField,\n        Appearance: AcroFormAppearance\n    };\n\n    jsPDF.AcroForm = {\n        ChoiceField: AcroFormChoiceField,\n        ListBox: AcroFormListBox,\n        ComboBox: AcroFormComboBox,\n        EditBox: AcroFormEditBox,\n        Button: AcroFormButton,\n        PushButton: AcroFormPushButton,\n        RadioButton: AcroFormRadioButton,\n        CheckBox: AcroFormCheckBox,\n        TextField: AcroFormTextField,\n        PasswordField: AcroFormPasswordField,\n        Appearance: AcroFormAppearance\n    };\n})(jsPDF, (typeof window !== 'undefined' && window || typeof global !== 'undefined' && global));","export default function setRadioAppearance(doc: any): any {\n    const oldAppearanceFuncition: Function = doc.AcroFormAppearance.RadioButton.Circle.YesNormal;\n    doc.AcroFormAppearance.RadioButton.Circle.YesNormal = function(formObject: any) {\n        const xobj: any = oldAppearanceFuncition(formObject);\n        const stream: string[] = xobj.stream.split('\\n');\n        const encodeColor: string = doc.__private__.encodeColorString(formObject.color);\n        stream[0] = stream[0] + '\\n' + encodeColor + '\\n' + encodeColor.toUpperCase();\n        xobj.stream = stream.join('\\n');\n        return xobj;\n    };\n}","  /**\n   * jsPDF fromHTML plugin. BETA stage. API subject to change. Needs browser\n   * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com\n   *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n   *               2014 Diego Casorran, https://github.com/diegocr\n   *               2014 Daniel Husar, https://github.com/danielhusar\n   *               2014 Wolfgang Gassler, https://github.com/woolfg\n   *               2014 Steven Spungin, https://github.com/flamenco\n   *\n   * @license\n   * \n   * ====================================================================\n   */\n  import { jsPDF } from \"jspdf\";\n\n  (function (jsPDFAPI) {\n    var clone, _DrillForContent, FontNameDB, FontStyleMap, TextAlignMap, FontWeightMap, FloatMap, ClearMap, GetCSS, PurgeWhiteSpace, Renderer, ResolveFont, ResolveUnitedNumber, UnitedNumberMap, elementHandledElsewhere, images, loadImgs, checkForFooter, process, tableToJson;\n\n    clone = function () {\n      return function (obj) {\n        Clone.prototype = obj;\n        return new Clone();\n      };\n\n      function Clone() {}\n    }();\n\n    PurgeWhiteSpace = function PurgeWhiteSpace(array) {\n      var fragment, i, l, lTrimmed, r, rTrimmed, trailingSpace;\n      i = 0;\n      l = array.length;\n      fragment = void 0;\n      lTrimmed = false;\n      rTrimmed = false;\n\n      while (!lTrimmed && i !== l) {\n        fragment = array[i] = array[i].trimLeft();\n\n        if (fragment) {\n          lTrimmed = true;\n        }\n\n        i++;\n      }\n\n      i = l - 1;\n\n      while (l && !rTrimmed && i !== -1) {\n        fragment = array[i] = array[i].trimRight();\n\n        if (fragment) {\n          rTrimmed = true;\n        }\n\n        i--;\n      }\n\n      r = /\\s+$/g;\n      trailingSpace = true;\n      i = 0;\n\n      while (i !== l) {\n        // Leave the line breaks intact\n        if (array[i] != \"\\u2028\") {\n          fragment = array[i].replace(/\\s+/g, \" \");\n\n          if (trailingSpace) {\n            fragment = fragment.trimLeft();\n          }\n\n          if (fragment) {\n            trailingSpace = r.test(fragment);\n          }\n\n          array[i] = fragment;\n        }\n\n        i++;\n      }\n\n      return array;\n    };\n\n    Renderer = function Renderer(pdf, x, y, settings) {\n      this.pdf = pdf;\n      this.x = x;\n      this.y = y;\n      this.settings = settings; //list of functions which are called after each element-rendering process\n\n      this.watchFunctions = [];\n      this.init();\n      return this;\n    };\n\n    ResolveFont = function ResolveFont(css_font_family_string) {\n      var name, part, parts;\n      name = void 0;\n      parts = css_font_family_string.split(\",\");\n      part = parts.shift();\n\n      while (!name && part) {\n        name = FontNameDB[part.trim().toLowerCase()];\n        part = parts.shift();\n      }\n\n      return name;\n    };\n\n    ResolveUnitedNumber = function ResolveUnitedNumber(css_line_height_string) {\n      //IE8 issues\n      css_line_height_string = css_line_height_string === \"auto\" ? \"0px\" : css_line_height_string;\n\n      if (css_line_height_string.indexOf(\"em\") > -1 && !isNaN(Number(css_line_height_string.replace(\"em\", \"\")))) {\n        css_line_height_string = Number(css_line_height_string.replace(\"em\", \"\")) * 18.719 + \"px\";\n      }\n\n      if (css_line_height_string.indexOf(\"pt\") > -1 && !isNaN(Number(css_line_height_string.replace(\"pt\", \"\")))) {\n        css_line_height_string = Number(css_line_height_string.replace(\"pt\", \"\")) * 1.333 + \"px\";\n      }\n\n      var normal, undef, value;\n      undef = void 0;\n      normal = 16.00;\n      value = UnitedNumberMap[css_line_height_string];\n\n      if (value) {\n        return value;\n      }\n\n      value = {\n        \"xx-small\": 9,\n        \"x-small\": 11,\n        small: 13,\n        medium: 16,\n        large: 19,\n        \"x-large\": 23,\n        \"xx-large\": 28,\n        auto: 0\n      }[css_line_height_string];\n\n      if (value !== undef) {\n        return UnitedNumberMap[css_line_height_string] = value / normal;\n      }\n\n      if (value = parseFloat(css_line_height_string)) {\n        return UnitedNumberMap[css_line_height_string] = value / normal;\n      }\n\n      value = css_line_height_string.match(/([\\d\\.]+)(px)/);\n\n      if (Array.isArray(value) && value.length === 3) {\n        return UnitedNumberMap[css_line_height_string] = parseFloat(value[1]) / normal;\n      }\n\n      return UnitedNumberMap[css_line_height_string] = 1;\n    };\n\n    GetCSS = function GetCSS(element) {\n      var css, tmp, computedCSSElement;\n\n      computedCSSElement = function (el) {\n        var compCSS;\n\n        compCSS = function (el) {\n          if (document.defaultView && document.defaultView.getComputedStyle) {\n            return document.defaultView.getComputedStyle(el, null);\n          } else if (el.currentStyle) {\n            return el.currentStyle;\n          } else {\n            return el.style;\n          }\n        }(el);\n\n        return function (prop) {\n          prop = prop.replace(/-\\D/g, function (match) {\n            return match.charAt(1).toUpperCase();\n          });\n          return compCSS[prop];\n        };\n      }(element);\n\n      css = {};\n      tmp = void 0;\n      css[\"font-family\"] = ResolveFont(computedCSSElement(\"font-family\")) || \"times\";\n      css[\"font-style\"] = FontStyleMap[computedCSSElement(\"font-style\")] || \"normal\";\n      css[\"text-align\"] = TextAlignMap[computedCSSElement(\"text-align\")] || \"left\";\n      tmp = FontWeightMap[computedCSSElement(\"font-weight\")] || \"normal\";\n\n      if (tmp === \"bold\") {\n        if (css[\"font-style\"] === \"normal\") {\n          css[\"font-style\"] = tmp;\n        } else {\n          css[\"font-style\"] = tmp + css[\"font-style\"];\n        }\n      }\n\n      css[\"font-size\"] = ResolveUnitedNumber(computedCSSElement(\"font-size\")) || 1;\n      css[\"line-height\"] = ResolveUnitedNumber(computedCSSElement(\"line-height\")) || 1;\n      css[\"display\"] = computedCSSElement(\"display\") === \"inline\" ? \"inline\" : \"block\";\n      tmp = css[\"display\"] === \"block\";\n      css[\"margin-top\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"margin-top\")) || 0;\n      css[\"margin-bottom\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"margin-bottom\")) || 0;\n      css[\"padding-top\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"padding-top\")) || 0;\n      css[\"padding-bottom\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"padding-bottom\")) || 0;\n      css[\"margin-left\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"margin-left\")) || 0;\n      css[\"margin-right\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"margin-right\")) || 0;\n      css[\"padding-left\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"padding-left\")) || 0;\n      css[\"padding-right\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"padding-right\")) || 0;\n      css[\"page-break-before\"] = computedCSSElement(\"page-break-before\") || \"auto\"; //float and clearing of floats\n\n      css[\"float\"] = FloatMap[computedCSSElement(\"cssFloat\")] || \"none\";\n      css[\"clear\"] = ClearMap[computedCSSElement(\"clear\")] || \"none\";\n      css[\"color\"] = computedCSSElement(\"color\");\n      return css;\n    };\n\n    elementHandledElsewhere = function elementHandledElsewhere(element, renderer, elementHandlers) {\n      var handlers, i, isHandledElsewhere, l, classNames;\n      isHandledElsewhere = false;\n      i = void 0;\n      l = void 0;\n      handlers = elementHandlers[\"#\" + element.id];\n\n      if (handlers) {\n        if (typeof handlers === \"function\") {\n          isHandledElsewhere = handlers(element, renderer);\n        } else {\n          i = 0;\n          l = handlers.length;\n\n          while (!isHandledElsewhere && i !== l) {\n            isHandledElsewhere = handlers[i](element, renderer);\n            i++;\n          }\n        }\n      }\n\n      handlers = elementHandlers[element.nodeName];\n\n      if (!isHandledElsewhere && handlers) {\n        if (typeof handlers === \"function\") {\n          isHandledElsewhere = handlers(element, renderer);\n        } else {\n          i = 0;\n          l = handlers.length;\n\n          while (!isHandledElsewhere && i !== l) {\n            isHandledElsewhere = handlers[i](element, renderer);\n            i++;\n          }\n        }\n      } // Try class names\n\n\n      classNames = typeof element.className === 'string' ? element.className.split(' ') : [];\n\n      for (i = 0; i < classNames.length; i++) {\n        handlers = elementHandlers['.' + classNames[i]];\n\n        if (!isHandledElsewhere && handlers) {\n          if (typeof handlers === \"function\") {\n            isHandledElsewhere = handlers(element, renderer);\n          } else {\n            i = 0;\n            l = handlers.length;\n\n            while (!isHandledElsewhere && i !== l) {\n              isHandledElsewhere = handlers[i](element, renderer);\n              i++;\n            }\n          }\n        }\n      }\n\n      return isHandledElsewhere;\n    };\n\n    tableToJson = function tableToJson(table, renderer) {\n      var data, headers, i, j, rowData, tableRow, table_obj, table_with, cell, l;\n      data = [];\n      headers = [];\n      i = 0;\n      l = 0;\n      for (var j = 0; j < table.rows[0].cells.length; j++) {\n        l += table.rows[0].cells[j].colSpan;\n      }\n      table_with = table.clientWidth;\n\n      while (i < l) {\n        cell = table.rows[0].cells[i];\n\n        for (var j = 0; j < cell.colSpan; j++) {\n          headers[i + j] = {\n            name: cell.textContent.toLowerCase().replace(/\\s+/g, '') + '_' + j,\n            prompt: cell.textContent.replace(/\\r?\\n/g, ''),\n            width: cell.clientWidth / table_with * renderer.settings.width / cell.colSpan\n          };\n        }\n\n        i += j;\n      }\n\n      i = 1;\n\n      while (i < table.rows.length) {\n        tableRow = table.rows[i];\n        rowData = {};\n        j = 0;\n\n        while (j < tableRow.cells.length) {\n          rowData[headers[j].name] = tableRow.cells[j].textContent.replace(/\\r?\\n/g, '');\n          j++;\n        }\n\n        data.push(rowData);\n        i++;\n      }\n\n      return table_obj = {\n        rows: data,\n        headers: headers\n      };\n    };\n\n    var SkipNode = {\n      SCRIPT: 1,\n      STYLE: 1,\n      NOSCRIPT: 1,\n      OBJECT: 1,\n      EMBED: 1,\n      SELECT: 1\n    };\n    var listCount = 1;\n\n    _DrillForContent = function DrillForContent(element, renderer, elementHandlers) {\n      var cn, cns, fragmentCSS, i, isBlock, l, table2json, cb;\n      cns = element.childNodes;\n      cn = void 0;\n      fragmentCSS = GetCSS(element);\n      isBlock = fragmentCSS.display === \"block\";\n\n      if (isBlock) {\n        renderer.setBlockBoundary();\n        renderer.setBlockStyle(fragmentCSS);\n      }\n      i = 0;\n      l = cns.length;\n\n      while (i < l) {\n        cn = cns[i];\n\n        if (typeof(cn) === \"object\") {\n          //execute all watcher functions to e.g. reset floating\n          renderer.executeWatchFunctions(cn);\n          /*** HEADER rendering **/\n\n          if (cn.nodeType === 1 && cn.nodeName === 'HEADER') {\n            var header = cn; //store old top margin\n\n            var oldMarginTop = renderer.pdf.margins_doc.top; //subscribe for new page event and render header first on every page\n\n            renderer.pdf.internal.events.subscribe('addPage', function (pageInfo) {\n              //set current y position to old margin\n              renderer.y = oldMarginTop; //render all child nodes of the header element\n\n              _DrillForContent(header, renderer, elementHandlers); //set margin to old margin + rendered header + 10 space to prevent overlapping\n              //important for other plugins (e.g. table) to start rendering at correct position after header\n\n\n              renderer.pdf.margins_doc.top = renderer.y + 10;\n              renderer.y += 10;\n            }, false);\n          }\n\n          if (cn.nodeType === 8 && cn.nodeName === \"#comment\") {\n            if (~cn.textContent.indexOf(\"ADD_PAGE\")) {\n              renderer.pdf.addPage();\n              renderer.y = renderer.pdf.margins_doc.top;\n            }\n          } else if (cn.nodeType === 1 && !SkipNode[cn.nodeName]) {\n            /*** IMAGE RENDERING ***/\n            var cached_image;\n\n            if (cn.nodeName === \"IMG\") {\n              var url = cn.getAttribute(\"src\");\n              cached_image = images[(renderer.pdf.sHashCode && renderer.pdf.sHashCode(url)) || url];\n            }\n\n            if (cached_image) {\n              if (renderer.pdf.internal.pageSize.getHeight() - renderer.pdf.margins_doc.bottom < renderer.y + cn.height && renderer.y > renderer.pdf.margins_doc.top) {\n                renderer.pdf.addPage();\n                renderer.y = renderer.pdf.margins_doc.top; //check if we have to set back some values due to e.g. header rendering for new page\n\n                renderer.executeWatchFunctions(cn);\n              }\n\n              var imagesCSS = GetCSS(cn);\n              var imageX = renderer.x;\n              var fontToUnitRatio = 12 / renderer.pdf.internal.scaleFactor; //define additional paddings, margins which have to be taken into account for margin calculations\n\n              var additionalSpaceLeft = (imagesCSS[\"margin-left\"] + imagesCSS[\"padding-left\"]) * fontToUnitRatio;\n              var additionalSpaceRight = (imagesCSS[\"margin-right\"] + imagesCSS[\"padding-right\"]) * fontToUnitRatio;\n              var additionalSpaceTop = (imagesCSS[\"margin-top\"] + imagesCSS[\"padding-top\"]) * fontToUnitRatio;\n              var additionalSpaceBottom = (imagesCSS[\"margin-bottom\"] + imagesCSS[\"padding-bottom\"]) * fontToUnitRatio; //if float is set to right, move the image to the right border\n              //add space if margin is set\n\n              if (imagesCSS['float'] !== undefined && imagesCSS['float'] === 'right') {\n                imageX += renderer.settings.width - cn.width - additionalSpaceRight;\n              } else {\n                imageX += additionalSpaceLeft;\n              }\n\n              renderer.pdf.addImage(cached_image, imageX, renderer.y + additionalSpaceTop, cn.width, cn.height);\n              cached_image = undefined; //if the float prop is specified we have to float the text around the image\n\n              if (imagesCSS['float'] === 'right' || imagesCSS['float'] === 'left') {\n                //add functiont to set back coordinates after image rendering\n                renderer.watchFunctions.push(function (diffX, thresholdY, diffWidth, el) {\n                  //undo drawing box adaptions which were set by floating\n                  if (renderer.y >= thresholdY) {\n                    renderer.x += diffX;\n                    renderer.settings.width += diffWidth;\n                    return true;\n                  } else if (el && el.nodeType === 1 && !SkipNode[el.nodeName] && renderer.x + el.width > renderer.pdf.margins_doc.left + renderer.pdf.margins_doc.width) {\n                    renderer.x += diffX;\n                    renderer.y = thresholdY;\n                    renderer.settings.width += diffWidth;\n                    return true;\n                  } else {\n                    return false;\n                  }\n                }.bind(this, imagesCSS['float'] === 'left' ? -cn.width - additionalSpaceLeft - additionalSpaceRight : 0, renderer.y + cn.height + additionalSpaceTop + additionalSpaceBottom, cn.width)); //reset floating by clear:both divs\n                //just set cursorY after the floating element\n\n                renderer.watchFunctions.push(function (yPositionAfterFloating, pages, el) {\n                  if (renderer.y < yPositionAfterFloating && pages === renderer.pdf.internal.getNumberOfPages()) {\n                    if (el.nodeType === 1 && GetCSS(el).clear === 'both') {\n                      renderer.y = yPositionAfterFloating;\n                      return true;\n                    } else {\n                      return false;\n                    }\n                  } else {\n                    return true;\n                  }\n                }.bind(this, renderer.y + cn.height, renderer.pdf.internal.getNumberOfPages())); //if floating is set we decrease the available width by the image width\n\n                renderer.settings.width -= cn.width + additionalSpaceLeft + additionalSpaceRight; //if left just add the image width to the X coordinate\n\n                if (imagesCSS['float'] === 'left') {\n                  renderer.x += cn.width + additionalSpaceLeft + additionalSpaceRight;\n                }\n              } else {\n                //if no floating is set, move the rendering cursor after the image height\n                renderer.y += cn.height + additionalSpaceTop + additionalSpaceBottom;\n              }\n              /*** TABLE RENDERING ***/\n\n            } else if (cn.nodeName === \"TABLE\") {\n              if(!renderer.pdf.autoTable) {\n                table2json = tableToJson(cn, renderer);\n                renderer.y += 10;\n                renderer.pdf.table(renderer.x, renderer.y, table2json.rows, table2json.headers, {\n                  autoSize: false,\n                  printHeaders: elementHandlers.printHeaders,\n                  margins: renderer.pdf.margins_doc,\n                  css: GetCSS(cn)\n                });\n                renderer.y = renderer.pdf.internal.__cell__.lastCell.y +\n                  renderer.pdf.internal.__cell__.lastCell.height;\n              } else {\n                renderer.y += 10;\n                renderer.pdf.autoTable({ theme: \"grid\", html: cn, startY: renderer.y,\n                  styles: {\n                    font: renderer.pdf.getFont().fontName,\n                    fontSize: renderer.pdf.getFontSize(),\n                    textColor: renderer.pdf.getTextColor()\n                  },\n                  margin: { \n                    top: renderer.pdf.margins_doc.top, \n                    left: renderer.x, \n                    right: renderer.pdf.internal.pageSize.getWidth() - (renderer.x  + renderer.settings.width), \n                    bottom: renderer.pdf.margins_doc.bottom },\n                });\n                renderer.y = renderer.pdf.lastAutoTable.finalY;\n              }\n            } else if (cn.nodeName === \"OL\" || cn.nodeName === \"UL\") {\n              listCount = 1;\n\n              if (!elementHandledElsewhere(cn, renderer, elementHandlers)) {\n                _DrillForContent(cn, renderer, elementHandlers);\n              }\n\n              renderer.y += 10;\n            } else if (cn.nodeName === \"LI\") {\n              var temp = renderer.x;\n              renderer.x += 20 / renderer.pdf.internal.scaleFactor;\n              renderer.y += 3;\n\n              if (!elementHandledElsewhere(cn, renderer, elementHandlers)) {\n                _DrillForContent(cn, renderer, elementHandlers);\n              }\n\n              renderer.x = temp;\n            } else if (cn.nodeName === \"BR\") {\n              renderer.y += fragmentCSS[\"font-size\"] * renderer.pdf.internal.scaleFactor;\n              renderer.addText(\"\\u2028\", clone(fragmentCSS));\n            } else {\n              if (!elementHandledElsewhere(cn, renderer, elementHandlers)) {\n                _DrillForContent(cn, renderer, elementHandlers);\n              }\n            }\n          } else if (cn.nodeType === 3) {\n            var value = cn.nodeValue;\n\n            if (cn.nodeValue && cn.parentNode.nodeName === \"LI\") {\n              if (cn.parentNode.parentNode.nodeName === \"OL\") {\n                value = listCount++ + '. ' + value;\n              } else {\n                var fontSize = fragmentCSS[\"font-size\"];\n                var offsetX = (3 - fontSize * 0.75) * renderer.pdf.internal.scaleFactor;\n                var offsetY = fontSize * 0.75 * renderer.pdf.internal.scaleFactor;\n                var radius = fontSize * 1.74 / renderer.pdf.internal.scaleFactor;\n\n                cb = function cb(x, y) {\n                  this.pdf.circle(x + offsetX, y + offsetY, radius, 'FD');\n                };\n              }\n            } // Only add the text if the text node is in the body element\n            // Add compatibility with IE11\n\n\n            if (!!(cn.ownerDocument.body.compareDocumentPosition(cn) & 16)) {\n              renderer.addText(value, fragmentCSS);\n            }\n          } else if (typeof cn === \"string\") {\n            renderer.addText(cn, fragmentCSS);\n          }\n        }\n\n        i++;\n      }\n\n      elementHandlers.outY = renderer.y;\n\n      if (isBlock) {\n        return renderer.setBlockBoundary(cb);\n      }\n    };\n\n    images = {};\n\n    loadImgs = function loadImgs(element, renderer, elementHandlers, cb) {\n      var imgs = element.getElementsByTagName('img'),\n          l = imgs.length,\n          found_images,\n          x = 0;\n\n      function done() {\n        renderer.pdf.internal.events.publish('imagesLoaded');\n        cb(found_images);\n      }\n\n      function loadImage(url, width, height) {\n        if (!url) return;\n        var img = new Image();\n        found_images = ++x;\n        img.crossOrigin = '';\n\n        img.onerror = img.onload = function () {\n          if (img.complete) {\n            //to support data urls in images, set width and height\n            //as those values are not recognized automatically\n            if (img.src.indexOf('data:image/') === 0) {\n              img.width = width || img.width || 0;\n              img.height = height || img.height || 0;\n            } //if valid image add to known images array\n\n\n            if (img.width + img.height) {\n              var hash = (renderer.pdf.sHashCode && renderer.pdf.sHashCode(url)) || url;\n              images[hash] = images[hash] || img;\n            }\n          }\n\n          if (! --x) {\n            done();\n          }\n        };\n\n        img.src = url;\n      }\n\n      while (l--) {\n        loadImage(imgs[l].getAttribute(\"src\"), imgs[l].width, imgs[l].height);\n      }\n\n      return x || done();\n    };\n\n    checkForFooter = function checkForFooter(elem, renderer, elementHandlers) {\n      //check if we can found a <footer> element\n      var footer = elem.getElementsByTagName(\"footer\");\n\n      if (footer.length > 0) {\n        footer = footer[0]; //bad hack to get height of footer\n        //creat dummy out and check new y after fake rendering\n\n        var oldOut = renderer.pdf.internal.write;\n        var oldY = renderer.y;\n\n        renderer.pdf.internal.write = function () {};\n\n        _DrillForContent(footer, renderer, elementHandlers);\n\n        var footerHeight = Math.ceil(renderer.y - oldY) + 5;\n        renderer.y = oldY;\n        renderer.pdf.internal.write = oldOut; //add 20% to prevent overlapping\n\n        renderer.pdf.margins_doc.bottom += footerHeight; //Create function render header on every page\n\n        var renderFooter = function renderFooter(pageInfo) {\n          var pageNumber = pageInfo !== undefined ? pageInfo.pageNumber : 1; //set current y position to old margin\n\n          var oldPosition = renderer.y; //render all child nodes of the header element\n\n          renderer.y = renderer.pdf.internal.pageSize.getHeight() - renderer.pdf.margins_doc.bottom;\n          renderer.pdf.margins_doc.bottom -= footerHeight; //check if we have to add page numbers\n\n          var spans = footer.getElementsByTagName('span');\n\n          for (var i = 0; i < spans.length; ++i) {\n            //if we find some span element with class pageCounter, set the page\n            if ((\" \" + spans[i].className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(\" pageCounter \") > -1) {\n              spans[i].innerHTML = pageNumber;\n            } //if we find some span element with class totalPages, set a variable which is replaced after rendering of all pages\n\n\n            if ((\" \" + spans[i].className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(\" totalPages \") > -1) {\n              spans[i].innerHTML = '###jsPDFVarTotalPages###';\n            }\n          } //render footer content\n\n\n          _DrillForContent(footer, renderer, elementHandlers); //set bottom margin to previous height including the footer height\n\n\n          renderer.pdf.margins_doc.bottom += footerHeight; //important for other plugins (e.g. table) to start rendering at correct position after header\n\n          renderer.y = oldPosition;\n        }; //check if footer contains totalPages which should be replace at the disoposal of the document\n\n\n        var spans = footer.getElementsByTagName('span');\n\n        for (var i = 0; i < spans.length; ++i) {\n          if ((\" \" + spans[i].className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(\" totalPages \") > -1) {\n            renderer.pdf.internal.events.subscribe('htmlRenderingFinished', renderer.pdf.putTotalPages.bind(renderer.pdf, '###jsPDFVarTotalPages###'), true);\n          }\n        } //register event to render footer on every new page\n\n\n        renderer.pdf.internal.events.subscribe('addPage', renderFooter, false); //render footer on first page\n\n        renderFooter(); //prevent footer rendering\n\n        SkipNode['FOOTER'] = 1;\n      }\n    };\n\n    process = function process(pdf, element, x, y, settings, callback) {\n      if (!element) return false;\n      if (typeof element !== \"string\" && !element.parentNode) element = '' + element.innerHTML;\n\n      if (typeof element === \"string\") {\n        element = function (element) {\n          var $frame, $hiddendiv, framename, visuallyhidden;\n          framename = \"jsPDFhtmlText\" + Date.now().toString() + (Math.random() * 1000).toFixed(0);\n          visuallyhidden = \"position: absolute !important;\" + \"clip: rect(1px 1px 1px 1px); /* IE6, IE7 */\" + \"clip: rect(1px, 1px, 1px, 1px);\" + \"padding:0 !important;\" + \"border:0 !important;\" + \"height: 1px !important;\" + \"width: 1px !important; \" + \"top:auto;\" + \"left:-100px;\" + \"overflow: hidden;\";\n          $hiddendiv = document.createElement('div');\n          $hiddendiv.className = \"sjs-pdf-hidden-html-div\";\n          $hiddendiv.style.cssText = visuallyhidden;\n          $hiddendiv.innerHTML = \"<iframe style=\\\"height:1px;width:1px\\\" name=\\\"\" + framename + \"\\\" />\";\n          document.body.appendChild($hiddendiv);\n          $frame = window.frames[framename];\n          $frame.document.open();\n          $frame.document.writeln(element);\n          $frame.document.close();\n          return $frame.document.body;\n        }(element.replace(/<\\/?script[^>]*?>/gi, ''));\n      }\n\n      var availableFonts = Object.keys(pdf.getFontList());\n      for(var i = 0; i < availableFonts.length; ++i) {\n        var fontName = availableFonts[i];\n        var fontFamily = fontName.toLowerCase();\n        if(!FontNameDB[fontFamily]) {\n          FontNameDB[fontFamily] = fontName;\n        }\n      }\n\n      var r = new Renderer(pdf, x, y, settings),\n          out; // 1. load images\n      // 2. prepare optional footer elements\n      // 3. render content\n\n      loadImgs.call(this, element, r, settings.elementHandlers, function (found_images) {\n        checkForFooter(element, r, settings.elementHandlers);\n\n        _DrillForContent(element, r, settings.elementHandlers); //send event dispose for final taks (e.g. footer totalpage replacement)\n\n\n        r.pdf.internal.events.publish('htmlRenderingFinished');\n        out = r.dispose();\n        if (typeof callback === 'function') callback(out);else if (found_images) console.error('jsPDF Warning: rendering issues? provide a callback to fromHTML!');\n      });\n      return out || {\n        x: r.x,\n        y: r.y\n      };\n    };\n\n    Renderer.prototype.init = function () {\n      this.paragraph = {\n        text: [],\n        style: []\n      };\n      return this.pdf.internal.write(\"q\");\n    };\n\n    Renderer.prototype.dispose = function () {\n      this.pdf.internal.write(\"Q\");\n      return {\n        x: this.x,\n        y: this.y,\n        ready: true\n      };\n    }; //Checks if we have to execute some watcher functions\n    //e.g. to end text floating around an image\n\n\n    Renderer.prototype.executeWatchFunctions = function (el) {\n      var ret = false;\n      var narray = [];\n\n      if (this.watchFunctions.length > 0) {\n        for (var i = 0; i < this.watchFunctions.length; ++i) {\n          if (this.watchFunctions[i](el) === true) {\n            ret = true;\n          } else {\n            narray.push(this.watchFunctions[i]);\n          }\n        }\n\n        this.watchFunctions = narray;\n      }\n\n      return ret;\n    };\n\n    Renderer.prototype.splitFragmentsIntoLines = function (fragments, styles) {\n      var currentLineLength, defaultFontSize, ff, fragment, fragmentChopped, fragmentLength, fragmentSpecificMetrics, fs, k, line, lines, maxLineLength, style;\n      defaultFontSize = 12;\n      k = this.pdf.internal.scaleFactor;\n      ff = void 0;\n      fs = void 0;\n      fragment = void 0;\n      style = void 0;\n      fragmentSpecificMetrics = void 0;\n      fragmentLength = void 0;\n      fragmentChopped = void 0;\n      line = [];\n      lines = [line];\n      currentLineLength = 0;\n      maxLineLength = this.settings.width;\n      const oldFontName = this.pdf.getFont().fontName;\n      const oldFontStyle = this.pdf.getFont().fontStyle;\n      while (fragments.length) {\n        fragment = fragments.shift();\n        style = styles.shift();\n\n        if (fragment) {\n          ff = style[\"font-family\"];\n          fs = style[\"font-style\"];\n          this.pdf.setFont(ff, fs);\n          fragmentSpecificMetrics = {\n            textIndent: currentLineLength,\n            fontSize: style[\"font-size\"] * defaultFontSize\n          };\n          fragmentLength = this.pdf.getStringUnitWidth(fragment, fragmentSpecificMetrics) * fragmentSpecificMetrics.fontSize / k;\n\n          if (fragment == \"\\u2028\") {\n            line = [];\n            lines.push(line);\n          } else if (currentLineLength + fragmentLength > maxLineLength) {\n            fragmentChopped = this.pdf.splitTextToSize(fragment, maxLineLength, fragmentSpecificMetrics);\n            line.push([fragmentChopped.shift(), style]);\n\n            while (fragmentChopped.length) {\n              line = [[fragmentChopped.shift(), style]];\n              lines.push(line);\n            }\n\n            currentLineLength = this.pdf.getStringUnitWidth(line[0][0], fragmentSpecificMetrics) * fragmentSpecificMetrics.fontSize / k;\n          } else {\n            line.push([fragment, style]);\n            currentLineLength += fragmentLength;\n          }\n        }\n      } //if text alignment was set, set margin/indent of each line\n\n\n      if (style['text-align'] !== undefined && (style['text-align'] === 'center' || style['text-align'] === 'right' || style['text-align'] === 'justify')) {\n        for (var i = 0; i < lines.length; ++i) {\n          var length = this.pdf.getStringUnitWidth(lines[i][0][0], fragmentSpecificMetrics) * fragmentSpecificMetrics.fontSize / k; //if there is more than on line we have to clone the style object as all lines hold a reference on this object\n\n          if (i > 0) {\n            lines[i][0][1] = clone(lines[i][0][1]);\n          }\n\n          var space = maxLineLength - length;\n\n          if (style['text-align'] === 'right') {\n            lines[i][0][1]['margin-left'] = space; //if alignment is not right, it has to be center so split the space to the left and the right\n          } else if (style['text-align'] === 'center') {\n            lines[i][0][1]['margin-left'] = space / 2; //if justify was set, calculate the word spacing and define in by using the css property\n          } else if (style['text-align'] === 'justify') {\n            var countSpaces = lines[i][0][0].split(' ').length - 1;\n            lines[i][0][1]['word-spacing'] = space / countSpaces; //ignore the last line in justify mode\n\n            if (i === lines.length - 1) {\n              lines[i][0][1]['word-spacing'] = 0;\n            }\n          }\n        }\n      }\n      this.pdf.setFont(oldFontName, oldFontStyle)\n      return lines;\n    };\n\n    Renderer.prototype.RenderTextFragment = function (text, style) {\n      var defaultFontSize, font, maxLineHeight;\n      maxLineHeight = 0;\n      defaultFontSize = 12;\n\n      if (this.pdf.internal.pageSize.getHeight() - this.pdf.margins_doc.bottom < this.y + this.pdf.internal.getFontSize()) {\n        this.pdf.internal.write(\"ET\", \"Q\", \"Q\");\n        const currentPageNumber = this.pdf.getCurrentPageInfo().pageNumber;\n        if (this.pdf.getNumberOfPages() === currentPageNumber) this.pdf.addPage();\n        else this.pdf.setPage(currentPageNumber + 1);\n        this.y = this.pdf.margins_doc.top;\n        this.pdf.internal.write(\"q\", \"q\", \"BT\", this.getPdfColor(style.color), this.pdf.internal.getCoordinateString(this.x), this.pdf.internal.getVerticalCoordinateString(this.y), \"Td\"); //move cursor by one line on new page\n\n        maxLineHeight = Math.max(maxLineHeight, style[\"line-height\"], style[\"font-size\"]);\n        this.pdf.internal.write(0, (-1 * defaultFontSize * maxLineHeight).toFixed(2), \"Td\");\n      }\n\n      font = this.pdf.internal.getFont(style[\"font-family\"], style[\"font-style\"]); // text color\n\n      var pdfTextColor = this.getPdfColor(style[\"color\"]);\n\n      if (pdfTextColor !== this.lastTextColor) {\n        this.pdf.internal.write(pdfTextColor);\n        this.lastTextColor = pdfTextColor;\n      } //set the word spacing for e.g. justify style\n\n\n      if (style['word-spacing'] !== undefined && style['word-spacing'] > 0) {\n        this.pdf.internal.write(style['word-spacing'].toFixed(2), \"Tw\");\n      }\n\n\n      var pdfEscape16 = function(text, font) {\n        var widths = font.metadata.Unicode.widths;\n        var padz = [\"\", \"0\", \"00\", \"000\", \"0000\"];\n        var ar = [\"\"];\n        for (var i = 0, l = text.length, t; i < l; ++i) {\n          t = font.metadata.characterToGlyph(text.charCodeAt(i));\n          font.metadata.glyIdsUsed.push(t);\n          font.metadata.toUnicode[t] = text.charCodeAt(i);\n          if (widths.indexOf(t) == -1) {\n            widths.push(t);\n            widths.push([parseInt(font.metadata.widthOfGlyph(t), 10)]);\n          }\n          if (t == \"0\") {\n            //Spaces are not allowed in cmap.\n            return ar.join(\"\");\n          } else {\n            t = t.toString(16);\n            ar.push(padz[4 - t.length], t);\n          }\n        }\n        return ar.join(\"\");\n      };\n\n      var utf8TextFunction = function(text, font) {\n        var text = text || \"\";\n    \n        var str = \"\",\n          s = 0,\n          cmapConfirm;\n        var strText = \"\";\n        var encoding = font.encoding;\n    \n        if (font.encoding !== \"Identity-H\") {\n          return text;\n        }\n        strText = text;\n    \n        for (s = 0; s < strText.length; s += 1) {\n          if (font.metadata.hasOwnProperty(\"cmap\")) {\n            cmapConfirm = font.metadata.cmap.unicode.codeMap[strText[s].charCodeAt(0)];\n          }\n          if (!cmapConfirm) {\n            if (\n              strText[s].charCodeAt(0) < 256 &&\n              font.metadata.hasOwnProperty(\"Unicode\")\n            ) {\n              str += strText[s];\n            } else {\n              str += \"\";\n            }\n          } else {\n            str += strText[s];\n          }\n        }\n        var result = \"\";\n        if (parseInt(font.id.slice(1)) < 14 || encoding === \"WinAnsiEncoding\") {\n          result = this.pdf.internal.pdfEscape(str, key)\n            .split(\"\")\n            .map(function(cv) {\n              return cv.charCodeAt(0).toString(16);\n            })\n            .join(\"\");\n        } else if (encoding === \"Identity-H\") {\n          result = pdfEscape16(str, font);\n        }\n    \n        return result;\n      };      \n\n      // var escapedText = this.pdf.internal.pdfEscape(text);\n      // var escapedText = utf8TextFunction(text, font);\n      // if(escapedText != text) {\n      //   escapedText = \"<\" + escapedText + \">\";\n      // } else {\n      //   escapedText = \"(\" + escapedText + \")\";\n      // }\n\n      var escapedText = \"\";\n      if(font.encoding !== \"Identity-H\") {\n        escapedText = \"(\" + this.pdf.internal.pdfEscape(text) + \")\";\n      } else {\n        escapedText = \"<\" + utf8TextFunction(text, font) + \">\";\n      }\n\n      this.pdf.internal.write(\"/\" + font.id, (defaultFontSize * style[\"font-size\"]).toFixed(2), \"Tf\", escapedText + \" Tj\"); //set the word spacing back to neutral => 0\n\n      if (style['word-spacing'] !== undefined) {\n        this.pdf.internal.write(0, \"Tw\");\n      }\n    }; // Accepts #FFFFFF, rgb(int,int,int), or CSS Color Name\n\n\n    Renderer.prototype.getPdfColor = function (style) {\n      var textColor;\n      var r, g, b;\n      var rx = /rgb\\s*\\(\\s*(\\d+),\\s*(\\d+),\\s*(\\d+\\s*)\\)/;\n      var m = rx.exec(style);\n\n      if (m != null) {\n        r = parseInt(m[1]);\n        g = parseInt(m[2]);\n        b = parseInt(m[3]);\n      } else {\n        if (typeof style === \"string\" && style.charAt(0) != '#') {\n          var rgbColor = new RGBColor(style);\n\n          if (rgbColor.ok) {\n            style = rgbColor.toHex();\n          } else {\n            style = '#000000';\n          }\n        }\n\n        r = style.substring(1, 3);\n        r = parseInt(r, 16);\n        g = style.substring(3, 5);\n        g = parseInt(g, 16);\n        b = style.substring(5, 7);\n        b = parseInt(b, 16);\n      }\n\n      if (typeof r === 'string' && /^#[0-9A-Fa-f]{6}$/.test(r)) {\n        var hex = parseInt(r.substr(1), 16);\n        r = hex >> 16 & 255;\n        g = hex >> 8 & 255;\n        b = hex & 255;\n      }\n\n      var f3 = this.f3;\n\n      if (r === 0 && g === 0 && b === 0 || typeof g === 'undefined') {\n        textColor = f3(r / 255) + ' g';\n      } else {\n        textColor = [f3(r / 255), f3(g / 255), f3(b / 255), 'rg'].join(' ');\n      }\n\n      return textColor;\n    };\n\n    Renderer.prototype.f3 = function (number) {\n      return number.toFixed(3); // Ie, %.3f\n    }, Renderer.prototype.renderParagraph = function (cb) {\n      var blockstyle, defaultFontSize, fontToUnitRatio, fragments, i, l, line, lines, maxLineHeight, out, paragraphspacing_after, paragraphspacing_before, priorblockstyle, styles, fontSize;\n      fragments = PurgeWhiteSpace(this.paragraph.text);\n      styles = this.paragraph.style;\n      blockstyle = this.paragraph.blockstyle;\n      priorblockstyle = this.paragraph.priorblockstyle || {};\n      this.paragraph = {\n        text: [],\n        style: [],\n        blockstyle: {},\n        priorblockstyle: blockstyle\n      };\n\n      if (!fragments.join(\"\").trim()) {\n        return;\n      }\n\n      lines = this.splitFragmentsIntoLines(fragments, styles);\n      line = void 0;\n      maxLineHeight = void 0;\n      defaultFontSize = 12;\n      fontToUnitRatio = defaultFontSize / this.pdf.internal.scaleFactor;\n      this.priorMarginBottom = this.priorMarginBottom || 0;\n      paragraphspacing_before = (Math.max((blockstyle[\"margin-top\"] || 0) - this.priorMarginBottom, 0) + (blockstyle[\"padding-top\"] || 0)) * fontToUnitRatio;\n      paragraphspacing_after = ((blockstyle[\"margin-bottom\"] || 0) + (blockstyle[\"padding-bottom\"] || 0)) * fontToUnitRatio;\n      this.priorMarginBottom = blockstyle[\"margin-bottom\"] || 0;\n\n      if (blockstyle['page-break-before'] === 'always') {\n        this.pdf.addPage();\n        this.y = 0;\n        paragraphspacing_before = ((blockstyle[\"margin-top\"] || 0) + (blockstyle[\"padding-top\"] || 0)) * fontToUnitRatio;\n      }\n\n      out = this.pdf.internal.write;\n      i = void 0;\n      l = void 0;\n      this.y += paragraphspacing_before;\n      out(\"q\", \"BT 0 g\", this.pdf.internal.getCoordinateString(this.x), this.pdf.internal.getVerticalCoordinateString(this.y), \"Td\"); //stores the current indent of cursor position\n\n      var currentIndent = 0;\n\n      while (lines.length) {\n        line = lines.shift();\n        maxLineHeight = 0;\n        i = 0;\n        l = line.length;\n\n        while (i !== l) {\n          if (line[i][0].trim()) {\n            maxLineHeight = Math.max(maxLineHeight, line[i][1][\"line-height\"], line[i][1][\"font-size\"]);\n            fontSize = line[i][1][\"font-size\"] * 7;\n          }\n\n          i++;\n        } //if we have to move the cursor to adapt the indent\n\n\n        var indentMove = 0;\n        var wantedIndent = 0; //if a margin was added (by e.g. a text-alignment), move the cursor\n\n        if (line[0][1][\"margin-left\"] !== undefined && line[0][1][\"margin-left\"] > 0) {\n          wantedIndent = this.pdf.internal.getCoordinateString(line[0][1][\"margin-left\"]);\n          indentMove = wantedIndent - currentIndent;\n          currentIndent = wantedIndent;\n        }\n\n        var indentMore = Math.max(blockstyle[\"margin-left\"] || 0, 0) * fontToUnitRatio; //move the cursor\n\n        out(indentMove + indentMore, (-1 * defaultFontSize * maxLineHeight).toFixed(2), \"Td\");\n        i = 0;\n        l = line.length;\n\n        while (i !== l) {\n          if (line[i][0]) {\n            this.RenderTextFragment(line[i][0], line[i][1]);\n          }\n\n          i++;\n        }\n\n        this.y += maxLineHeight * fontToUnitRatio; //if some watcher function was executed successful, so e.g. margin and widths were changed,\n        //reset line drawing and calculate position and lines again\n        //e.g. to stop text floating around an image\n\n        if (this.executeWatchFunctions(line[0][1]) && lines.length > 0) {\n          var localFragments = [];\n          var localStyles = []; //create fragment array of\n\n          lines.forEach(function (localLine) {\n            var i = 0;\n            var l = localLine.length;\n\n            while (i !== l) {\n              if (localLine[i][0]) {\n                localFragments.push(localLine[i][0] + ' ');\n                localStyles.push(localLine[i][1]);\n              }\n\n              ++i;\n            }\n          }); //split lines again due to possible coordinate changes\n\n          lines = this.splitFragmentsIntoLines(PurgeWhiteSpace(localFragments), localStyles); //reposition the current cursor\n\n          out(\"ET\", \"Q\");\n          out(\"q\", \"BT 0 g\", this.pdf.internal.getCoordinateString(this.x), this.pdf.internal.getVerticalCoordinateString(this.y), \"Td\");\n        }\n      }\n\n      if (cb && typeof cb === \"function\") {\n        cb.call(this, this.x - 9, this.y - fontSize / 2);\n      }\n\n      out(\"ET\", \"Q\");\n      return this.y += paragraphspacing_after;\n    };\n\n    Renderer.prototype.setBlockBoundary = function (cb) {\n      return this.renderParagraph(cb);\n    };\n\n    Renderer.prototype.setBlockStyle = function (css) {\n      return this.paragraph.blockstyle = css;\n    };\n\n    Renderer.prototype.addText = function (text, css) {\n      this.paragraph.text.push(text);\n      return this.paragraph.style.push(css);\n    };\n\n    FontNameDB = {\n      helvetica: \"helvetica\",\n      \"sans-serif\": \"helvetica\",\n      \"times new roman\": \"times\",\n      serif: \"times\",\n      times: \"times\",\n      monospace: \"courier\",\n      courier: \"courier\"\n    };\n    FontWeightMap = {\n      100: \"normal\",\n      200: \"normal\",\n      300: \"normal\",\n      400: \"normal\",\n      500: \"bold\",\n      600: \"bold\",\n      700: \"bold\",\n      800: \"bold\",\n      900: \"bold\",\n      normal: \"normal\",\n      bold: \"bold\",\n      bolder: \"bold\",\n      lighter: \"normal\"\n    };\n    FontStyleMap = {\n      normal: \"normal\",\n      italic: \"italic\",\n      oblique: \"italic\"\n    };\n    TextAlignMap = {\n      left: \"left\",\n      right: \"right\",\n      center: \"center\",\n      justify: \"justify\"\n    };\n    FloatMap = {\n      none: 'none',\n      right: 'right',\n      left: 'left'\n    };\n    ClearMap = {\n      none: 'none',\n      both: 'both'\n    };\n    UnitedNumberMap = {\n      normal: 1\n    };\n    /**\n     * Converts HTML-formatted text into formatted PDF text.\n     *\n     * Notes:\n     * 2012-07-18\n     * Plugin relies on having browser, DOM around. The HTML is pushed into dom and traversed.\n     * Plugin relies on jQuery for CSS extraction.\n     * Targeting HTML output from Markdown templating, which is a very simple\n     * markup - div, span, em, strong, p. No br-based paragraph separation supported explicitly (but still may work.)\n     * Images, tables are NOT supported.\n     *\n     * @public\n     * @function\n     * @param HTML {String|Object} HTML-formatted text, or pointer to DOM element that is to be rendered into PDF.\n     * @param x {Number} starting X coordinate in jsPDF instance's declared units.\n     * @param y {Number} starting Y coordinate in jsPDF instance's declared units.\n     * @param settings {Object} Additional / optional variables controlling parsing, rendering.\n     * @returns {Object} jsPDF instance\n     */\n\n    jsPDFAPI.fromHTML = function (HTML, x, y, settings, callback, margins) {\n\n      this.margins_doc = margins || {\n        top: 0,\n        bottom: 0\n      };\n      if (!settings) settings = {};\n      if (!settings.elementHandlers) settings.elementHandlers = {};\n      return process(this, HTML, isNaN(x) ? 4 : x, isNaN(y) ? 4 : y, settings, callback);\n    };\n  })(jsPDF.API);\n","import IntervalTree from 'node-interval-tree';\nimport { DocOptions, DocController } from '../doc_controller';\nimport { IPdfBrick } from '../pdf_render/pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\n\ninterface PackInterval {\n    pageIndex: number;\n    xLeft: number;\n    xRight: number;\n    yBot: number;\n    absBot: number;\n}\nexport class PagePacker {\n    private static findBotInterval(tree: IntervalTree<PackInterval>,\n        xLeft: number, xRight: number, options: DocOptions): PackInterval {\n        const intervals: PackInterval[] = tree.search(xLeft, xRight);\n        intervals.push({\n            pageIndex: 0, xLeft:\n                options.margins.left, xRight: options.margins.left,\n            yBot: options.margins.top, absBot: options.margins.top\n        });\n        return intervals.reduce((mx, cr) => {\n            if (Math.abs(cr.xRight - xLeft) < SurveyHelper.EPSILON ||\n                Math.abs(cr.xLeft - xRight) < SurveyHelper.EPSILON) return mx;\n            if (cr.pageIndex < mx.pageIndex) return mx;\n            if (cr.pageIndex > mx.pageIndex) return cr;\n            return cr.yBot > mx.yBot ? cr : mx;\n        }, intervals[intervals.length - 1]);\n    }\n    private static addPack(packs: IPdfBrick[][], index: number, brick: IPdfBrick) {\n        for (let i: number = packs.length; i <= index; i++) {\n            packs.push([]);\n        }\n        packs[index].push(brick);\n    }\n    public static pack(flats: IPdfBrick[][], controller: DocController): IPdfBrick[][] {\n        const pageHeight: number = controller.paperHeight -\n            controller.margins.top - controller.margins.bot;\n        const unfoldFlats: IPdfBrick[][] = [];\n        flats.forEach((flatsPage: IPdfBrick[]) => {\n            unfoldFlats.push([]);\n            flatsPage.forEach((flat: IPdfBrick) => {\n                if (flat.height > pageHeight + SurveyHelper.EPSILON) {\n                    unfoldFlats[unfoldFlats.length - 1].push(...flat.unfold());\n                }\n                else unfoldFlats[unfoldFlats.length - 1].push(flat);\n            });\n        });\n        unfoldFlats.forEach((unfoldFlatsPage: IPdfBrick[]) => {\n            unfoldFlatsPage.sort((a: IPdfBrick, b: IPdfBrick) => {\n                if (a.yTop < b.yTop) return -1;\n                if (a.yTop > b.yTop) return 1;\n                if (a.xLeft > b.xLeft) return 1;\n                if (a.xLeft < b.xLeft) return -1;\n                return 0;\n            });\n        });\n        let pageIndexModel: number = 0;\n        const packs: IPdfBrick[][] = [];\n        const pageBot: number = controller.paperHeight - controller.margins.bot;\n        unfoldFlats.forEach((unfoldFlatsPage: IPdfBrick[]) => {\n            const tree: IntervalTree<PackInterval> = new IntervalTree();\n            let pageIndexShift: number = 0;\n            unfoldFlatsPage.forEach((flat: IPdfBrick) => {\n                let { pageIndex, yBot, absBot } = PagePacker.findBotInterval(\n                    tree, flat.xLeft, flat.xRight, controller);\n                const height: number = flat.height;\n                flat.yTop = yBot + flat.yTop - absBot;\n                if (Math.abs(flat.yTop - controller.margins.top) > SurveyHelper.EPSILON &&\n                    flat.yTop + height > pageBot + SurveyHelper.EPSILON || flat.isPageBreak) {\n                    flat.yTop = controller.margins.top;\n                    pageIndex++;\n                    pageIndexShift = Math.max(pageIndexShift, pageIndex);\n                }\n                tree.insert(flat.xLeft, flat.xRight, {\n                    pageIndex: pageIndex,\n                    xLeft: flat.xLeft, xRight: flat.xRight,\n                    yBot: flat.yTop + height, absBot: flat.yBot\n                });\n                flat.yBot = flat.yTop + height;\n                PagePacker.addPack(packs, pageIndexModel + pageIndex, flat);\n            });\n            pageIndexModel += pageIndexShift + 1;\n        });\n        return packs;\n    }\n}","import { IQuestion, QuestionBooleanModel } from 'survey-core';\nimport { IRect, DocController } from '../doc_controller';\nimport { CheckItemBrick } from './pdf_checkitem';\n\nexport class BooleanItemBrick extends CheckItemBrick {\n    public constructor(question: IQuestion, controller: DocController,\n        rect: IRect) {\n        super(controller, rect,\n            (<QuestionBooleanModel>question).id,\n            { question: question, readOnly: question.isReadOnly, checked: (<QuestionBooleanModel>question).booleanValue });\n    }\n}","import { IRect, ISize, DocController } from '../doc_controller';\nimport { IQuestion, Question } from 'survey-core';\nimport { SurveyHelper } from '../helper_survey';\n\nexport type TranslateXFunction = (xLeft: number, xRight : number) => { xLeft: number, xRight: number};\nexport interface IPdfBrick extends IRect, ISize {\n    render(): Promise<void>;\n    unfold(): IPdfBrick[];\n    translateX(func: TranslateXFunction): void;\n    isPageBreak: boolean;\n}\n/**\n * An object that describes a PDF brick&mdash;a simple element with specified content, size, and location. Bricks are fundamental elements used to construct a PDF document.\n *\n * You can access `PdfBrick` objects within functions that handle `SurveyPDF`'s [`onRenderQuestion`](https://surveyjs.io/pdf-generator/documentation/api-reference/surveypdf#onRenderQuestion), [`onRenderPanel`](https://surveyjs.io/pdf-generator/documentation/api-reference/surveypdf#onRenderPanel), and [`onRenderPage`](https://surveyjs.io/pdf-generator/documentation/api-reference/surveypdf#onRenderPage) events.\n *\n * [View Demo](https://surveyjs.io/pdf-generator/examples/add-markup-to-customize-pdf-forms/ (linkStyle))\n */\nexport class PdfBrick implements IPdfBrick {\n    protected _xLeft: number;\n    protected _xRight: number;\n    protected _yTop: number;\n    protected _yBot: number;\n\n    /**\n     * An X-coordinate for the left brick edge.\n     */\n    public get xLeft(): number {\n        return this._xLeft;\n    }\n    public set xLeft(val: number) {\n        this.setXLeft(val);\n    }\n    /**\n     * An X-coordinate for the right brick edge.\n     */\n    public get xRight(): number {\n        return this._xRight;\n    }\n    public set xRight(val: number) {\n        this.setXRight(val);\n    }\n    /**\n     * A Y-coordinate for the top brick edge.\n     */\n    public get yTop(): number {\n        return this._yTop;\n    }\n    public set yTop(val: number) {\n        this.setYTop(val);\n    }\n    /**\n     * A Y-coordinate for the bottom brick edge.\n     */\n    public get yBot(): number {\n        return this._yBot;\n    }\n    public set yBot(val: number) {\n        this.setYBottom(val);\n    }\n    /**\n     * Font size in points.\n     *\n     * Default value: 14 (inherited from the parent PDF document)\n     */\n    public fontSize: number;\n    /**\n     * The color of text within the brick.\n     *\n     * Default value: `\"#404040\"`\n     */\n    public textColor: string = SurveyHelper.TEXT_COLOR;\n    public formBorderColor: string = SurveyHelper.FORM_BORDER_COLOR;\n    public isPageBreak: boolean = false;\n    public constructor(protected question: IQuestion,\n        protected controller: DocController, rect: IRect) {\n        this.xLeft = rect.xLeft;\n        this.xRight = rect.xRight;\n        this.yTop = rect.yTop;\n        this.yBot = rect.yBot;\n        this.fontSize = !!controller ?\n            controller.fontSize : DocController.FONT_SIZE;\n    }\n    translateX(func: TranslateXFunction): void {\n        const res = func(this.xLeft, this.xRight);\n        this.xLeft = res.xLeft;\n        this.xRight = res.xRight;\n    }\n    /**\n     * The brick's width in pixels.\n     */\n    public get width(): number {\n        return this.xRight - this.xLeft;\n    }\n    /**\n     * The brick's height in pixels.\n     */\n    public get height(): number {\n        return this.yBot - this.yTop;\n    }\n    protected getShouldRenderReadOnly(): boolean {\n        return SurveyHelper.shouldRenderReadOnly(this.question, this.controller);\n    }\n    public afterRenderCallback: () => void;\n    public async render(): Promise<void> {\n        if (this.getShouldRenderReadOnly()) {\n            await this.renderReadOnly();\n        }\n        else await this.renderInteractive();\n        this.afterRenderCallback && this.afterRenderCallback();\n    }\n    public async renderInteractive(): Promise<void> { }\n    public async renderReadOnly(): Promise<void> {\n        await this.renderInteractive();\n    }\n    /**\n     * Allows you to get a flat array of nested PDF bricks.\n     * @returns A flat array of nested PDF bricks.\n     */\n    public unfold(): IPdfBrick[] {\n        return [this];\n    }\n    protected getCorrectedText(val: string): string {\n        return this.controller.isRTL ? (val || '').split('').reverse().join(''): val;\n    }\n    protected setXLeft(val: number): void {\n        this._xLeft = val;\n    }\n    protected setXRight(val: number): void {\n        this._xRight = val;\n    }\n    protected setYTop(val: number): void {\n        this._yTop = val;\n    }\n    protected setYBottom(val: number): void {\n        this._yBot = val;\n    }\n}\n","import { IQuestion, QuestionCheckboxModel, ItemValue } from 'survey-core';\nimport { IRect, DocController } from '../doc_controller';\nimport { CheckItemBrick } from './pdf_checkitem';\n\nexport class CheckboxItemBrick extends CheckItemBrick {\n    public constructor(question: IQuestion, controller: DocController,\n        rect: IRect, item: ItemValue, index: number) {\n        super(controller, rect,\n            (<QuestionCheckboxModel>question).id + 'index' + index,\n            { question: question, readOnly: question.isReadOnly || !item.isEnabled, item: item, checked: (<QuestionCheckboxModel>question).isItemSelected(item), index: index });\n    }\n}","import { IQuestion, ItemValue, QuestionCheckboxModel } from 'survey-core';\nimport { IRect, ISize, DocController, IPoint } from '../doc_controller';\nimport { IPdfBrick, PdfBrick } from './pdf_brick';\nimport { TextBrick } from './pdf_text';\nimport { SurveyHelper } from '../helper_survey';\nimport { SurveyPDF } from '../survey';\n\nexport interface ICheckItemBrickContext {\n    question: IQuestion;\n    readOnly: boolean;\n    checked: boolean;\n    item?: ItemValue;\n    index?: number;\n}\nexport class CheckItemBrick extends PdfBrick {\n    private static readonly FONT_SIZE_SCALE: number = 0.7;\n    private static readonly CHECKMARK_READONLY_SYMBOL: string = '3';\n    private static readonly CHECKMARK_READONLY_FONT: string = 'zapfdingbats';\n    public static readonly CHECKMARK_READONLY_FONT_SIZE_SCALE: number = 1.0 - Math.E / 10.0;\n    protected question: QuestionCheckboxModel;\n    public constructor(controller: DocController,\n        rect: IRect, protected fieldName: string, protected context: ICheckItemBrickContext) {\n        super(context.question, controller, rect);\n        this.question = <QuestionCheckboxModel>this.context.question;\n        this.textColor = this.formBorderColor;\n    }\n    protected getShouldRenderReadOnly(): boolean {\n        return this.context.readOnly && SurveyHelper.getReadonlyRenderAs(\n            this.question, this.controller) !== 'acroform' || this.controller.compress;\n    }\n    public async renderInteractive(): Promise<void> {\n        const checkBox: any = new (<any>this.controller.doc.AcroFormCheckBox)();\n        const formScale: number = SurveyHelper.formScale(this.controller, this);\n        const options: any = {};\n        options.maxFontSize = this.height * formScale * CheckItemBrick.FONT_SIZE_SCALE;\n        options.caption = CheckItemBrick.CHECKMARK_READONLY_SYMBOL;\n        options.textAlign = 'center';\n        options.fieldName = this.fieldName;\n        options.readOnly = this.context.readOnly;\n        options.color = this.formBorderColor;\n        options.value = this.context.checked ? 'On' : false;\n        options.AS = this.context.checked ? '/On' : '/Off';\n        options.context = this.context;\n\n        options.Rect = SurveyHelper.createAcroformRect(\n            SurveyHelper.scaleRect(this, formScale));\n        this.controller.doc.addField(checkBox);\n        (<SurveyPDF>this.question.survey)?.getUpdatedCheckItemAcroformOptions(options);\n\n        checkBox.maxFontSize = options.maxFontSize;\n        checkBox.caption = options.caption;\n        checkBox.textAlign = options.textAlign;\n        checkBox.fieldName = options.fieldName;\n        checkBox.readOnly = options.readOnly;\n        checkBox.color = options.color;\n        checkBox.value = options.value;\n        checkBox.AS = options.AS;\n        checkBox.Rect = options.Rect;\n\n        SurveyHelper.renderFlatBorders(this.controller, this);\n    }\n    public async renderReadOnly(): Promise<void> {\n        SurveyHelper.renderFlatBorders(this.controller, this);\n        if (this.context.checked) {\n            const checkmarkPoint: IPoint = SurveyHelper.createPoint(this, true, true);\n            const oldFontName: string = this.controller.fontName;\n            this.controller.fontName = CheckItemBrick.CHECKMARK_READONLY_FONT;\n            const oldFontSize: number = this.controller.fontSize;\n            this.controller.fontSize = oldFontSize *\n                CheckItemBrick.CHECKMARK_READONLY_FONT_SIZE_SCALE;\n            const checkmarkSize: ISize = this.controller.measureText(\n                CheckItemBrick.CHECKMARK_READONLY_SYMBOL);\n            checkmarkPoint.xLeft += this.width / 2.0 - checkmarkSize.width / 2.0;\n            checkmarkPoint.yTop += this.height / 2.0 - checkmarkSize.height / 2.0;\n            const checkmarkFlat: IPdfBrick = await SurveyHelper.createTextFlat(\n                checkmarkPoint, this.question, this.controller,\n                CheckItemBrick.CHECKMARK_READONLY_SYMBOL, TextBrick);\n            (<any>checkmarkFlat.unfold()[0]).textColor = this.textColor;\n            this.controller.fontSize = oldFontSize;\n            await checkmarkFlat.render();\n            this.controller.fontName = oldFontName;\n        }\n    }\n}","import { IRect, DocController } from '../doc_controller';\nimport { PdfBrick } from './pdf_brick';\n\nexport class ColoredBrick extends PdfBrick {\n    public constructor(controller: DocController,\n        rect: IRect, private color: string, private renderWidth?: number, private renderHeight?: number) {\n        super(undefined, controller, rect);\n    }\n    public async renderInteractive(): Promise<void> {\n        let oldFillColor: string = this.controller.doc.getFillColor();\n        this.controller.doc.setFillColor(this.color || 'black');\n        this.controller.doc.rect(this.xLeft, this.yTop,\n            this.renderWidth ?? this.width, this.renderHeight ?? this.height, 'F');\n        this.controller.doc.setFillColor(oldFillColor);\n    }\n}","import { IPdfBrick, TranslateXFunction } from './pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class CompositeBrick implements IPdfBrick {\n    private bricks: IPdfBrick[] = [];\n    private _xLeft: number;\n    private _xRight: number;\n    private _yTop: number;\n    private _yBot: number;\n    public isPageBreak: boolean = false;\n    public constructor(...bricks: IPdfBrick[]) {\n        this._xLeft = 0.0;\n        this._xRight = 0.0;\n        this._yTop = 0.0;\n        this._yBot = 0.0;\n        this.addBrick(...bricks);\n    }\n    get xLeft(): number { return this._xLeft; }\n    set xLeft(xLeft: number) {\n        this.shift(xLeft - this.xLeft, 0.0, 0.0, 0.0);\n        this._xLeft = xLeft;\n    }\n    get xRight(): number { return this._xRight; }\n    set xRight(xRight: number) {\n        this.shift(0.0, xRight - this.xRight, 0.0, 0.0);\n        this._xRight = xRight;\n    }\n    get yTop(): number { return this._yTop; }\n    set yTop(yTop: number) {\n        this.shift(0.0, 0.0, yTop - this.yTop, 0.0);\n        this._yTop = yTop;\n    }\n    get yBot(): number { return this._yBot; }\n    set yBot(yBot: number) {\n        this.shift(0.0, 0.0, 0.0, yBot - this.yBot);\n        this._yBot = yBot;\n    }\n    private shift(leftShift: number, rightShift: number,\n        topShift: number, botShift: number) {\n        this.bricks.forEach((brick: IPdfBrick) => {\n            brick.xLeft += leftShift;\n            brick.xRight += rightShift;\n            brick.yTop += topShift;\n            brick.yBot += botShift;\n        });\n    }\n    public get width(): number {\n        return this.xRight - this.xLeft;\n    }\n    public get height(): number {\n        return this.yBot - this.yTop;\n    }\n    public async render(): Promise<void> {\n        for (let i: number = 0; i < this.bricks.length; i++) {\n            await this.bricks[i].render();\n        }\n    }\n    public get isEmpty(): boolean {\n        return this.bricks.length === 0;\n    }\n    public addBrick(...bricks: IPdfBrick[]) {\n        if (bricks.length != 0) {\n            this.bricks.push(...bricks);\n            let mergeRect = SurveyHelper.mergeRects(...this.bricks);\n            this._xLeft = mergeRect.xLeft;\n            this._xRight = mergeRect.xRight;\n            this._yTop = mergeRect.yTop;\n            this._yBot = mergeRect.yBot;\n        }\n    }\n    public unfold(): IPdfBrick[] {\n        const unfoldBricks: IPdfBrick[] = [];\n        this.bricks.forEach((brick: IPdfBrick) => {\n            unfoldBricks.push(...brick.unfold());\n        });\n        return unfoldBricks;\n    }\n    translateX(func: TranslateXFunction): void {\n        this.bricks.forEach(brick => brick.translateX(func));\n        const res = func(this.xLeft, this.xRight);\n        this._xLeft = res.xLeft;\n        this._xRight = res.xRight;\n    }\n}","import { PdfBrick } from './pdf_brick';\nimport { DocController, IRect } from '../doc_controller';\nimport { IQuestion } from 'survey-core';\n\nexport class CustomBrick extends PdfBrick {\n\n    constructor(question: IQuestion, controller: DocController, private renderFunc: (doc: any, question: any, xLeft: number, yTop: number) => IRect) {\n        super(question, controller, renderFunc(controller.helperDoc, question, 0, 0));\n    }\n    public async renderInteractive(): Promise<void> {\n        await new Promise<void>((resolve) => {\n            this.renderFunc(this.controller.doc, this.question, this.xLeft, this.yTop);\n            resolve();\n        });\n    }\n}","import { IQuestion } from 'survey-core';\nimport { IRect, DocController } from '../doc_controller';\nimport { TextBrick } from './pdf_text';\n\nexport class DescriptionBrick extends TextBrick {\n    public constructor(question: IQuestion, controller: DocController,\n        rect: IRect, text: string) {\n        super(question, controller, rect, text);\n    }\n}","import { IQuestion, QuestionDropdownModel, ItemValue } from 'survey-core';\nimport { IRect, DocController } from '../doc_controller';\nimport { PdfBrick } from './pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class DropdownBrick extends PdfBrick {\n    protected question: QuestionDropdownModel;\n    protected isQuestion: boolean;\n    protected isMultiline: boolean;\n    public constructor(question: IQuestion,\n        protected controller: DocController, rect: IRect) {\n        super(question, controller, rect);\n        this.question = <QuestionDropdownModel>question;\n    }\n    public async renderInteractive(): Promise<void> {\n        const comboBox = new (<any>this.controller.doc.AcroFormComboBox)();\n        comboBox.fieldName = this.question.id;\n        comboBox.Rect = SurveyHelper.createAcroformRect(\n            SurveyHelper.scaleRect(this,\n                SurveyHelper.formScale(this.controller, this)));\n        comboBox.edit = false;\n        comboBox.color = this.textColor;\n        const options: string[] = [];\n        if (this.question.showOptionsCaption) {\n            options.push(this.getCorrectedText(this.question.optionsCaption));\n        }\n        this.question.visibleChoices.forEach((item: ItemValue) => {\n            options.push(this.getCorrectedText(SurveyHelper.getLocString(item.locText)));\n        });\n        comboBox.setOptions(options);\n        comboBox.fontName = this.controller.fontName;\n        comboBox.fontSize = this.fontSize;\n        comboBox.readOnly = this.question.isReadOnly;\n        comboBox.isUnicode = SurveyHelper.isCustomFont(\n            this.controller, comboBox.fontName);\n        comboBox.V = this.getCorrectedText(this.question.readOnlyText || '');\n        this.controller.doc.addField(comboBox);\n        SurveyHelper.renderFlatBorders(this.controller, this);\n    }\n}","import { PdfBrick } from './pdf_brick';\nimport { DocController, IRect } from '../doc_controller';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class EmptyBrick extends PdfBrick {\n    private isBorderVisible: boolean = false;\n\n    constructor(rect: IRect,\n        protected controller: DocController = null,\n        isBorderVisible: boolean = false) {\n        super(null, controller, rect);\n        this.isBorderVisible = isBorderVisible;\n    }\n\n    private resizeBorder(isIncrease: boolean): void {\n        const coef: number = isIncrease ? 1 : -1;\n        const borderPadding: number = this.controller.doc.getFontSize() * SurveyHelper.VALUE_READONLY_PADDING_SCALE;\n        this.xLeft -= coef * borderPadding;\n        this.xRight += coef * borderPadding;\n        this.yBot += coef * borderPadding;\n    }\n\n    public async renderInteractive(): Promise<void> {\n        if (this.isBorderVisible) {\n            this.resizeBorder(true);\n            SurveyHelper.renderFlatBorders(this.controller, this);\n            this.resizeBorder(false);\n        }\n    }\n}","import { IQuestion } from 'survey-core';\nimport { PdfBrick } from './pdf_brick';\nimport { IRect, DocController } from '../doc_controller';\n\nexport class HTMLBrick extends PdfBrick {\n    private margins: { top: number, bottom: number };\n    public constructor(question: IQuestion, controller: DocController,\n        rect: IRect, protected html: string, isImage: boolean = false) {\n        super(question, controller, rect);\n        if (isImage) {\n            this.margins = {\n                top: 0.0,\n                bottom: 0.0\n            };\n        }\n        else {\n            this.margins = {\n                top: controller.margins.top,\n                bottom: controller.margins.bot\n            };\n        }\n    }\n    public async renderInteractive(): Promise<void> {\n        let oldFontSize: number = this.controller.fontSize;\n        this.controller.fontSize = this.fontSize;\n        await new Promise<void>((resolve) => {\n            this.controller.doc.fromHTML(this.html, this.xLeft, this.yTop, {\n                width: this.width, pagesplit: true,\n            }, function () {\n                [].slice.call(document.querySelectorAll('.sjs-pdf-hidden-html-div')).forEach(\n                    function (el: HTMLDivElement) {\n                        el.parentNode.removeChild(el);\n                    }\n                );\n                resolve();\n            }, this.margins);\n        });\n        this.controller.fontSize = oldFontSize;\n    }\n}","import { IQuestion } from 'survey-core';\nimport { PdfBrick } from './pdf_brick';\nimport { DocController } from '../doc_controller';\nimport { IPoint } from '../entries/pdf';\n\nexport class ImageBrick extends PdfBrick {\n    public constructor(question: IQuestion, controller: DocController, protected image: string,\n        point: IPoint, protected originalWidth: number, protected originalHeight: number) {\n        super(question, controller, {\n            xLeft: point.xLeft,\n            xRight: point.xLeft + (originalWidth || 0),\n            yTop: point.yTop,\n            yBot: point.yTop + (originalHeight || 0)\n        });\n        this.isPageBreak = this.originalHeight === undefined;\n    }\n    public async renderInteractive(): Promise<void> {\n        await new Promise<void>((resolve) => {\n            try {\n                this.controller.doc.addImage(this.image, 'PNG', this.xLeft, this.yTop, this.originalWidth, this.originalHeight);\n            } finally {\n                resolve();\n            }\n        });\n    }\n}","import { Question } from 'survey-core';\nimport { TextBrick } from './pdf_text';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class LinkBrick extends TextBrick {\n    private static readonly SCALE_FACTOR_MAGIC: number = 0.955;\n    public static readonly COLOR: string = '#0000EE';\n    public constructor(textFlat: TextBrick, protected link: string) {\n        super((<LinkBrick>textFlat).question,\n            (<LinkBrick>textFlat).controller,\n            textFlat, (<LinkBrick>textFlat).text);\n        this.textColor = LinkBrick.COLOR;\n    }\n    public async renderInteractive(): Promise<void> {\n        let oldTextColor: string = this.controller.doc.getTextColor();\n        this.controller.doc.setTextColor(SurveyHelper.BACKGROUND_COLOR);\n        let descent: number = this.controller.unitHeight *\n            (this.controller.doc.getLineHeightFactor() -\n                LinkBrick.SCALE_FACTOR_MAGIC);\n        let yTopLink: number = this.yTop +\n            (this.yBot - this.yTop) - descent;\n        this.controller.doc.textWithLink(this.text, this.xLeft,\n            yTopLink, { url: this.link });\n        await super.renderInteractive();\n        this.controller.doc.setTextColor(oldTextColor);\n    }\n    public async renderReadOnly(): Promise<void> {\n        if (SurveyHelper.getReadonlyRenderAs(<Question>this.question,\n            this.controller) !== 'text') {\n            return this.renderInteractive();\n        }\n        await super.renderInteractive();\n    }\n}","import { IQuestion, ItemValue, Question } from 'survey-core';\nimport { IPoint, IRect, ISize, DocController } from '../doc_controller';\nimport { IPdfBrick, PdfBrick } from './pdf_brick';\nimport { TextBrick } from './pdf_text';\nimport { SurveyPDF } from '../survey';\nimport { SurveyHelper } from '../helper_survey';\n\nexport interface IRadiogroupWrapContext {\n    question: IQuestion;\n    readOnly: boolean;\n}\nexport class RadioGroupWrap {\n    private _radioGroup: any;\n    public constructor(public name: string,\n        private controller: DocController,\n        private context: IRadiogroupWrapContext) {\n    }\n    public addToPdf(color: string) {\n        this._radioGroup = new this.controller.doc.AcroFormRadioButton();\n        const options: any = {};\n        options.fieldName = this.name;\n        options.readOnly = this.readOnly;\n        options.color = color;\n        options.context = this.context;\n        (<SurveyPDF>this.context.question.survey)?.getUpdatedRadioGroupWrapOptions(options);\n        this._radioGroup.fieldName = options.fieldName;\n        this._radioGroup.readOnly = options.readOnly;\n        this._radioGroup.color = options.color;\n\n        this._radioGroup.value = '';\n        this.controller.doc.addField(this._radioGroup);\n    }\n    get radioGroup(): any {\n        return this._radioGroup;\n    }\n    get readOnly(): boolean {\n        return this.context.readOnly;\n    }\n}\n\nexport interface IRadioGroupItemBrickContext {\n    question: IQuestion;\n    checked: boolean;\n    index: number;\n    item: ItemValue;\n}\n\nexport class RadioItemBrick extends PdfBrick {\n    private static readonly RADIOMARKER_READONLY_SYMBOL: string = 'l';\n    private static readonly RADIOMARKER_READONLY_FONT: string = 'zapfdingbats';\n    public static readonly RADIOMARKER_READONLY_FONT_SIZE_SCALE: number = 1.0 - ((2.0 + Math.E) / 10.0);\n    public constructor(controller: DocController,\n        rect: IRect, private context: IRadioGroupItemBrickContext,\n        private radioGroupWrap: RadioGroupWrap) {\n        super(context.question, controller, rect);\n        this.textColor = this.formBorderColor;\n    }\n    protected getShouldRenderReadOnly(): boolean {\n        return this.radioGroupWrap.readOnly && SurveyHelper.getReadonlyRenderAs(\n            <Question>this.question, this.controller) !== 'acroform' || this.controller.compress;\n    }\n    public async renderInteractive(): Promise<void> {\n        if (this.context.index == 0) {\n            this.radioGroupWrap.addToPdf(this.formBorderColor);\n        }\n        const options: any = {};\n        options.fieldName = this.radioGroupWrap.name + 'index' + this.context.index;\n        let formScale: number = SurveyHelper.formScale(this.controller, this);\n        options.Rect = SurveyHelper.createAcroformRect(\n            SurveyHelper.scaleRect(this, formScale));\n        options.color = this.formBorderColor;\n        options.appearance = this.controller.doc.AcroForm.Appearance.RadioButton.Circle;\n        options.radioGroup = this.radioGroupWrap.radioGroup;\n        options.context = this.context;\n\n        (<SurveyPDF>this.context.question.survey)?.getUpdatedRadioItemAcroformOptions(options);\n        let radioButton: any = this.radioGroupWrap.radioGroup.createOption(options.fieldName);\n\n        if (this.context.checked) {\n            if(!options.AS) {\n                radioButton.AS = '/' + options.fieldName;\n            }\n            if(!this.radioGroupWrap.radioGroup.value) {\n                this.radioGroupWrap.radioGroup.value = options.fieldName;\n            }\n        }\n        else {\n            if(!options.AS) {\n                options.AS = '/Off';\n            }\n        }\n        radioButton.Rect = options.Rect;\n        radioButton.color = options.color;\n\n        SurveyHelper.renderFlatBorders(this.controller, this);\n        this.radioGroupWrap.radioGroup.setAppearance(\n            options.appearance\n        );\n    }\n    public async renderReadOnly(): Promise<void> {\n        SurveyHelper.renderFlatBorders(this.controller, this);\n        if (this.context.checked) {\n            const radiomarkerPoint: IPoint = SurveyHelper.createPoint(this, true, true);\n            const oldFontSize: number = this.controller.fontSize;\n            const oldFontName: string = this.controller.fontName;\n            this.controller.fontName = RadioItemBrick.RADIOMARKER_READONLY_FONT;\n            this.controller.fontSize = oldFontSize *\n                RadioItemBrick.RADIOMARKER_READONLY_FONT_SIZE_SCALE;\n            let radiomarkerSize: ISize = this.controller.measureText(\n                RadioItemBrick.RADIOMARKER_READONLY_SYMBOL);\n            radiomarkerPoint.xLeft += this.width / 2.0 - radiomarkerSize.width / 2.0;\n            radiomarkerPoint.yTop += this.height / 2.0 - radiomarkerSize.height / 2.0;\n            let radiomarkerFlat: IPdfBrick = await SurveyHelper.createTextFlat(\n                radiomarkerPoint, this.question, this.controller,\n                RadioItemBrick.RADIOMARKER_READONLY_SYMBOL, TextBrick);\n            (<any>radiomarkerFlat.unfold()[0]).textColor = this.textColor;\n            await radiomarkerFlat.render();\n            this.controller.fontSize = oldFontSize;\n            this.controller.fontName = oldFontName;\n        }\n    }\n}","import { IQuestion, QuestionRankingModel } from 'survey-core';\nimport { IRect, ISize, DocController, IPoint } from '../doc_controller';\nimport { IPdfBrick, PdfBrick } from './pdf_brick';\nimport { TextBrick } from './pdf_text';\nimport { CheckItemBrick } from './pdf_checkitem';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class RankingItemBrick extends PdfBrick {\n    protected question: QuestionRankingModel;\n    public constructor(question: IQuestion, controller: DocController,\n        rect: IRect, protected mark: string) {\n        super(question, controller, rect);\n        this.question = <QuestionRankingModel>question;\n        this.textColor = this.formBorderColor;\n    }\n    public async renderInteractive(): Promise<void> {\n        SurveyHelper.renderFlatBorders(this.controller, this);\n        const markPoint: IPoint = SurveyHelper.createPoint(this, true, true);\n        const oldFontSize: number = this.controller.fontSize;\n        this.controller.fontSize = oldFontSize *\n            CheckItemBrick.CHECKMARK_READONLY_FONT_SIZE_SCALE;\n        const markSize: ISize = this.controller.measureText(this.mark);\n        markPoint.xLeft += this.width / 2.0 - markSize.width / 2.0;\n        markPoint.yTop += this.height / 2.0 - markSize.height / 2.0;\n        const markFlat: IPdfBrick = await SurveyHelper.createTextFlat(\n            markPoint, this.question, this.controller, this.mark, TextBrick);\n        (<any>markFlat.unfold()[0]).textColor = this.textColor;\n        this.controller.fontSize = oldFontSize;\n        await markFlat.render();\n    }\n}","import { IRect, DocController } from '../doc_controller';\nimport { IPdfBrick, TranslateXFunction } from './pdf_brick';\n\nexport class RowlineBrick implements IPdfBrick {\n    xLeft: number;\n    xRight: number;\n    yTop: number;\n    yBot: number;\n    public isPageBreak: boolean = false;\n    public constructor(protected controller: DocController,\n        rect: IRect, public color: string) {\n        this.xLeft = rect.xLeft;\n        this.xRight = rect.xRight;\n        this.yTop = rect.yTop;\n        this.yBot = rect.yBot;\n    }\n    public get width(): number {\n        return this.xRight - this.xLeft;\n    }\n    public get height(): number {\n        return this.yBot - this.yTop;\n    }\n    public async render(): Promise<void> {\n        if (this.color !== null) {\n            let oldDrawColor: string = this.controller.doc.getDrawColor();\n            this.controller.doc.setDrawColor(this.color);\n            this.controller.doc.line(this.xLeft, this.yTop, this.xRight, this.yTop);\n            this.controller.doc.setDrawColor(oldDrawColor);\n        }\n    }\n    public unfold(): IPdfBrick[] {\n        return [this];\n    }\n    translateX(_: TranslateXFunction): void {}\n}","import { IQuestion, } from 'survey-core';\nimport { IPoint, IRect, DocController } from '../doc_controller';\nimport { PdfBrick } from './pdf_brick';\n\nexport class TextBrick extends PdfBrick {\n    protected align: any;\n    public constructor(question: IQuestion, controller: DocController,\n        rect: IRect, protected text: string) {\n        super(question, controller, rect);\n        this.align = {\n            isInputRtl: false,\n            isOutputRtl: controller.isRTL,\n            align: controller.isRTL ? 'right': 'left',\n            baseline: 'middle'\n        };\n    }\n    private escapeText() {\n        while (this.text.indexOf('\\t') > -1) {\n            this.text = this.text.replace('\\t', Array(5).join(String.fromCharCode(160)));\n        }\n        return this.text;\n    }\n    public async renderInteractive(): Promise<void> {\n        let alignPoint: IPoint = this.alignPoint(this);\n        let oldFontSize: number = this.controller.fontSize;\n        this.controller.fontSize = this.fontSize;\n        let oldTextColor: string = this.controller.doc.getTextColor();\n        this.controller.doc.setTextColor(this.textColor);\n        this.controller.doc.text(this.escapeText(), alignPoint.xLeft, alignPoint.yTop, this.align);\n        this.controller.doc.setTextColor(oldTextColor);\n        this.controller.fontSize = oldFontSize;\n    }\n    protected alignPoint(rect: IRect): IPoint {\n        return {\n            xLeft: this.controller.isRTL ? rect.xRight : rect.xLeft,\n            yTop: rect.yTop + (rect.yBot - rect.yTop) / 2.0\n        };\n    }\n}","import { IQuestion } from 'survey-core';\nimport { IRect, DocController } from '../doc_controller';\nimport { TextBrick } from './pdf_text';\n\nexport class TextBoldBrick extends TextBrick {\n    public constructor(question: IQuestion, controller: DocController,\n        rect: IRect, text: string) {\n        super(question, controller, rect, text);\n    }\n    public async renderInteractive(): Promise<void> {\n        this.controller.fontStyle = 'bold';\n        await super.renderInteractive();\n        this.controller.fontStyle = 'normal';\n    }\n}","import { IQuestion, QuestionTextModel, settings } from 'survey-core';\nimport { IRect, DocController } from '../doc_controller';\nimport { IPdfBrick, PdfBrick, TranslateXFunction } from './pdf_brick';\nimport { SurveyHelper } from '../helper_survey';\nimport { CompositeBrick } from './pdf_composite';\n\nexport interface ITextFieldBrickOptions {\n    isReadOnly: boolean;\n    fieldName: string;\n    shouldRenderBorders: boolean;\n    value?: string;\n    placeholder?: string;\n    inputType?: string;\n    isMultiline?: boolean;\n}\n\nexport class TextFieldBrick extends PdfBrick {\n    public constructor(protected question: IQuestion, controller: DocController,\n        rect: IRect, protected options: ITextFieldBrickOptions\n    ) {\n        super(question, controller, rect);\n        options.isMultiline = options.isMultiline ?? false;\n        options.placeholder = options.placeholder ?? '';\n        options.inputType = options.inputType ?? '';\n        options.value = options.value ?? '';\n        this.question = <QuestionTextModel>question;\n    }\n    private renderColorQuestion(): void {\n        let oldFillColor: string = this.controller.doc.getFillColor();\n        this.controller.doc.setFillColor(this.question.value || 'black');\n        this.controller.doc.rect(this.xLeft, this.yTop,\n            this.width, this.height, 'F');\n        this.controller.doc.setFillColor(oldFillColor);\n    }\n    public async renderInteractive(): Promise<void> {\n        if (this.options.inputType === 'color') {\n            this.renderColorQuestion();\n            return;\n        }\n        const inputField: any = this.options.inputType === 'password' ?\n            new (<any>this.controller.doc.AcroFormPasswordField)() :\n            new (<any>this.controller.doc.AcroFormTextField)();\n        inputField.fieldName = this.options.fieldName;\n        inputField.fontName = this.controller.fontName;\n        inputField.fontSize = this.fontSize;\n        inputField.isUnicode = SurveyHelper.isCustomFont(\n            this.controller, inputField.fontName);\n        if (this.options.inputType !== 'password') {\n            inputField.V = ' ' + this.getCorrectedText(this.options.value);\n            inputField.DV = ' ' + this.getCorrectedText(this.options.placeholder);\n        }\n        else inputField.value = '';\n        inputField.multiline = this.options.isMultiline;\n        inputField.readOnly = this.options.isReadOnly;\n        inputField.color = this.textColor;\n        let formScale: number = SurveyHelper.formScale(this.controller, this);\n        inputField.maxFontSize = this.controller.fontSize * formScale;\n        inputField.Rect = SurveyHelper.createAcroformRect(\n            SurveyHelper.scaleRect(this, formScale));\n        this.controller.doc.addField(inputField);\n        SurveyHelper.renderFlatBorders(this.controller, this);\n    }\n    protected shouldRenderFlatBorders(): boolean {\n        return this.options.shouldRenderBorders;\n    }\n    protected getShouldRenderReadOnly(): boolean {\n        return SurveyHelper.shouldRenderReadOnly(this.question, this.controller, this.options.isReadOnly);\n    }\n    private _textBrick: IPdfBrick;\n    public get textBrick(): IPdfBrick {\n        return this._textBrick;\n    }\n    public set textBrick(val: IPdfBrick) {\n        this._textBrick = val;\n        const unFoldedBricks = val.unfold();\n        const bricksCount = unFoldedBricks.length;\n        let renderedBricksCount = 0;\n        const bricksByPage: { [index: number]: Array<PdfBrick> } = {};\n        const afterRenderTextBrickCallback = (brick: PdfBrick) => {\n            if(this.shouldRenderFlatBorders()) {\n                renderedBricksCount++;\n                const currentPageNumber = this.controller.getCurrentPageIndex();\n                if(!bricksByPage[currentPageNumber]) {\n                    bricksByPage[currentPageNumber] = [];\n                }\n                bricksByPage[currentPageNumber].push(brick);\n                if(renderedBricksCount >= bricksCount) {\n                    const keys = Object.keys(bricksByPage);\n                    const renderedOnOnePage = keys.length == 1;\n                    keys.forEach((key: string) => {\n                        const compositeBrick = new CompositeBrick();\n                        bricksByPage[key as any].forEach((brick: PdfBrick) => {\n                            compositeBrick.addBrick(brick);\n                        });\n                        const padding = this.controller.unitHeight * SurveyHelper.VALUE_READONLY_PADDING_SCALE;\n                        const borderRect = {\n                            xLeft: this.xLeft,\n                            xRight: this.xRight,\n                            width: this.width,\n                            yTop: renderedOnOnePage ? this.yTop : compositeBrick.yTop - padding,\n                            yBot: renderedOnOnePage ? this.yBot : compositeBrick.yBot + padding,\n                            height: renderedOnOnePage ? this.height : compositeBrick.height + 2 * padding,\n                            formBorderColor: this.formBorderColor,\n                        };\n                        this.controller.setPage(Number(key));\n                        SurveyHelper.renderFlatBorders(this.controller, borderRect);\n                        this.controller.setPage(currentPageNumber);\n                    });\n                }\n            }\n        };\n        unFoldedBricks.forEach((brick: PdfBrick) => {\n            brick.afterRenderCallback = afterRenderTextBrickCallback.bind(this, brick);\n        });\n    }\n    public async renderReadOnly(): Promise<void> {\n        this.controller.pushMargins(this.xLeft,\n            this.controller.paperWidth - this.xRight);\n        if (this.options.inputType === 'color') {\n            this.renderColorQuestion();\n        } else {\n            await this.textBrick.render();\n        }\n        this.controller.popMargins();\n    }\n    public unfold(): IPdfBrick[] {\n        if (this.getShouldRenderReadOnly() && this.options.inputType !== 'color') {\n            return this.textBrick.unfold();\n        } else {\n            return super.unfold();\n        }\n    }\n    public translateX(func: TranslateXFunction): void {\n        const res = func(this.xLeft, this.xRight);\n        this._xLeft = res.xLeft;\n        this._xRight = res.xRight;\n        if(this.textBrick) {\n            this.textBrick.translateX(func);\n        }\n    }\n    protected setXLeft(val: number): void {\n        const delta = val - this._xLeft;\n        super.setXLeft(val);\n        if(this.textBrick) {\n            this.textBrick.xLeft = this.textBrick.xLeft + delta;\n        }\n    }\n    protected setXRight(val: number): void {\n        const delta = val - this._xRight;\n        super.setXRight(val);\n        if(this.textBrick) {\n            this.textBrick.xRight = this.textBrick.xRight + delta;\n        }\n    }\n    protected setYTop(val: number): void {\n        const delta = val - this._yTop;\n        super.setYTop(val);\n        if(this.textBrick) {\n            this.textBrick.yTop = this.textBrick.yTop + delta;\n        }\n    }\n    protected setYBottom(val: number): void {\n        const delta = val - this._yBot;\n        super.setYBottom(val);\n        if(this.textBrick) {\n            this.textBrick.yBot = this.textBrick.yBot + delta;\n        }\n    }\n}","import { IQuestion, QuestionTextModel } from 'survey-core';\nimport { IRect, DocController } from '../doc_controller';\nimport { TextBoldBrick } from './pdf_textbold';\nimport { SurveyHelper } from '../helper_survey';\n\nexport class TitlePanelBrick extends TextBoldBrick {\n    protected question: QuestionTextModel;\n    public constructor(question: IQuestion, controller: DocController,\n        rect: IRect, text: string) {\n        super(question, controller, rect, text);\n    }\n    public async renderInteractive(): Promise<void> {\n        let oldFontSize = this.controller.fontSize;\n        this.controller.fontSize = oldFontSize * SurveyHelper.TITLE_PANEL_FONT_SIZE_SCALE;\n        await super.renderInteractive();\n        this.controller.fontSize = oldFontSize;\n    }\n}","import { SurveyModel, Question, EventBase } from 'survey-core';\nimport * as SurveyCore from 'survey-core';\nimport { IDocOptions, DocController } from './doc_controller';\nimport { FlatSurvey } from './flat_layout/flat_survey';\nimport { PagePacker } from './page_layout/page_packer';\nimport { IPdfBrick } from './pdf_render/pdf_brick';\nimport { EventAsync, EventHandler } from './event_handler/event_handler';\nimport { DrawCanvas } from './event_handler/draw_canvas';\nimport { AdornersOptions, AdornersPanelOptions, AdornersPageOptions } from './event_handler/adorners';\nimport { SurveyHelper } from './helper_survey';\n\n/**\n * The `SurveyPDF` object enables you to export your surveys and forms to PDF documents.\n *\n * [View Demo](https://surveyjs.io/pdf-generator/examples/ (linkStyle))\n */\nexport class SurveyPDF extends SurveyModel {\n    private static currentlySaving: boolean = false;\n    private static saveQueue: any[] = [];\n    public options: IDocOptions;\n    public constructor(jsonObject: any, options?: IDocOptions) {\n        super(jsonObject);\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n        if(this.questionsOnPageMode == 'inputPerPage') {\n            this.questionsOnPageMode = 'standard';\n        }\n        this.options = SurveyHelper.clone(options);\n    }\n    public get haveCommercialLicense(): boolean {\n        const f = SurveyCore.hasLicense;\n        return !!f && f(2);\n    }\n    public set haveCommercialLicense(val: boolean) {\n        // eslint-disable-next-line no-console\n        console.error('As of v1.9.101, the haveCommercialLicense property is not supported. To activate your license, use the setLicenseKey(key) method as shown on the following page: https://surveyjs.io/remove-alert-banner');\n    }\n    /**\n     * An event that is raised when SurveyJS PDF Generator renders a page header. Handle this event to customize the header.\n     *\n     * Parameters:\n     *\n     * - `sender`: `SurveyPDF`\\\n     * A SurveyPDF instance that raised the event.\n     *\n     * - `canvas`: [`DrawCanvas`](https://surveyjs.io/pdf-generator/documentation/api-reference/drawcanvas)\\\n     * An object that you can use to draw text and images in the page header.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/customize-header-and-footer-of-pdf-form/ (linkStyle))\n     */\n    public onRenderHeader: EventAsync<SurveyPDF, DrawCanvas> =\n        new EventAsync<SurveyPDF, DrawCanvas>();\n    /**\n     * An event that is raised when SurveyJS PDF Generator renders a page footer. Handle this event to customize the footer.\n     *\n     * Parameters:\n     *\n     * - `sender`: `SurveyPDF`\\\n     * A SurveyPDF instance that raised the event.\n     *\n     * - `canvas`: [`DrawCanvas`](https://surveyjs.io/pdf-generator/documentation/api-reference/drawcanvas)\\\n     * An object that you can use to draw text and images in the page footer.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/customize-header-and-footer-of-pdf-form/ (linkStyle))\n     */\n    public onRenderFooter: EventAsync<SurveyPDF, DrawCanvas> =\n        new EventAsync<SurveyPDF, DrawCanvas>();\n    /**\n     * An event that is raised when SurveyJS PDF Generator renders a survey question. Handle this event to customize question rendering.\n     *\n     * Parameters:\n     *\n     * - `sender`: `SurveyPDF`\\\n     * A SurveyPDF instance that raised the event.\n     *\n     * - `options.question`: [`Question`](https://surveyjs.io/form-library/documentation/api-reference/question)\\\n     * A survey question that is being rendered.\n     *\n     * - `options.point`: `IPoint`\\\n     * An object with coordinates of the top-left corner of the element being rendered. This object contains the following properties: `{ xLeft: number, yTop: number }`.\n     *\n     * - `options.bricks`: [`PdfBrick[]`](https://surveyjs.io/pdf-generator/documentation/api-reference/pdfbrick)\\\n     * An array of [bricks](https://surveyjs.io/pdf-generator/documentation/customize-survey-question-rendering-in-pdf-form#custom-rendering) used to render the element.\n     *\n     * - `options.controller`: [`DocController`](https://surveyjs.io/pdf-generator/documentation/api-reference/doccontroller)\\\n     * An object that provides access to main PDF document properties (font, margins, page width and height) and allows you to modify them.\n     *\n     * - `options.repository`: `FlatRepository`\\\n     * A repository with classes that render elements to PDF. Use its `create` method if you need to create a new instance of a rendering class.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/how-to-use-adorners-in-pdf-forms/ (linkStyle))\n     */\n    public onRenderQuestion: EventAsync<SurveyPDF, AdornersOptions> =\n        new EventAsync<SurveyPDF, AdornersOptions>();\n    /**\n     * An event that is raised when SurveyJS PDF Generator renders a panel. Handle this event to customize panel rendering.\n     *\n     * Parameters:\n     *\n     * - `sender`: `SurveyPDF`\\\n     * A SurveyPDF instance that raised the event.\n     *\n     * - `options.panel`: [`PanelModel`](https://surveyjs.io/form-library/documentation/api-reference/panel-model)\\\n     * A panel that is being rendered.\n     *\n     * - `options.point`: `IPoint`\\\n     * An object with coordinates of the top-left corner of the element being rendered. This object contains the following properties: `{ xLeft: number, yTop: number }`.\n     *\n     * - `options.bricks`: [`PdfBrick[]`](https://surveyjs.io/pdf-generator/documentation/api-reference/pdfbrick)\\\n     * An array of [bricks](https://surveyjs.io/pdf-generator/documentation/customize-survey-question-rendering-in-pdf-form#custom-rendering) used to render the element.\n     *\n     * - `options.controller`: [`DocController`](https://surveyjs.io/pdf-generator/documentation/api-reference/doccontroller)\\\n     * An object that provides access to main PDF document properties (font, margins, page width and height) and allows you to modify them.\n     *\n     * - `options.repository`: `FlatRepository`\\\n     * A repository with classes that render elements to PDF. Use its `create` method if you need to create a new instance of a rendering class.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/how-to-use-adorners-in-pdf-forms/ (linkStyle))\n     */\n    public onRenderPanel: EventAsync<SurveyPDF, AdornersPanelOptions> =\n        new EventAsync<SurveyPDF, AdornersPanelOptions>();\n    /**\n     * An event that is raised when SurveyJS PDF Generator renders a page. Handle this event to customize page rendering.\n     *\n     * Parameters:\n     *\n     * - `sender`: `SurveyPDF`\\\n     * A SurveyPDF instance that raised the event.\n     *\n     * - `options.page`: [`PageModel`](https://surveyjs.io/form-library/documentation/api-reference/page-model)\\\n     * A page that is being rendered.\n     *\n     * - `options.point`: `IPoint`\\\n     * An object with coordinates of the top-left corner of the element being rendered. This object contains the following properties: `{ xLeft: number, yTop: number }`.\n     *\n     * - `options.bricks`: [`PdfBrick[]`](https://surveyjs.io/pdf-generator/documentation/api-reference/pdfbrick)\\\n     * An array of [bricks](https://surveyjs.io/pdf-generator/documentation/customize-survey-question-rendering-in-pdf-form#custom-rendering) used to render the element.\n     *\n     * - `options.controller`: [`DocController`](https://surveyjs.io/pdf-generator/documentation/api-reference/doccontroller)\\\n     * An object that provides access to main PDF document properties (font, margins, page width and height) and allows you to modify them.\n     *\n     * - `options.repository`: `FlatRepository`\\\n     * A repository with classes that render elements to PDF. Use its `create` method if you need to create a new instance of a rendering class.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/how-to-use-adorners-in-pdf-forms/ (linkStyle))\n     */\n    public onRenderPage: EventAsync<SurveyPDF, AdornersPageOptions> =\n        new EventAsync<SurveyPDF, AdornersPageOptions>();\n\n    public onDocControllerCreated: EventBase<SurveyPDF, { controller: DocController }> = new EventBase<SurveyPDF, {controller: DocController}>();\n\n    public onRenderCheckItemAcroform: EventAsync<SurveyPDF, any> =\n        new EventAsync<SurveyPDF, any>();\n\n    public onRenderRadioGroupWrapAcroform: EventAsync<SurveyPDF, any> =\n    new EventAsync<SurveyPDF, any>();\n\n    public onRenderRadioItemAcroform: EventAsync<SurveyPDF, any> =\n    new EventAsync<SurveyPDF, any>();\n\n    public getUpdatedCheckItemAcroformOptions(options: any): void {\n        this.onRenderCheckItemAcroform.fire(this, options);\n    }\n    public getUpdatedRadioGroupWrapOptions(options: any): void {\n        this.onRenderRadioGroupWrapAcroform.fire(this, options);\n    }\n    public getUpdatedRadioItemAcroformOptions(options: any): void {\n        this.onRenderRadioItemAcroform.fire(this, options);\n    }\n    private correctBricksPosition(controller: DocController, flats: IPdfBrick[][]) {\n        if(controller.isRTL) {\n            flats.forEach(flatsArr => {\n                flatsArr.forEach(flat => {\n                    flat.translateX((xLeft: number, xRight: number) => {\n                        const shiftWidth = controller.paperWidth - xLeft - xRight;\n                        return { xLeft: xLeft + shiftWidth, xRight: xRight + shiftWidth };\n                    });\n                });\n            });\n        }\n    }\n    protected async renderSurvey(controller: DocController): Promise<void> {\n        this.visiblePages.forEach(page => page.onFirstRendering());\n        const flats: IPdfBrick[][] = await FlatSurvey.generateFlats(this, controller);\n        this.correctBricksPosition(controller, flats);\n        const packs: IPdfBrick[][] = PagePacker.pack(flats, controller);\n        await EventHandler.process_header_events(this, controller, packs);\n        for (let i: number = 0; i < packs.length; i++) {\n            for (let j: number = 0; j < packs[i].length; j++) {\n                if (controller.getNumberOfPages() === i) {\n                    controller.addPage();\n                }\n                controller.setPage(i);\n                //gizmos bricks borders for debug\n                // packs[i][j].unfold().forEach((rect: IPdfBrick) => {\n                //     controller.doc.setDrawColor('green');\n                //     controller.doc.rect(...SurveyHelper.createAcroformRect(rect));\n                //     controller.doc.setDrawColor('black');\n                //   }\n                // );\n                await packs[i][j].render();\n            }\n        }\n    }\n    /**\n     * An asynchronous method that starts to download the generated PDF file in the web browser.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/save-completed-forms-as-pdf-files/ (linkStyle))\n     * @param fileName *(Optional)* A file name with the \".pdf\" extension. Default value: `\"survey_result.pdf\"`.\n     */\n    public async save(fileName: string = 'survey_result.pdf'): Promise<any> {\n        if(!SurveyPDF.currentlySaving) {\n            const controller: DocController = new DocController(this.options);\n            this.onDocControllerCreated.fire(this, { controller: controller });\n            SurveyPDF.currentlySaving = true;\n            SurveyHelper.fixFont(controller);\n            await this.renderSurvey(controller);\n            const promise = controller.doc.save(fileName, { returnPromise: true });\n            promise.then(() => {\n                SurveyPDF.currentlySaving = false;\n                const saveFunc = SurveyPDF.saveQueue.shift();\n                if(!!saveFunc) {\n                    saveFunc();\n                }\n            });\n            return promise;\n        } else {\n            SurveyPDF.saveQueue.push(() => {\n                this.save(fileName);\n            });\n        }\n    }\n    /**\n     * An asynchronous method that allows you to get PDF content in different formats.\n     *\n     * [View Demo](https://surveyjs.io/pdf-generator/examples/convert-pdf-form-blob-base64-raw-pdf-javascript/ (linkStyle))\n     *\n     * @param type *(Optional)* One of `\"blob\"`, `\"bloburl\"`, `\"dataurlstring\"`. Do not specify this parameter if you want to get raw PDF content as a string value.\n     *\n     */\n    public async raw(type?: string): Promise<string> {\n        const controller: DocController = new DocController(this.options);\n        this.onDocControllerCreated.fire(this, { controller: controller });\n        SurveyHelper.fixFont(controller);\n        await this.renderSurvey(controller);\n        return controller.doc.output(type);\n    }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_jspdf__;","module.exports = __WEBPACK_EXTERNAL_MODULE_survey_core__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/entries/pdf.ts\");\n",""],"names":[],"sourceRoot":""}