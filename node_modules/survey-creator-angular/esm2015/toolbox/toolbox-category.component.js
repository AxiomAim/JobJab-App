import { Component, Input } from "@angular/core";
import { BaseAngular } from "survey-angular-ui";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "./toolbox-tool.component";
import * as i3 from "@angular/common";
export class ToolboxCategoryComponent extends BaseAngular {
    getModel() {
        return this.category;
    }
    trackItemBy(_, item) {
        return item.renderedId;
    }
}
ToolboxCategoryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ToolboxCategoryComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ToolboxCategoryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ToolboxCategoryComponent, selector: "svc-toolbox-category ", inputs: { category: "category", toolbox: "toolbox" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div class=\"svc-toolbox__category\" [class.svc-toolbox__category--collapsed]=\"category.collapsed\"\n    [class.svc-toolbox__category--empty]=\"category.empty\">\n    <div class=\"svc-toolbox__category-header-wrapper\">\n      <div class=\"svc-toolbox__category-header\"\n        (click)=\"category.toggleState()\" [key2click] [class.svc-toolbox__category-header--collapsed]=\"toolbox.canCollapseCategories\" >\n        <span class=\"svc-toolbox__category-title\">{{category.title}}</span>\n        <div *ngIf=\"toolbox.canCollapseCategories\" class=\"svc-toolbox__category-header__controls\">\n          <svg [iconName]=\"'icon-arrow-down'\" class=\"svc-toolbox__category-header__button svc-string-editor__button--expand\" [size]=\"'auto'\" sv-ng-svg-icon [visible]=\"category.collapsed\"></svg>\n          <svg [iconName]=\"'icon-arrow-up'\" class=\"svc-toolbox__category-header__button svc-string-editor__button--collapse\" [size]=\"'auto'\" sv-ng-svg-icon [visible]=\"!category.collapsed\"></svg>\n        </div>\n      </div>\n    </div>\n      <ng-container *ngFor=\"let item of category.items; trackBy: trackItemBy\">\n        <svc-toolbox-tool [item]=\"item\" [creator]=\"toolbox.creator\" [parentModel]=\"toolbox\" [isCompact]=\"false\" ></svc-toolbox-tool>\n      </ng-container>\n  </div>\n</ng-template>\n", styles: [":host { display: none; }"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: i2.ToolboxToolComponent, selector: "svc-toolbox-tool", inputs: ["creator", "item", "parentModel", "isCompact"] }], directives: [{ type: i1.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.VisibleDirective, selector: "[visible]", inputs: ["visible"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ToolboxCategoryComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-toolbox-category ",
                    templateUrl: "./toolbox-category.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { category: [{
                type: Input
            }], toolbox: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJveC1jYXRlZ29yeS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdG9vbGJveC90b29sYm94LWNhdGVnb3J5LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uL3NyYy90b29sYm94L3Rvb2xib3gtY2F0ZWdvcnkuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7OztBQVFoRCxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsV0FBb0M7SUFHaEYsUUFBUTtRQUNOLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBQ0QsV0FBVyxDQUFDLENBQVMsRUFBRSxJQUF5QjtRQUM5QyxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQzs7c0hBUlUsd0JBQXdCOzBHQUF4Qix3QkFBd0IsMElDVHJDLG0wQ0FrQkE7NEZEVGEsd0JBQXdCO2tCQUxwQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFdBQVcsRUFBRSxtQ0FBbUM7b0JBQ2hELE1BQU0sRUFBRSxDQUFDLDBCQUEwQixDQUFDO2lCQUNyQzs4QkFFVSxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQmFzZUFuZ3VsYXIgfSBmcm9tIFwic3VydmV5LWFuZ3VsYXItdWlcIjtcbmltcG9ydCB7IFF1ZXN0aW9uVG9vbGJveCwgUXVlc3Rpb25Ub29sYm94Q2F0ZWdvcnksIFF1ZXN0aW9uVG9vbGJveEl0ZW0gfSBmcm9tIFwic3VydmV5LWNyZWF0b3ItY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3ZjLXRvb2xib3gtY2F0ZWdvcnkgXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vdG9vbGJveC1jYXRlZ29yeS5jb21wb25lbnQuaHRtbFwiLFxuICBzdHlsZXM6IFtcIjpob3N0IHsgZGlzcGxheTogbm9uZTsgfVwiXVxufSlcbmV4cG9ydCBjbGFzcyBUb29sYm94Q2F0ZWdvcnlDb21wb25lbnQgZXh0ZW5kcyBCYXNlQW5ndWxhcjxRdWVzdGlvblRvb2xib3hDYXRlZ29yeT4ge1xuICBASW5wdXQoKSBjYXRlZ29yeSE6IFF1ZXN0aW9uVG9vbGJveENhdGVnb3J5O1xuICBASW5wdXQoKSB0b29sYm94ITogUXVlc3Rpb25Ub29sYm94O1xuICBnZXRNb2RlbCgpIHtcbiAgICByZXR1cm4gdGhpcy5jYXRlZ29yeTtcbiAgfVxuICB0cmFja0l0ZW1CeShfOiBudW1iZXIsIGl0ZW06IFF1ZXN0aW9uVG9vbGJveEl0ZW0pIHtcbiAgICByZXR1cm4gaXRlbS5yZW5kZXJlZElkO1xuICB9XG59XG4iLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwic3ZjLXRvb2xib3hfX2NhdGVnb3J5XCIgW2NsYXNzLnN2Yy10b29sYm94X19jYXRlZ29yeS0tY29sbGFwc2VkXT1cImNhdGVnb3J5LmNvbGxhcHNlZFwiXG4gICAgW2NsYXNzLnN2Yy10b29sYm94X19jYXRlZ29yeS0tZW1wdHldPVwiY2F0ZWdvcnkuZW1wdHlcIj5cbiAgICA8ZGl2IGNsYXNzPVwic3ZjLXRvb2xib3hfX2NhdGVnb3J5LWhlYWRlci13cmFwcGVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwic3ZjLXRvb2xib3hfX2NhdGVnb3J5LWhlYWRlclwiXG4gICAgICAgIChjbGljayk9XCJjYXRlZ29yeS50b2dnbGVTdGF0ZSgpXCIgW2tleTJjbGlja10gW2NsYXNzLnN2Yy10b29sYm94X19jYXRlZ29yeS1oZWFkZXItLWNvbGxhcHNlZF09XCJ0b29sYm94LmNhbkNvbGxhcHNlQ2F0ZWdvcmllc1wiID5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJzdmMtdG9vbGJveF9fY2F0ZWdvcnktdGl0bGVcIj57e2NhdGVnb3J5LnRpdGxlfX08L3NwYW4+XG4gICAgICAgIDxkaXYgKm5nSWY9XCJ0b29sYm94LmNhbkNvbGxhcHNlQ2F0ZWdvcmllc1wiIGNsYXNzPVwic3ZjLXRvb2xib3hfX2NhdGVnb3J5LWhlYWRlcl9fY29udHJvbHNcIj5cbiAgICAgICAgICA8c3ZnIFtpY29uTmFtZV09XCInaWNvbi1hcnJvdy1kb3duJ1wiIGNsYXNzPVwic3ZjLXRvb2xib3hfX2NhdGVnb3J5LWhlYWRlcl9fYnV0dG9uIHN2Yy1zdHJpbmctZWRpdG9yX19idXR0b24tLWV4cGFuZFwiIFtzaXplXT1cIidhdXRvJ1wiIHN2LW5nLXN2Zy1pY29uIFt2aXNpYmxlXT1cImNhdGVnb3J5LmNvbGxhcHNlZFwiPjwvc3ZnPlxuICAgICAgICAgIDxzdmcgW2ljb25OYW1lXT1cIidpY29uLWFycm93LXVwJ1wiIGNsYXNzPVwic3ZjLXRvb2xib3hfX2NhdGVnb3J5LWhlYWRlcl9fYnV0dG9uIHN2Yy1zdHJpbmctZWRpdG9yX19idXR0b24tLWNvbGxhcHNlXCIgW3NpemVdPVwiJ2F1dG8nXCIgc3Ytbmctc3ZnLWljb24gW3Zpc2libGVdPVwiIWNhdGVnb3J5LmNvbGxhcHNlZFwiPjwvc3ZnPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgaXRlbSBvZiBjYXRlZ29yeS5pdGVtczsgdHJhY2tCeTogdHJhY2tJdGVtQnlcIj5cbiAgICAgICAgPHN2Yy10b29sYm94LXRvb2wgW2l0ZW1dPVwiaXRlbVwiIFtjcmVhdG9yXT1cInRvb2xib3guY3JlYXRvclwiIFtwYXJlbnRNb2RlbF09XCJ0b29sYm94XCIgW2lzQ29tcGFjdF09XCJmYWxzZVwiID48L3N2Yy10b29sYm94LXRvb2w+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuIl19