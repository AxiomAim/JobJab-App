import { Component, Input } from "@angular/core";
import { AngularComponentFactory, BaseAngular } from "survey-angular-ui";
import * as i0 from "@angular/core";
import * as i1 from "../../toolbox/adaptive-toolbox.component";
import * as i2 from "../../components/scroll.component";
import * as i3 from "survey-angular-ui";
import * as i4 from "../../components/surface-placeholder.component";
import * as i5 from "../../page.component";
import * as i6 from "./designer-survey.component";
import * as i7 from "@angular/common";
export class DesignerTabComponent extends BaseAngular {
    get survey() {
        return this.creator.survey;
    }
    get creator() {
        return this.model.creator;
    }
    getModel() {
        return this.model;
    }
}
DesignerTabComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: DesignerTabComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
DesignerTabComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: DesignerTabComponent, selector: "svc-tab-designer", inputs: { model: "model" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div class=\"svc-flex-column\">\n    <svc-toolbox *ngIf=\"model.isToolboxVisible\" [model]=\"creator\"></svc-toolbox>\n  </div>\n  <div class=\"svc-tab-designer\" [class]=\"model.getRootCss()\" (click)=\"model.clickDesigner()\">\n    <svc-scroll>\n      <div class=\"svc-tab-designer_content\">\n        <ng-container *ngIf=\"model.showPlaceholder\">\n          <div *ngIf=\"creator.showHeaderInEmptySurvey && creator.allowEditSurveyTitle\" class=\"svc-designer-header\">\n            <div *ngIf=\"survey.renderedHasHeader\" [class]=\"survey.css.header\" [survey]=\"survey\" sv-ng-survey-header>\n            </div>\n          </div>\n          <div class=\"svc-designer__placeholder-container\" [attr.data-sv-drop-target-survey-element]=\"'newGhostPage'\">\n            <svc-surface-placeholder [name]=\"'designer'\" [placeholderTitleText]=\"model.placeholderTitleText\"\n              [placeholderDescriptionText]=\"model.placeholderDescriptionText\">\n            </svc-surface-placeholder>\n            <div class=\"svc-designer-placeholder-page\">\n              <svc-page [model]=\"model.newPage\" [survey]=\"survey\" [creator]=\"creator\" [isGhost]=\"true\"></svc-page>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"!model.showPlaceholder\">\n          <svc-designer-survey [model]=\"model\"></svc-designer-survey>\n        </ng-container>\n      </div>\n    </svc-scroll>\n  </div>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.AdaptiveToolboxComponent, selector: "svc-toolbox", inputs: ["model"] }, { type: i2.ScrollComponent, selector: "svc-scroll" }, { type: i3.SurveyHeaderComponent, selector: "'[sv-ng-survey-header]'", inputs: ["survey"] }, { type: i4.SurfacePlaceholderComponent, selector: "svc-surface-placeholder", inputs: ["name", "placeholderTitleText", "placeholderDescriptionText"] }, { type: i5.PageDesignerComponent, selector: "svc-page", inputs: ["model", "survey", "creator", "isGhost"] }, { type: i6.DesignerSurveyComponent, selector: "svc-designer-survey", inputs: ["model"] }], directives: [{ type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: DesignerTabComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-tab-designer",
                    templateUrl: "./designer.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { model: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("svc-tab-designer", DesignerTabComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzaWduZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3RhYnMvZGVzaWduZXIvZGVzaWduZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vc3JjL3RhYnMvZGVzaWduZXIvZGVzaWduZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7Ozs7QUFRekUsTUFBTSxPQUFPLG9CQUFxQixTQUFRLFdBQWlDO0lBRXpFLElBQVcsTUFBTTtRQUNmLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7SUFDN0IsQ0FBQztJQUNELElBQVcsT0FBTztRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO0lBQzVCLENBQUM7SUFDUyxRQUFRO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDOztrSEFWVSxvQkFBb0I7c0dBQXBCLG9CQUFvQiwyR0NUakMsMDhDQTJCYzs0RkRsQkQsb0JBQW9CO2tCQUxoQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFdBQVcsRUFBRSwyQkFBMkI7b0JBQ3hDLE1BQU0sRUFBRSxDQUFDLDBCQUEwQixDQUFDO2lCQUNyQzs4QkFFVSxLQUFLO3NCQUFiLEtBQUs7O0FBV1IsdUJBQXVCLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLGtCQUFrQixFQUFFLG9CQUFvQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEFuZ3VsYXJDb21wb25lbnRGYWN0b3J5LCBCYXNlQW5ndWxhciB9IGZyb20gXCJzdXJ2ZXktYW5ndWxhci11aVwiO1xuaW1wb3J0IHsgVGFiRGVzaWduZXJWaWV3TW9kZWwgfSBmcm9tIFwic3VydmV5LWNyZWF0b3ItY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3ZjLXRhYi1kZXNpZ25lclwiLFxuICB0ZW1wbGF0ZVVybDogXCIuL2Rlc2lnbmVyLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlczogW1wiOmhvc3QgeyBkaXNwbGF5OiBub25lOyB9XCJdXG59KVxuZXhwb3J0IGNsYXNzIERlc2lnbmVyVGFiQ29tcG9uZW50IGV4dGVuZHMgQmFzZUFuZ3VsYXI8VGFiRGVzaWduZXJWaWV3TW9kZWw+IHtcbiAgQElucHV0KCkgbW9kZWwhOiBUYWJEZXNpZ25lclZpZXdNb2RlbDtcbiAgcHVibGljIGdldCBzdXJ2ZXkoKSB7XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRvci5zdXJ2ZXk7XG4gIH1cbiAgcHVibGljIGdldCBjcmVhdG9yKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLmNyZWF0b3I7XG4gIH1cbiAgcHJvdGVjdGVkIGdldE1vZGVsKCk6IFRhYkRlc2lnbmVyVmlld01vZGVsIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxufVxuQW5ndWxhckNvbXBvbmVudEZhY3RvcnkuSW5zdGFuY2UucmVnaXN0ZXJDb21wb25lbnQoXCJzdmMtdGFiLWRlc2lnbmVyXCIsIERlc2lnbmVyVGFiQ29tcG9uZW50KTsiLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwic3ZjLWZsZXgtY29sdW1uXCI+XG4gICAgPHN2Yy10b29sYm94ICpuZ0lmPVwibW9kZWwuaXNUb29sYm94VmlzaWJsZVwiIFttb2RlbF09XCJjcmVhdG9yXCI+PC9zdmMtdG9vbGJveD5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJzdmMtdGFiLWRlc2lnbmVyXCIgW2NsYXNzXT1cIm1vZGVsLmdldFJvb3RDc3MoKVwiIChjbGljayk9XCJtb2RlbC5jbGlja0Rlc2lnbmVyKClcIj5cbiAgICA8c3ZjLXNjcm9sbD5cbiAgICAgIDxkaXYgY2xhc3M9XCJzdmMtdGFiLWRlc2lnbmVyX2NvbnRlbnRcIj5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIm1vZGVsLnNob3dQbGFjZWhvbGRlclwiPlxuICAgICAgICAgIDxkaXYgKm5nSWY9XCJjcmVhdG9yLnNob3dIZWFkZXJJbkVtcHR5U3VydmV5ICYmIGNyZWF0b3IuYWxsb3dFZGl0U3VydmV5VGl0bGVcIiBjbGFzcz1cInN2Yy1kZXNpZ25lci1oZWFkZXJcIj5cbiAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJzdXJ2ZXkucmVuZGVyZWRIYXNIZWFkZXJcIiBbY2xhc3NdPVwic3VydmV5LmNzcy5oZWFkZXJcIiBbc3VydmV5XT1cInN1cnZleVwiIHN2LW5nLXN1cnZleS1oZWFkZXI+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwic3ZjLWRlc2lnbmVyX19wbGFjZWhvbGRlci1jb250YWluZXJcIiBbYXR0ci5kYXRhLXN2LWRyb3AtdGFyZ2V0LXN1cnZleS1lbGVtZW50XT1cIiduZXdHaG9zdFBhZ2UnXCI+XG4gICAgICAgICAgICA8c3ZjLXN1cmZhY2UtcGxhY2Vob2xkZXIgW25hbWVdPVwiJ2Rlc2lnbmVyJ1wiIFtwbGFjZWhvbGRlclRpdGxlVGV4dF09XCJtb2RlbC5wbGFjZWhvbGRlclRpdGxlVGV4dFwiXG4gICAgICAgICAgICAgIFtwbGFjZWhvbGRlckRlc2NyaXB0aW9uVGV4dF09XCJtb2RlbC5wbGFjZWhvbGRlckRlc2NyaXB0aW9uVGV4dFwiPlxuICAgICAgICAgICAgPC9zdmMtc3VyZmFjZS1wbGFjZWhvbGRlcj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdmMtZGVzaWduZXItcGxhY2Vob2xkZXItcGFnZVwiPlxuICAgICAgICAgICAgICA8c3ZjLXBhZ2UgW21vZGVsXT1cIm1vZGVsLm5ld1BhZ2VcIiBbc3VydmV5XT1cInN1cnZleVwiIFtjcmVhdG9yXT1cImNyZWF0b3JcIiBbaXNHaG9zdF09XCJ0cnVlXCI+PC9zdmMtcGFnZT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFtb2RlbC5zaG93UGxhY2Vob2xkZXJcIj5cbiAgICAgICAgICA8c3ZjLWRlc2lnbmVyLXN1cnZleSBbbW9kZWxdPVwibW9kZWxcIj48L3N2Yy1kZXNpZ25lci1zdXJ2ZXk+XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPC9kaXY+XG4gICAgPC9zdmMtc2Nyb2xsPlxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+Il19