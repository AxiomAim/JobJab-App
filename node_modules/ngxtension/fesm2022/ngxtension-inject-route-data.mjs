import { inject } from '@angular/core';
import { toSignal } from '@angular/core/rxjs-interop';
import { ActivatedRoute } from '@angular/router';
import { assertInjector } from 'ngxtension/assert-injector';
import { map } from 'rxjs';

function injectRouteData(keyOrTransform, options = {}) {
    return assertInjector(injectRouteData, options?.injector, () => {
        const route = inject(ActivatedRoute);
        const initialRouteData = route.snapshot.data || {};
        const { defaultValue } = options;
        if (!keyOrTransform) {
            return toSignal(route.data, { initialValue: initialRouteData });
        }
        if (typeof keyOrTransform === 'function') {
            return toSignal(route.data.pipe(map(keyOrTransform)), {
                initialValue: keyOrTransform(initialRouteData),
            });
        }
        const getDataParam = (data) => {
            const param = data?.[keyOrTransform];
            return param ?? defaultValue ?? null;
        };
        return toSignal(route.data.pipe(map(getDataParam)), {
            initialValue: getDataParam(initialRouteData),
        });
    });
}

/**
 * Generated bundle index. Do not edit.
 */

export { injectRouteData };
//# sourceMappingURL=ngxtension-inject-route-data.mjs.map
